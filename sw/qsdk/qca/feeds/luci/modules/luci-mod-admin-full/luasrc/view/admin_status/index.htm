<%#
 Copyright 2008 Steven Barth <steven@midlink.org>
 Copyright 2008-2011 Jo-Philipp Wich <jow@openwrt.org>
 Licensed to the public under the Apache License 2.0.
-%>

<%
	local fs = require "nixio.fs"
	local util = require "luci.util"
	local stat = require "luci.tools.status"
	local ver = require "luci.version"

	local has_ipv6 = fs.access("/proc/net/ipv6_route")
	local has_dhcp = fs.access("/etc/config/dhcp")
	local has_wifi = ((fs.stat("/etc/config/wireless", "size") or 0) > 0)
	local eth_mac = luci.sys.exec("cat /sys/class/net/eth0/address")

	local sysinfo = luci.util.ubus("system", "info") or { }
	local boardinfo = luci.util.ubus("system", "board") or { }
	local unameinfo = nixio.uname() or { }
	local eth1_status =  luci.sys.exec("cat /sys/class/net/eth0/operstate")
	local eth1_speed =  luci.sys.exec("ethtool eth0 | grep Speed")
	local eth1_duplex =  luci.sys.exec("ethtool eth0 | grep Duplex")
    local eth_has_link 
    local eth_has_no_link
	local model_name =  luci.sys.exec("cat /etc/model")

    local uci  = require "luci.model.uci".cursor()
    local currTemperature = uci:get_first("system", "system", "temperature")
   

	local meminfo = sysinfo.memory or {
		total = 0,
		free = 0,
		buffered = 0,
		shared = 0
	}

	local swapinfo = sysinfo.swap or {
		total = 0,
		free = 0
	}

    if (string.match(eth1_status, "up")) then
        eth_has_link = true
	end
    if (string.match(eth1_status, "down")) then
        eth_has_no_link = true 
	end



	local has_dsl = fs.access("/etc/init.d/dsl_control")

	if luci.http.formvalue("status") == "1" then
		local ntm = require "luci.model.network".init()
		local wan = ntm:get_wannet()
		local wan6 = ntm:get_wan6net()

		local conn_count = tonumber((
			luci.sys.exec("wc -l /proc/net/nf_conntrack") or
			luci.sys.exec("wc -l /proc/net/ip_conntrack") or
			""):match("%d+")) or 0

		local conn_max = tonumber((
			luci.sys.exec("sysctl net.nf_conntrack_max") or
			luci.sys.exec("sysctl net.ipv4.netfilter.ip_conntrack_max") or
			""):match("%d+")) or 4096

		local rv = {
			uptime     = sysinfo.uptime or 0,
			localtime  = os.date(),
			loadavg    = sysinfo.load or { 0, 0, 0 },
			memory     = meminfo,
			swap       = swapinfo,
			connmax    = conn_max,
			conncount  = conn_count,
			leases     = stat.dhcp_leases(),
			leases6    = stat.dhcp6_leases(),
			wifinets   = stat.wifi_networks()
		}

		if wan then
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = wan:proto(),
				ifname  = wan:ifname(),
				link    = wan:adminlink()
			}
		end

		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		if has_dsl then
			local dsl_stat = luci.sys.exec("/etc/init.d/dsl_control lucistat")
			local dsl_func = loadstring(dsl_stat)
			if dsl_func then
				rv.dsl = dsl_func()
			end
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end
        function uciget(cmd)
                local res = luci.util.exec(cmd)
                local str = string.gsub(res, "\n", "")
                return str
        end
        local links = luci.sys.exec("wlanconfig ath1 list sta | wc -l")
        links = string.gsub(links, "\n", "")
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[
var no_of_links = "<%=links%>";
if( no_of_links > 1 )
    no_of_links = no_of_links - 1;
else
    no_of_links = 0;
	function progressbar(v, m)
	{
		var vn = parseInt(v) || 0;
		var mn = parseInt(m) || 100;
		var pc = Math.floor((100 / mn) * vn);

		return String.format(
			'<div style="width:200px; position:relative; border:1px solid #999999">' +
				'<div style="background-color:#CCCCCC; width:%d%%; height:15px">' +
					'<div style="position:absolute; left:0; top:0; text-align:center; width:100%%; color:#000000">' +
						'<small>%s / %s (%d%%)</small>' +
					'</div>' +
				'</div>' +
			'</div>', pc, v, m, pc
		);
	}

function get_links()
{
    var id = 6;
    XHR.get('<%=luci.dispatcher.build_url("admin", "no_of_links")%>/' + id, null,
	function(x, data) {
		if (data) { 
            if( data > 1 )
               data = data - 1;
            else
               data = 0;
			document.getElementById("links_id").innerHTML=data;
		}
	}
    );
}
function get_log()
{
    var id = 6;
    XHR.get('<%=luci.dispatcher.build_url("admin", "eventlog")%>/' + id, null,
	function(x, data) {
		if (data) { 
			document.getElementById("result").innerHTML=data;
		}
	}
    );
}
	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	XHR.poll(5, '<%=REQUEST_URI%>', { status: 1 },
		function(x, info)
		{
            get_log();
            get_links();
			<% if has_wifi then %>
			var assoclist = [ ];

			var ws = document.getElementById('wifi_status_table');
			if (ws)
			{
				var wsbody = ws.rows[0].parentNode;
				while (ws.rows.length > 0)
					wsbody.deleteRow(0);

				for (var didx = 0; didx < info.wifinets.length; didx++)
				{
					var dev = info.wifinets[didx];

					var tr = wsbody.insertRow(-1);
					var td;

					td = tr.insertCell(-1);
					td.width     = "33%";
					td.innerHTML = dev.name;
					td.style.verticalAlign = "top";

					td = tr.insertCell(-1);

					var s = '';

					for (var nidx = 0; nidx < dev.networks.length; nidx++)
					{
						var net = dev.networks[nidx];
						var is_assoc = (net.bssid != '00:00:00:00:00:00' && net.channel && !net.disabled);

						var icon;
						if (!is_assoc)
							icon = "<%=resource%>/icons/signal-none.png";
						else if (net.quality == 0)
							icon = "<%=resource%>/icons/signal-0.png";
						else if (net.quality < 25)
							icon = "<%=resource%>/icons/signal-0-25.png";
						else if (net.quality < 50)
							icon = "<%=resource%>/icons/signal-25-50.png";
						else if (net.quality < 75)
							icon = "<%=resource%>/icons/signal-50-75.png";
						else
							icon = "<%=resource%>/icons/signal-75-100.png";

						s += String.format(
							'<table><tr><td style="text-align:center; width:32px; padding:3px">' +
								'<img src="%s" title="<%:Signal%>: %d dBm / <%:Noise%>: %d dBm" />' +
								'<br /><small>%d%%</small>' +
							'</td><td style="text-align:left; padding:3px"><small>' +
								'<strong><%:SSID%>:</strong> %h<br />' +
								'<strong><%:Mode%>:</strong> %s<br />' +
								'<strong><%:Channel%>:</strong> %d (%.3f <%:GHz%>)<br />' +
								'<strong><%:Bitrate%>:</strong> %s <%:Mbit/s%><br />',
								icon, net.signal, net.noise,
								net.quality,
								net.ssid,
								net.mode,
								net.channel, net.frequency,
								(net.bitrate * 1000) || '?'
						);

						if (is_assoc)
						{
							s += String.format(
								'<strong><%:BSSID%>:</strong> %s<br />' +
								'<strong><%:Encryption%>:</strong> %s',
									net.bssid,
									net.encryption
							);
						}
						else
						{
							s += '<em><%:Wireless is disabled or not associated%></em>';
						}

						s += '</small></td></tr></table>';

						for (var bssid in net.assoclist)
						{
							assoclist.push({
								bssid:    bssid,
								signal:   net.assoclist[bssid].signal,
								noise:    net.assoclist[bssid].noise,
								rx_rate:  net.assoclist[bssid].rx_rate,
								rx_mcs:   net.assoclist[bssid].rx_mcs,
								rx_40mhz: net.assoclist[bssid].rx_40mhz,
								tx_rate:  net.assoclist[bssid].tx_rate,
								tx_mcs:   net.assoclist[bssid].tx_mcs,
								tx_40mhz: net.assoclist[bssid].tx_40mhz,
								tx_tput: net.assoclist[bssid].tx_tput,
								rx_tput: net.assoclist[bssid].rx_tput,
								local_snr_a1: net.assoclist[bssid].local_snr_a1,
								local_snr_a2: net.assoclist[bssid].local_snr_a2,
								remote_snr_a1: net.assoclist[bssid].remote_snr_a1,
								remote_snr_a2: net.assoclist[bssid].remote_snr_a2,
								link:     net.link,
								name:     net.name
							});
						}
					}

					if (!s)
						s = '<em><%:No information available%></em>';

					td.innerHTML = s;
				}
			}

						<% end %>

			var e;

			if (e = document.getElementById('localtime'))
				e.innerHTML = info.localtime;

			if (e = document.getElementById('uptime'))
				e.innerHTML = String.format('%t', info.uptime);

			if (e = document.getElementById('loadavg'))
				e.innerHTML = String.format(
					'%.02f, %.02f, %.02f',
					info.loadavg[0] / 65535.0,
					info.loadavg[1] / 65535.0,
					info.loadavg[2] / 65535.0
				);

			if (e = document.getElementById('memtotal'))
				e.innerHTML = progressbar(
					((info.memory.free + info.memory.buffered) / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('memfree'))
				e.innerHTML = progressbar(
					(info.memory.free / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('membuff'))
				e.innerHTML = progressbar(
					(info.memory.buffered / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('swaptotal'))
				e.innerHTML = progressbar(
					(info.swap.free / 1024) + " <%:kB%>",
					(info.swap.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('swapfree'))
				e.innerHTML = progressbar(
					(info.swap.free / 1024) + " <%:kB%>",
					(info.swap.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('conns'))
				e.innerHTML = progressbar(info.conncount, info.connmax);

		}
	);
//]]></script>

<div class="main-page"> 
<div class="sidebar"> <%+sidebar%></div>                                                                                                                                   
<div class="page-content index">
<h2><a id="content" name="content"><%:Status%></a></h2>
<fieldset class="cbi-section half one">
	<legend><%:System%></legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%"><%:Hostname%></td><td><%=luci.sys.hostname() or "?"%></td></tr>
		<tr><td width="33%"><%:Model%></td><td><%=model_name %></td></tr>
		<tr><td width="33%"><%:Local Time%></td><td id="localtime">-</td></tr>
		<tr><td width="33%"><%:Uptime%></td><td id="uptime">-</td></tr>
		<tr><td width="33%">Temperature</td><td><%=currTemperature%> &#8451;</td></tr>
		<tr><td width="33%"><%:Ethernet MAC%></td><td><%=eth_mac%></td></tr>
        <% if eth_has_link then %>
		    <tr><td width="33%"><%:Ethernet status%></td><td><img src="<%=resource%>/icons/ethernet.png" /> Link is <%=eth1_status %>  <%=eth1_speed %> <%=eth1_duplex %></td></tr>
        <% end %>
        <% if eth_has_no_link then %>
                    <tr><td width="33%"><%:Ethernet status%></td><td><img src="<%=resource%>/icons/ethernet_disabled.png" /> Link is <%=eth1_status %> </td></tr>
        <% end %>
		<tr><td width="33%"><%:IP Address%></td><td><%=uciget('uci get network.lan.ipaddr')%></td></tr>
		<tr><td width="33%"><%:Customer Name%></td><td><%=uciget('uci get system.customer.name')%></td></tr>
		<tr><td width="33%"><%:Link Id%></td><td><%=uciget('uci get system.customer.linkid')%></td></tr>
		<tr><td width="33%"><%:GPS Coordinates%></td><td><%=uciget('uci get system.gps.latitude')%>' <%=uciget('uci get system.gps.longitude')%>''</td></tr>
		<tr><td width="33%"><%:Remote Partners%></td><td id="links_id"><script type="text/javascript">document.write(no_of_links)</script></td></tr>
	</table>
</fieldset>
<% if has_wifi then %>
<fieldset class="cbi-section half">
	<legend><%:Wireless%></legend>

	<table id="wifi_status_table" width="100%" cellspacing="10">
		<tr><td><em><%:Collecting data...%></em></td></tr>
	</table>

</fieldset>
<div>&nbsp;</div>
<h2><a id="content" name="content"><%:Eventlog%></a></h2>
<div id="content_wifi1stats">
<textarea readonly="readonly" wrap="off" style="width:950px; height:180px;" rows="<%=eventlog:cmatch("\n")+2%>" id="result"><%=eventlog:pcdata()%></textarea>
</div>
<% end %>

<%-
	local incdir = util.libpath() .. "/view/admin_status/index/"
	if fs.access(incdir) then
		local inc
		for inc in fs.dir(incdir) do
			if inc:match("%.htm$") then
				include("admin_status/index/" .. inc:gsub("%.htm$", ""))
			end
		end
	end
-%>
</div>
</div>
<%+footer%>
