<%#
 Copyright 2008 Steven Barth <steven@midlink.org>
 Copyright 2008-2011 Jo-Philipp Wich <jow@openwrt.org>
 Licensed to the public under the Apache License 2.0.
-%>

<%
	local fs = require "nixio.fs"
	local util = require "luci.util"
	local stat = require "luci.tools.status"
	local ver = require "luci.version"

	local has_ipv6 = fs.access("/proc/net/ipv6_route")
	local has_dhcp = fs.access("/etc/config/dhcp")
	local has_wifi = ((fs.stat("/etc/config/wireless", "size") or 0) > 0)
	local eth_mac = luci.sys.exec("cat /sys/class/net/eth0/address")

	local sysinfo = luci.util.ubus("system", "info") or { }
	local boardinfo = luci.util.ubus("system", "board") or { }
	local unameinfo = nixio.uname() or { }
	local eth1_status =  luci.sys.exec("cat /sys/class/net/eth0/operstate")
	local eth1_speed =  luci.sys.exec("ethtool eth0 | grep Speed")
	local eth1_duplex =  luci.sys.exec("ethtool eth0 | grep Duplex")
    local gw = luci.sys.exec("ip route get 1 | awk '{print $NF;exit}'")
    local eth_has_link 
    local eth_has_no_link
	local serial_no =  luci.sys.exec("fw_printenv -n amigoserial")

    local uci  = require "luci.model.uci".cursor()
    local currTemperature = uci:get_first("system", "system", "temperature")
    local cablen = luci.sys.exec("ssdk_sh port cdt run 5 0 | grep cable")
   

	local meminfo = sysinfo.memory or {
		total = 0,
		free = 0,
		buffered = 0,
		shared = 0
	}

	local swapinfo = sysinfo.swap or {
		total = 0,
		free = 0
	}

    if (string.match(eth1_status, "up")) then
        eth_has_link = true
	end
    if (string.match(eth1_status, "down")) then
        eth_has_no_link = true 
	end

	local has_dsl = fs.access("/etc/init.d/dsl_control")

	if luci.http.formvalue("status") == "1" then
		local ntm = require "luci.model.network".init()
		local wan = ntm:get_wannet()
		local wan6 = ntm:get_wan6net()

		local conn_count = tonumber((
			luci.sys.exec("wc -l /proc/net/nf_conntrack") or
			luci.sys.exec("wc -l /proc/net/ip_conntrack") or
			""):match("%d+")) or 0

		local conn_max = tonumber((
			luci.sys.exec("sysctl net.nf_conntrack_max") or
			luci.sys.exec("sysctl net.ipv4.netfilter.ip_conntrack_max") or
			""):match("%d+")) or 4096

		local rv = {
			uptime     = sysinfo.uptime or 0,
			localtime  = os.date(),
			loadavg    = sysinfo.load or { 0, 0, 0 },
			memory     = meminfo,
			swap       = swapinfo,
			connmax    = conn_max,
			conncount  = conn_count,
			leases     = stat.dhcp_leases(),
			leases6    = stat.dhcp6_leases(),
			wifinets   = stat.wifi_networks()
		}

		if wan then
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = wan:proto(),
				ifname  = wan:ifname(),
				link    = wan:adminlink()
			}
		end

		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		if has_dsl then
			local dsl_stat = luci.sys.exec("/etc/init.d/dsl_control lucistat")
			local dsl_func = loadstring(dsl_stat)
			if dsl_func then
				rv.dsl = dsl_func()
			end
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end
        function uciget(cmd)
                local res = luci.util.exec(cmd)
                local str = string.gsub(res, "\n", "")
                return str
        end
    eth1_status = string.gsub(eth1_status, "\n", "")
    eth1_speed = string.gsub(eth1_speed, "\n", "")
    eth1_duplex = string.gsub(eth1_duplex, "\n", "")
    cablen = string.gsub(cablen, "\n", "")
    gw = string.gsub(gw, "\n", "")
-%>

<%+header%>

<style type="text/css">
.up_icon
{
    border: 1px solid #a5bc23;
    background-color: #a5bc23;
} 
.down_icon
{
    border: 1px solid #C1C1BF;
    background-color: #C1C1BF;
}
</style>
<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[
var eth1_status = "<%=eth1_status %>";
var eth1_speed = "<%=eth1_speed %>";
var eth1_duplex = "<%=eth1_duplex %>";
var cablen = "<%=cablen %>";
var dns = "<%=uciget('uci get network.lan.dns')%>";
var network_mode = "<%=uciget('uci get network.param.networkmode')%>";
var route_ip = "<%=uciget('uci get network.kweth.ipaddr')%>";
var route_mask = "<%=uciget('uci get network.kweth.netmask')%>";
var dhcp = "<%=uciget('uci get network.lan.proto')%>";
var country = "<%=uciget('uci get wireless.wifi1.country')%>";
var shaping = "<%=uciget('uci get wireless.@wifi-iface[1].shaping')%>";
var ullmt = "<%=uciget('uci get wireless.@wifi-iface[1].ullmt')%>";
var dllmt = "<%=uciget('uci get wireless.@wifi-iface[1].dllmt')%>";
var gps_n = "<%=uciget('uci get system.gps.latitude')%>";
var gps_e = "<%=uciget('uci get system.gps.longitude')%>";
var gps = "-";
if( gps_n != 0 ) {
    gps = gps_n + " " + gps_e;
}
cablen = cablen.split(":");
eth1_speed = eth1_speed.split("Speed:");
eth1_speed = eth1_speed[1];
eth1_duplex = eth1_duplex.split("Duplex:");
eth1_duplex = eth1_duplex[1];
ullmt = ullmt > 1000 ? (ullmt / 1000) : 0;
dllmt = dllmt > 1000 ? (dllmt / 1000) : 0;
shaping = ( shaping == 0 ? "Disabled" : "Enabled" );
route = ( network_mode == 1 ? "Disabled" : "Enabled" );
dhcp = ( dhcp == "static" ? "Disabled" : "Enabled" );
if( dns == "" )
    dns = "0.0.0.0";
if( country == 5016 ) {
    country = "INDIA UL";
}
else if( country == 5017 ) {
    country = "INDIA L";
}
else {
    country = "RUSSIA";
}
var gw = "<%=gw %>";
var dyn_val = "<%=uciget("ifconfig br-lan | grep 'inet addr' | sed 's/          //'")%>";
var val = dyn_val.split(" ");
var ip = "0.0.0.0";
var mask = "0.0.0.0";
if( val != "" )
{
    ip = val[1].split(":");
    ip = ( network_mode == 1 ? ip[1] : route_ip );
    mask = val[5].split(":");
    mask = ( network_mode == 1 ? mask[1] : route_mask );
}

	function progressbar(v, m)
	{
		var vn = parseInt(v) || 0;
		var mn = parseInt(m) || 100;
		var pc = Math.floor((100 / mn) * vn);

		return String.format(
			'<div style="width:200px; position:relative; border:1px solid #999999">' +
				'<div style="background-color:#CCCCCC; width:%d%%; height:15px">' +
					'<div style="position:absolute; left:0; top:0; text-align:center; width:100%%; color:#000000">' +
						'<small>%s / %s (%d%%)</small>' +
					'</div>' +
				'</div>' +
			'</div>', pc, v, m, pc
		);
	}

function clear_log()
{
    var id = 1;
    XHR.get('<%=luci.dispatcher.build_url("admin")%>/clr_eventlog' + '/' + id, null,
	function(x, data) {
		if (data) { 
			document.getElementById("result").innerHTML=data;
		}
	}
    );
}
function get_links()
{
    var id = 6;
    XHR.get('<%=luci.dispatcher.build_url("admin", "no_of_links")%>/' + id, null,
	function(x, data) {
		if (data) { 
            var l = data.split("=");
            var l1 = ( ( l[0] > 1 ) ? ( l[0] - 1 ) : 0 );
            var l2 = ( ( l[1] > 1 ) ? ( l[1] - 1 ) : 0 );
			document.getElementById("links1").innerHTML = l1;
			document.getElementById("links2").innerHTML = l2;
		}
	}
    );
    XHR.get('<%=luci.dispatcher.build_url("admin", "stats")%>/' + id, null,
	function(x, data) {
		if (data) { 
            var s = data.split("=");
			document.getElementById("ethtx").innerHTML = s[6] > (1000 * 1000) ? (s[6] / ( 1000 * 1000 )).toFixed(2) : 0;
			document.getElementById("ethrx").innerHTML = s[7] > (1000 * 1000) ? (s[7] / ( 1000 * 1000 )).toFixed(2) : 0;
			document.getElementById("wi1tx").innerHTML = s[8] > (1000 * 1000) ? (s[8] / ( 1000 * 1000 )).toFixed(2) : 0;
			document.getElementById("wi1rx").innerHTML = s[9] > (1000 * 1000) ? (s[9] / ( 1000 * 1000 )).toFixed(2) : 0;
			document.getElementById("wi2tx").innerHTML = s[11] > (1000 * 1000) ? (s[11] / ( 1000 * 1000 )).toFixed(2) : 0;
			document.getElementById("wi2rx").innerHTML = s[12] > (1000 * 1000) ? (s[12] / ( 1000 * 1000 )).toFixed(2) : 0;
		}
	}
    );
}
function get_desc()
{
    var id = 1;
    XHR.get('<%=luci.dispatcher.build_url("admin")%>/get_descr' + '/' + id, null,
	function(x, data) {
		if (data) {
            var model_uci = "<%=uciget('uci get variant.variant.model')%>"
            var prod_uci = "<%=uciget('uci get variant.variant.productid')%>"
            var maj_num = "<%=uciget('uci get variant.variant.majnum')%>"
            var min_num = "<%=uciget('uci get variant.variant.minnum')%>"
            var build_no = "<%=uciget('uci get variant.variant.buildno')%>"
            var m = data.split("=");
            var model_name=model_uci, prod_type=prod_uci;
            if( m[0] != "" ) {
                model_name = m[0];
            }
            if( m[1] != "" ) {
                prod_type = m[1];
            }
            if( model_name == "1" ) 
                model_name = "MAP100";
            prod_type = ( prod_type == 1 ? "PTP" : "PTMP" );
            var str = model_name + " - " + prod_type + " - " + maj_num + "." + min_num + " ( " + build_no + " )";
			document.getElementById("desc").innerHTML=str;
		}
	}
    );
}
function get_log()
{
    var id = 6;
    XHR.get('<%=luci.dispatcher.build_url("admin", "eventlog")%>/' + id, null,
	function(x, data) {
		if (data) { 
			document.getElementById("result").innerHTML=data;
		}
	}
    );
}
	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	XHR.poll(5, '<%=REQUEST_URI%>', { status: 1 },
		function(x, info)
		{
            //get_log();
            get_links();
			<% if has_wifi then %>
			var assoclist = [ ];

			{
				for (var didx = 0; didx < info.wifinets.length; didx++)
				{
					var dev = info.wifinets[didx];


					var s = '';

					for (var nidx = 0; nidx < dev.networks.length; nidx++)
					{
						var net = dev.networks[nidx];
						var is_assoc = (net.bssid != '00:00:00:00:00:00' && net.channel && !net.disabled);

						var icon;
						if (!is_assoc)
							icon = "<%=resource%>/icons/signal-none.png";
						else if (net.quality == 0)
							icon = "<%=resource%>/icons/signal-0.png";
						else if (net.quality < 25)
							icon = "<%=resource%>/icons/signal-0-25.png";
						else if (net.quality < 50)
							icon = "<%=resource%>/icons/signal-25-50.png";
						else if (net.quality < 75)
							icon = "<%=resource%>/icons/signal-50-75.png";
						else
							icon = "<%=resource%>/icons/signal-75-100.png";

						s += String.format(
							'<table><tr><td style="text-align:center; width:32px; padding:3px">' +
								'<img src="%s" title="<%:Signal%>: %d dBm / <%:Noise%>: %d dBm" />' +
								'<br /><small>%d%%</small>' +
							'</td><td style="text-align:left; padding:3px"><small>' +
								'<strong><%:SSID%>:</strong> %h<br />' +
								'<strong><%:Mode%>:</strong> %s<br />' +
								'<strong><%:Channel%>:</strong> %d (%.3f <%:GHz%>)<br />' +
								'<strong><%:Bitrate%>:</strong> %s <%:Mbit/s%><br />',
								icon, net.signal, net.noise,
								net.quality,
								net.ssid,
								net.mode,
								net.channel, net.frequency,
								(net.bitrate * 1000) || '?'
						);
                        if( didx == 1 ) {
                            document.getElementById("mac1").innerHTML = "<%=uciget('uci get wireless.wifi1.macaddr')%>"; 
                            document.getElementById("mode1").innerHTML = "<b>"+net.mode+"<b>"; 
                            var radio_status = "<%=uciget('uci get wireless.@wifi-iface[1].disabled')%>";
                            document.getElementById("status1").innerHTML = ( radio_status == 1 ? "Disabled" : "Enabled" );
                            document.getElementById("opmode1").innerHTML = "<%=uciget('uci get wireless.wifi1.hwmode')%>";
                            document.getElementById("bw1").innerHTML = "<%=uciget('uci get wireless.wifi1.htmode')%>";
                            document.getElementById("ssid1").innerHTML = net.ssid;
                            if( net.channel != undefined ) {
                               var freq = net.frequency * 1000;
                               document.getElementById("chan1").innerHTML = net.channel + " ( " + freq + " MHz )"
                            }
                            var ddrs1 = "<%=uciget('uci get wireless.wifi1.ddrsstatus')%>";
                            document.getElementById("ddrs1").innerHTML = ( ddrs1 == 1 ? "Enabled" : "Disabled" );
                            if( ddrs1 == 2 ) {
                                 document.getElementById("rate1").innerHTML = "MCS" + "<%=uciget('uci get wireless.wifi1.ddrsrate')%>";
                            }
                            var atpc1 = "<%=uciget('uci get wireless.wifi1.atpcstatus')%>";
                            document.getElementById("atpc1").innerHTML = ( atpc1 == 1 ? "Enabled" : "Disabled" );
                            if( atpc1 == 2 ) {
                                 document.getElementById("pow1").innerHTML = "<%=uciget('uci get wireless.wifi1.atpcpower')%>" + " dBm";
                            }
                            document.getElementById("dis1").innerHTML = "<%=uciget('uci get wireless.wifi1.distance')%>" + " Km";
                            var enc = "None";
                            if( net.encryption != "None" ) 
                                enc = "WPA2-PSK"
                            document.getElementById("sec1").innerHTML = enc;
                        }
                        else {
                            document.getElementById("mac2").innerHTML = "<%=uciget('uci get wireless.wifi0.macaddr')%>"; 
                            document.getElementById("mode2").innerHTML = "<b>" +net.mode +"<b>"; 
                            var radio_status = "<%=uciget('uci get wireless.@wifi-iface[0].disabled')%>";
                            document.getElementById("status2").innerHTML = ( radio_status == 1 ? "Disabled" : "Enabled" );
                            document.getElementById("opmode2").innerHTML = "<%=uciget('uci get wireless.wifi0.hwmode')%>";
                            document.getElementById("bw2").innerHTML = "<%=uciget('uci get wireless.wifi0.htmode')%>";
                            document.getElementById("ssid2").innerHTML = net.ssid;
                            if( net.channel != undefined ) {
                               var freq = net.frequency * 1000;
                               document.getElementById("chan2").innerHTML = net.channel + " ( " + freq + " MHz )"
                            }
                            var rate = "<%=uciget('uci get wireless.wifi0.rate')%>";
                            document.getElementById("ddrs2").innerHTML = (rate == 21 ? "Enabled" : "Disabled");
                            if( rate != 21 ) {
                                 document.getElementById("rate2").innerHTML = "MCS" + "<%=uciget('uci get wireless.wifi0.rate')%>";
                            }
                            document.getElementById("atpc2").innerHTML = "Disabled";
                            document.getElementById("pow2").innerHTML = "<%=uciget('uci get wireless.wifi0.TXPowLim2G')%>" + " dBm";
                            document.getElementById("dis2").innerHTML = "300 m";
                            var enc = "none";
                            if( net.encryption != "None" ) 
                                enc = "WPA2-PSK"
                            document.getElementById("sec2").innerHTML = enc;
                        }
						if (is_assoc)
						{
							s += String.format(
								'<strong><%:BSSID%>:</strong> %s<br />' +
								'<strong><%:Encryption%>:</strong> %s',
									net.bssid,
									net.encryption
							);
						}
						else
						{
							s += '<em><%:Wireless is disabled or not associated%></em>';
						}

						s += '</small></td></tr></table>';

						for (var bssid in net.assoclist)
						{
							assoclist.push({
								bssid:    bssid,
								signal:   net.assoclist[bssid].signal,
								noise:    net.assoclist[bssid].noise,
								rx_rate:  net.assoclist[bssid].rx_rate,
								rx_mcs:   net.assoclist[bssid].rx_mcs,
								rx_40mhz: net.assoclist[bssid].rx_40mhz,
								tx_rate:  net.assoclist[bssid].tx_rate,
								tx_mcs:   net.assoclist[bssid].tx_mcs,
								tx_40mhz: net.assoclist[bssid].tx_40mhz,
								tx_tput: net.assoclist[bssid].tx_tput,
								rx_tput: net.assoclist[bssid].rx_tput,
								local_snr_a1: net.assoclist[bssid].local_snr_a1,
								local_snr_a2: net.assoclist[bssid].local_snr_a2,
								remote_snr_a1: net.assoclist[bssid].remote_snr_a1,
								remote_snr_a2: net.assoclist[bssid].remote_snr_a2,
								link:     net.link,
								name:     net.name
							});
						}
					}

					if (!s)
						s = '<em><%:No information available%></em>';

				}
			}

						<% end %>

			var e;

			if (e = document.getElementById('localtime'))
				e.innerHTML = info.localtime;

			if (e = document.getElementById('uptime'))
				e.innerHTML = String.format('%t', info.uptime);

			if (e = document.getElementById('loadavg'))
				e.innerHTML = String.format(
					'%.02f, %.02f, %.02f',
					info.loadavg[0] / 65535.0,
					info.loadavg[1] / 65535.0,
					info.loadavg[2] / 65535.0
				);

			if (e = document.getElementById('memtotal'))
				e.innerHTML = progressbar(
					((info.memory.free + info.memory.buffered) / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('memfree'))
				e.innerHTML = progressbar(
					(info.memory.free / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('membuff'))
				e.innerHTML = progressbar(
					(info.memory.buffered / 1024) + " <%:kB%>",
					(info.memory.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('swaptotal'))
				e.innerHTML = progressbar(
					(info.swap.free / 1024) + " <%:kB%>",
					(info.swap.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('swapfree'))
				e.innerHTML = progressbar(
					(info.swap.free / 1024) + " <%:kB%>",
					(info.swap.total / 1024) + " <%:kB%>"
				);

			if (e = document.getElementById('conns'))
				e.innerHTML = progressbar(info.conncount, info.connmax);

		}
	);
//]]></script>

<div class="main-page"> 
<div class="sidebar"> <%+sidebar%></div>                                                                                                                                   
<div class="page-content index">
<h2><a id="content" name="content"><%:Summary%></a></h2>

<table>
<tr>
<td style="border-top:0px;">
<fieldset class="cbi-section" style="width:430px;min-height:230px;padding:20px 20px;">
	<legend><%:System%></legend>
	<table width="100%" cellspacing="10">
		<tr><td width="35%"><%:Host Name%></td><td><%=luci.sys.hostname() or "?"%></td></tr>
		<tr><td width="35%"><%:Description%></td><td id="desc"></td></tr>
		<tr><td width="35%"><%:Serial Number%></td><td><%=serial_no %></td></tr>
		<tr><td width="35%"><%:Local Time%></td><td id="localtime">-</td></tr>
		<tr><td width="35%"><%:Uptime%></td><td id="uptime">-</td></tr>
		<tr><td width="35%">Temperature</td><td><%=currTemperature%> &#8451;</td></tr>
		<tr><td width="35%"><%:GPS%></td><td><script type="text/javascript">document.write(gps)</script></td></tr>
		<tr><td width="35%"><%:Customer Name%></td><td><%=uciget('uci get wireless.wifi1.customername')%></td></tr>
		<tr><td width="35%"><%:Country%></td><td><script type="text/javascript">document.write(country)</script></td></tr>
	</table>
</fieldset>
</td>
<td rowspan="2" style="border-top:0px;">
<fieldset class="cbi-section" style="width:470px;height:718px;padding:20px 20px;">
	<legend><%:Wireless%></legend>
	<table width="100%" cellspacing="10">
       <tr><td></td><td style="color:#a5bc23"><b>5 GHz<b></td><td style="color:#a5bc23"><b>2.4 GHz<b></td></tr>
       <tr><td style="padding-top:10px;">MAC</td><td id="mac1" style="padding-top:10px;">-</td><td id="mac2" style="padding-top:10px;">-</td></tr>
       <tr><td>Radio Mode</td><td id="mode1">-</td><td id="mode2">-</td></tr>
       <tr><td>Radio Status</td><td id="status1">-</td><td id="status2">-</td></tr>
       <tr><td>Operational Mode</td><td id="opmode1">-</td><td id="opmode2">-</td></tr>
       <tr><td>Bandwidth</td><td id="bw1">-</td><td id="bw2">-</td></tr>
       <tr><td>SSID</td><td id="ssid1">-</td><td id="ssid2">-</td></tr>
       <tr><td>Channel</td><td id="chan1">-</td><td id="chan2">-</td></tr>
       <tr><td>DDRS</td><td id="ddrs1">-</td><td id="ddrs2">-</td></tr>
       <tr><td>Data Rate</td><td id="rate1">-</td><td id="rate2">-</td></tr>
       <tr><td>ATPC</td><td id="atpc1">-</td><td id="atpc2">-</td></tr>
       <tr><td>Tx Power</td><td id="pow1">-</td><td id="pow2">-</td></tr>
       <tr><td>Security</td><td id="sec1">-</td><td id="sec2">-</td></tr>
       <tr><td>Distance</td><td id="dis1">-</td><td id="dis2">-</td></tr>
       <tr><td>Remote Partners</td><td id="links1">-</td><td id="links2">-</td></tr>
       <tr><td>&nbsp;</td><td></td><td></td></tr>
       <tr><td>&nbsp;</td><td></td><td></td></tr>
    </table>
    <table width="100%" cellspacing="10">
       <tr><td width="35%" style="color:#a5bc23">( Mbps )</td><td width="33%" style="color:#a5bc23"><b>TX<b></td><td style="color:#a5bc23"><b>RX<b></td><td>&nbsp;</td></tr>
       <tr><td style="padding-top:10px;">Ethernet</td><td id="ethtx" style="padding-top:10px;">-</td><td id="ethrx" style="padding-top:10px;">-</td><td>&nbsp;</td></tr>
       <tr><td>5 GHz</td><td id="wi1tx">-</td><td id="wi1rx">-</td><td>&nbsp;</td></tr>
       <tr><td>2.4 GHz</td><td id="wi2tx">-</td><td id="wi2rx">-</td><td>&nbsp;</td></tr>
    </table>
</fieldset>
</td>
</tr>
<tr>
<td style="border-top:0px;">
<fieldset class="cbi-section" style="width:430px;min-height:230px;padding:20px 20px;">
	<legend><%:Network%></legend>
	<table width="100%" cellspacing="10">
		<tr><td width="35%"><%:Ethernet MAC%></td><td><%=eth_mac%></td></tr>
		<tr><td width="35%"><%:Ethernet Status%></td><td>
        <script type="text/javascript">
        if( eth1_status == "up" ) {
            var str = "Up " + eth1_speed + " Duplex: " + eth1_duplex;
            document.write(str);
        }
        else
            document.write(" Down ");
        </script>
        </td></tr>
		<tr><td width="35%"><%:Cable Length%></td><td><script type="text/javascript">document.write(cablen[2])</script>&nbsp;m</td></tr>
		<tr><td width="35%"><%:IP Address%></td><td><script type="text/javascript">document.write(ip)</script></td></tr>
		<tr><td width="35%"><%:Subnet Mask%></td><td><script type="text/javascript">document.write(mask)</script></td></tr>
		<tr><td width="35%"><%:Gateway IP%></td><td><script type="text/javascript">document.write(gw)</script></td></tr>
		<tr><td width="35%"><%:DNS IP%></td><td><script type="text/javascript">document.write(dns)</script></td></tr>
		<tr><td width="35%"><%:DHCP Client%></td><td><script type="text/javascript">document.write(dhcp)</script></td></tr>
		<tr><td width="35%"><%:Routing Mode%></td><td><script type="text/javascript">document.write(route)</script></td></tr>
		<tr><td width="35%"><%:Traffic Shaping%></td><td><script type="text/javascript">document.write(shaping)</script></td></tr>
		<tr><td width="35%"><%:Uplink Limit%></td><td><script type="text/javascript">document.write(ullmt)</script>&nbsp;Mbps</td></tr>
		<tr><td width="35%"><%:Downlink Limit%></td><td><script type="text/javascript">document.write(dllmt)</script>&nbsp;Mbps</td></tr>
		<tr><td width="35%"><%:Link Id%></td><td>
        <script type="text/javascript">
          var mode = "<%=uciget('uci get wireless.@wifi-iface[1].mode')%>";
          var link_id = "-";
          if( mode == "sta" )
              link_id = "<%=uciget('uci get wireless.wifi1.linkid')%>";
          document.write(link_id);
        </script>
        </td></tr>
	</table>
</fieldset>
</td>
</tr>
</table>
</div>
<script type="text/javascript">
get_desc();
</script>
</div>
<%+footer%>
