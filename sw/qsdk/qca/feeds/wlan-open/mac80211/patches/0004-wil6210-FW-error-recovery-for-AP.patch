--- a/drivers/net/wireless/ath/wil6210/main.c
+++ b/drivers/net/wireless/ath/wil6210/main.c
@@ -17,6 +17,7 @@
 #include <linux/moduleparam.h>
 #include <linux/if_arp.h>
 #include <linux/etherdevice.h>
+#include <linux/rtnetlink.h>
 
 #include "wil6210.h"
 #include "txrx.h"
@@ -364,10 +365,12 @@ static void wil_fw_error_worker(struct w
 	struct wil6210_priv *wil = container_of(work, struct wil6210_priv,
 						fw_error_worker);
 	struct wireless_dev *wdev = wil->wdev;
+	struct net_device *ndev = wil_to_ndev(wil);
+	int rc;
 
 	wil_dbg_misc(wil, "fw error worker\n");
 
-	if (!netif_running(wil_to_ndev(wil))) {
+	if (!netif_running(ndev)) {
 		wil_info(wil, "No recovery - interface is down\n");
 		return;
 	}
@@ -396,6 +399,7 @@ static void wil_fw_error_worker(struct w
 	if (wil_wait_for_recovery(wil) != 0)
 		return;
 
+	rtnl_lock();
 	mutex_lock(&wil->mutex);
 	switch (wdev->iftype) {
 	case NL80211_IFTYPE_STATION:
@@ -407,8 +411,19 @@ static void wil_fw_error_worker(struct w
 		break;
 	case NL80211_IFTYPE_AP:
 	case NL80211_IFTYPE_P2P_GO:
-		wil_info(wil, "No recovery for AP-like interface\n");
-		/* recovery in these modes is done by upper layers */
+		if (no_fw_recovery) /* upper layers do recovery */
+			break;
+		/* upper layers will see down/up events */
+		wil_info(wil, "Recovery for AP-like interface - ifdown...\n");
+		mutex_unlock(&wil->mutex); /* protected by rtnl_lock */
+		dev_close(ndev); /* never returns error */
+		msleep(1000);
+		wil_info(wil, "... ifup...\n");
+		rc = dev_open(ndev);
+		if (rc)
+			wil_err(wil, "dev_open: %d\n", rc);
+		mutex_lock(&wil->mutex);
+		wil_info(wil, "... completed\n");
 		break;
 	default:
 		wil_err(wil, "No recovery - unknown interface type %d\n",
@@ -416,6 +431,7 @@ static void wil_fw_error_worker(struct w
 		break;
 	}
 	mutex_unlock(&wil->mutex);
+	rtnl_unlock();
 }
 
 static int wil_find_free_vring(struct wil6210_priv *wil)
