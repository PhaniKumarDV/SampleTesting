--- a/drivers/net/wireless/ath/ath10k/debugfs_sta.c
+++ b/drivers/net/wireless/ath/ath10k/debugfs_sta.c
@@ -438,13 +438,10 @@ static ssize_t ath10k_dbg_sta_write_addb
 	struct ath10k *ar = arsta->arvif->ar;
 	u32 tid, buf_size;
 	int ret;
-	char buf[64];
+	char buf[64]={0};
 
 	simple_write_to_buffer(buf, sizeof(buf) - 1, ppos, user_buf, count);
 
-	/* make sure that buf is null terminated */
-	buf[sizeof(buf) - 1] = '\0';
-
 	ret = sscanf(buf, "%u %u", &tid, &buf_size);
 	if (ret != 2)
 		return -EINVAL;
@@ -489,13 +486,10 @@ static ssize_t ath10k_dbg_sta_write_addb
 	struct ath10k *ar = arsta->arvif->ar;
 	u32 tid, status;
 	int ret;
-	char buf[64];
+	char buf[64]={0};
 
 	simple_write_to_buffer(buf, sizeof(buf) - 1, ppos, user_buf, count);
 
-	/* make sure that buf is null terminated */
-	buf[sizeof(buf) - 1] = '\0';
-
 	ret = sscanf(buf, "%u %u", &tid, &status);
 	if (ret != 2)
 		return -EINVAL;
@@ -539,13 +533,10 @@ static ssize_t ath10k_dbg_sta_write_delb
 	struct ath10k *ar = arsta->arvif->ar;
 	u32 tid, initiator, reason;
 	int ret;
-	char buf[64];
+	char buf[64]={0};
 
 	simple_write_to_buffer(buf, sizeof(buf) - 1, ppos, user_buf, count);
 
-	/* make sure that buf is null terminated */
-	buf[sizeof(buf) - 1] = '\0';
-
 	ret = sscanf(buf, "%u %u %u", &tid, &initiator, &reason);
 	if (ret != 3)
 		return -EINVAL;
