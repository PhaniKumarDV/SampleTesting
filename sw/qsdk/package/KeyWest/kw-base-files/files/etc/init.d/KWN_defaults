#!/bin/sh /etc/rc.common
START=15
USE_PROCD=1

start_service() {
    procd_open_instance
#VARIANT
    uci set variant.variant.buildno='130419'
    uci set variant.variant.model='1'
    uci set variant.variant.majnum='1'
    uci set variant.variant.minnum='0'
    uci set variant.variant.maxsu='32'
    uci set variant.variant.anttype1='1'
    uci set variant.variant.anttype2='1'
    uci set variant.variant.antgain1='23'
    uci set variant.variant.antgain2='3'
#Wireless
#RADIO 5
    tx_power_radio1=$(uci get wireless.wifi1.TXPowLim5G)
    tx_chainmask_radio1=$(uci get wireless.wifi1.txchainmask)
    rx_chainmask_radio1=$(uci get wireless.wifi1.rxchainmask)
    shortgi_radio1=$(uci get wireless.@wifi-iface[1].shortgi)
    shortgi_radio0=$(uci get wireless.@wifi-iface[0].shortgi)
    dis_legacy0=$(uci get wireless.@wifi-iface[0].dis_legacy)
    distance_radio1=$(uci get wireless.wifi1.distance)
    hidden_radio1=$(uci get wireless.@wifi-iface[1].hidden)
    dgackdisable=$(uci get wireless.@wifi-iface[1].dgackdisable)
    amsdu1=$(uci get wireless.@wifi-iface[1].amsdu)
    ampdu1=$(uci get wireless.@wifi-iface[1].ampdu)
    kwnnoiseoff1=$(uci get wireless.wifi1.kwnnoiseoff)
    stream1=$(uci get wireless.wifi1.spatialstream)
    ddrs1=$(uci get wireless.wifi1.ddrsstatus)
    ddrsrate1=$(uci get wireless.wifi1.ddrsrate)
    ddrsminrate1=$(uci get wireless.wifi1.ddrsminrate)
    ddrsmaxrate1=$(uci get wireless.wifi1.ddrsmaxrate)
    ddrsinctimer1=$(uci get wireless.wifi1.ddrsinctimer)
    ddrsdectimer1=$(uci get wireless.wifi1.ddrsdectimer)
    ddrsbackoff1=$(uci get wireless.wifi1.ddrsbackoff)
    ddrsincthrld1=$(uci get wireless.wifi1.ddrsincthrld)
    ddrsrtxinc1=$(uci get wireless.wifi1.ddrsrtxinc)
    ddrsrtxdec1=$(uci get wireless.wifi1.ddrsrtxdec)
    atpcstatus1=$(uci get wireless.wifi1.atpcstatus)
    maxeirp1=$(uci get wireless.wifi1.maxeirp)
    atpcpower1=$(uci get wireless.wifi1.atpcpower)
    mfganttype1=$(fw_printenv -n anttype1)
    mfggain1=$(fw_printenv -n antgain1)
    gain1=$(uci get wireless.wifi1.antennagain)
    frag1=$(uci get wireless.wifi1.assemfrag)
    maxsize1=$(uci get wireless.wifi1.maxsize)
    fragsize1=$(uci get wireless.wifi1.fragsize)
    shaping1=$(uci get wireless.@wifi-iface[1].shaping)
    dcsstatus1=$(uci get wireless.wifi1.dcsstatus)
    dcsthrld1=$(uci get wireless.wifi1.dcsthrld)
    dcstime1=$(uci get wireless.wifi1.dcstime)
    blint1=$(uci get wireless.wifi1.blint)
    suservice1=$(uci get wireless.wifi1.suservice)
    sukbps1=$(uci get wireless.wifi1.sukbps)
    mcast_rate1=$(uci get wireless.@wifi-iface[1].mcast_rate)
    bcast_rate1=$(uci get wireless.@wifi-iface[1].bcast_rate)
    mgmt_rate1=$(uci get wireless.@wifi-iface[1].mgmt_rate)
    set_bcn_rate1=$(uci get wireless.@wifi-iface[1].set_bcn_rate)
    mcast_rate0=$(uci get wireless.@wifi-iface[0].mcast_rate)
    bcast_rate0=$(uci get wireless.@wifi-iface[0].bcast_rate)
    mgmt_rate0=$(uci get wireless.@wifi-iface[0].mgmt_rate)
    set_bcn_rate0=$(uci get wireless.@wifi-iface[0].set_bcn_rate)
    wifi_timer1=$(uci get wireless.wifi1.wifitimer)
    link_timer1=$(uci get wireless.wifi1.linktimer)
    scan_timer1=$(uci get wireless.wifi1.scantimer)
    rate0=$(uci get wireless.wifi0.rate)
    mfgmaxsta=$(fw_printenv -n maxsu)
    maxsta0=$(uci get wireless.@wifi-iface[0].maxsta)
    maxsta1=$(uci get wireless.@wifi-iface[1].maxsta)
    linktype=$(uci get wireless.wifi1.linktype)
    macfilter1=$(uci get wireless.@wifi-iface[1].macfilter)
    icb1=$(uci get wireless.wifi1.icb)
    macinmac1=$(uci get wireless.wifi1.macinmac)
    rcretries1=$(uci get wireless.wifi1.rcretries)
#RADIO 2.4
    tx_power_radio2=$(uci get wireless.wifi0.TXPowLim2G)
    hidden_radio0=$(uci get wireless.@wifi-iface[0].hidden)
    macfilter0=$(uci get wireless.@wifi-iface[0].macfilter)
    radiostatus0=$(uci get wireless.@wifi-iface[0].disabled)
#Network
    dnsip=$(uci get network.lan.dns)
#Radius
    radiusstatus=$(uci get wrt-radauth.sys.enableRadAuth)
#Ethernet
    eth_timer=$(uci get ethernet.ethernet.ethtimer)
    eth_mtu=$(uci get network.lan.mtu)
#GPS
    gps_cnt=$(uci get system.gps.counter)
#VLAN
    tagmgmt=$(uci get vlan.vlan.tagmgmt)
#TFTP
    tftpkeepset=$(uci get tftp.tftp.keepset)
    http=$(uci get tftp.http)
    httpfiletype=$(uci get tftp.http.filetype)
    httpoptype=$(uci get tftp.http.optype)
#SYSTEM
    location=$(uci get system.@system[0].location)
    contact=$(uci get system.@system[0].contact)
    email=$(uci get system.@system[0].email)
    bstid=$(uci get system.@system[0].bstid)
    tcpcnt=$(uci get system.@system[0].tcpcnt)
    tcpintvl=$(uci get system.@system[0].tcpintvl)
    appusr=$(uci get system.@system[0].appuser)
    apppwd=$(uci get system.@system[0].apppass)
#UHTTPD
    inst=$(uci get uhttpd.main.instpwd)
    if [ "$inst" == "" ]
    then
        uci set uhttpd.main.instpwd='admin'
    fi

    if [ "$tx_power_radio1" == "" ]
    then
        uci set wireless.wifi1.TXPowLim5G='23'
    fi
    if [ "$tx_power_radio2" == "" ]
    then
        uci set wireless.wifi0.TXPowLim2G='23'
    fi
    if [ "$tx_chainmask_radio1" == "" ]
    then
        uci set wireless.wifi1.txchainmask='3'
    fi
    if [ "$rx_chainmask_radio1" == "" ]
    then
        uci set wireless.wifi1.rxchainmask='3'
    fi
    if [ "$shortgi_radio1" == "" ]
    then
        uci set wireless.@wifi-iface[1].shortgi='1'
    fi
    if [ "$shortgi_radio0" == "" ]
    then
        uci set wireless.@wifi-iface[0].shortgi='0'
    fi
    if [ "$dis_legacy0" == "" ]
    then
        uci set wireless.@wifi-iface[0].dis_legacy='0x000F'
    fi
    if [ "$distance_radio1" == "" ]
    then
        uci set wireless.wifi1.distance='15'
    fi
    if [ "$hidden_radio1" == "" ]
    then
        uci set wireless.@wifi-iface[1].hidden='0'
    fi
    if [ "$dgackdisable" == "" ]
    then
        uci set wireless.@wifi-iface[1].dgackdisable='0'
    fi
    if [ "$amsdu1" == "" ]
    then
        uci set wireless.@wifi-iface[1].amsdu='4'
    fi
    if [ "$ampdu1" == "" ]
    then
        uci set wireless.@wifi-iface[1].ampdu='64'
    fi
    if [ "$kwnnoiseoff1" == "" ]
    then
        uci set wireless.wifi1.kwnnoiseoff='15'
    fi
    if [ "$stream1" == "" ]
    then
        uci set wireless.wifi1.spatialstream='3'
    fi
    if [ "$ddrs1" == "" ]
    then
        uci set wireless.wifi1.ddrsstatus='1'
    fi
    if [ "$ddrsrate1" == "" ]
    then
        uci set wireless.wifi1.ddrsrate='3'
    fi
    if [ "$ddrsminrate1" == "" ]
    then
        uci set wireless.wifi1.ddrsminrate='0'
    fi
    if [ "$ddrsmaxrate1" == "" ]
    then
        uci set wireless.wifi1.ddrsmaxrate='19'
    fi
    if [ "$ddrsinctimer1" == "" ]
    then
        uci set wireless.wifi1.ddrsinctimer='2'
    fi
    if [ "$ddrsdectimer1" == "" ]
    then
        uci set wireless.wifi1.ddrsdectimer='1'
    fi
    if [ "$ddrsbackoff1" == "" ]
    then
        uci set wireless.wifi1.ddrsbackoff='300'
    fi
    if [ "$ddrsincthrld1" == "" ]
    then
        uci set wireless.wifi1.ddrsincthrld='3'
    fi
    if [ "$ddrsrtxinc1" == "" ]
    then
        uci set wireless.wifi1.ddrsrtxinc='10'
    fi
    if [ "$ddrsrtxdec1" == "" ]
    then
        uci set wireless.wifi1.ddrsrtxdec='15'
    fi
# Auto Stream is not supported in current release...for upgrade support restting to single
    if [ $stream1 -eq "3" ]; then
        uci set wireless.wifi1.spatialstream='1'
        uci set wireless.wifi1.ddrsminrate='0'
        uci set wireless.wifi1.ddrsmaxrate='9'
        uci set wireless.wifi1.ddrsrate='3'
    fi
    if [ "$atpcstatus1" == "" ]
    then
        uci set wireless.wifi1.atpcstatus='2'
    fi
    if [ "$maxeirp1" == "" ]
    then
        uci set wireless.wifi1.maxeirp='0'
    fi
    if [ "$atpcpower1" == "" ]
    then
        uci set wireless.wifi1.atpcpower='26'
    fi
    if [ "$mfganttype1" == "" ]
    then
        uci set wireless.wifi1.antennatype=$(uci get variant.variant.anttype1)
    else
        uci set wireless.wifi1.antennatype=$mfganttype1
    fi
    if [ "$gain1" == "" ]
    then
        if [ "$mfggain1" == "" ]
        then
            uci set wireless.wifi1.antennagain=$(uci get variant.variant.antgain1)
        else
            uci set wireless.wifi1.antennagain=$mfggain1
        fi
    fi
    if [ "$frag1" == "" ]
    then
        uci set wireless.wifi1.assemfrag='0'
    fi
    if [ "$maxsize1" == "" ]
    then
        uci set wireless.wifi1.maxsize='1200'
    fi
    if [ "$fragsize1" == "" ]
    then
        uci set wireless.wifi1.fragsize='1000'
    fi
    if [ "$shaping1" == "" ]
    then
        uci set wireless.@wifi-iface[1].shaping='0'
    fi
    if [ "$dcsstatus1" == "" ]
    then
        uci set wireless.wifi1.dcsstatus='0'
    fi
    if [ "$dcsthrld1" == "" ]
    then
        uci set wireless.wifi1.dcsthrld='50'
    fi
    if [ "$dcstime1" == "" ]
    then
        uci set wireless.wifi1.dcstime='30'
    fi
    if [ "$blint1" == "" ]
    then
        uci set wireless.wifi1.blint='1800'
    fi
    if [ "$suservice1" == "" ]
    then
        uci set wireless.wifi1.suservice='1'
    fi
    if [ "$sukbps1" == "" ]
    then
        uci set wireless.wifi1.sukbps='64'
    fi
    if [ "$mcast_rate1" == "" ]
    then
        uci set wireless.@wifi-iface[1].mcast_rate='6000'
    fi
    if [ "$bcast_rate1" == "" ]
    then
        uci set wireless.@wifi-iface[1].bcast_rate='6000'
    fi
    if [ "$mgmt_rate1" == "" ]
    then
        uci set wireless.@wifi-iface[1].mgmt_rate='6000'
    fi
    if [ "$set_bcn_rate1" == "" ]
    then
        uci set wireless.@wifi-iface[1].set_bcn_rate='6000'
    fi
    if [ "$mcast_rate0" == "" ]
    then
        uci set wireless.@wifi-iface[0].mcast_rate='6000'
    fi
    if [ "$bcast_rate0" == "" ]
    then
        uci set wireless.@wifi-iface[0].bcast_rate='6000'
    fi
    if [ "$mgmt_rate0" == "" ]
    then
        uci set wireless.@wifi-iface[0].mgmt_rate='6000'
    fi
    if [ "$set_bcn_rate0" == "" ]
    then
        uci set wireless.@wifi-iface[0].set_bcn_rate='6000'
    fi
    if [ "$wifi_timer1" == "" ]
    then
        uci set wireless.wifi1.wifitimer='15'
    fi
    if [ "$link_timer1" == "" ]
    then
        uci set wireless.wifi1.linktimer='5'
    fi
    if [ "$scan_timer1" == "" ]
    then
        uci set wireless.wifi1.scantimer='30'
    fi
    if [ "$maxsta0" == "" ]
    then
        uci set wireless.@wifi-iface[0].maxsta='2'
    fi
    if [ "$maxsta1" == "" ]
    then
        if [ "$mfgmaxsta" == "" ]
        then
            uci set wireless.@wifi-iface[1].maxsta=$(uci get variant.variant.maxsu)
        else
            uci set wireless.@wifi-iface[1].maxsta=$mfgmaxsta
        fi
    fi
    if [ "$linktype" == "" ]
    then
        uci set wireless.wifi1.linktype='3'
    fi
    if [ "$macfilter1" == "" ]
    then
        uci set wireless.@wifi-iface[1].macfilter='disable'       
    fi
    if [ "$icb1" == "" ]
    then
        uci set wireless.wifi1.icb='1'
    fi
    if [ "$macinmac1" == "" ]
    then
        uci set wireless.wifi1.macinmac='1'
    fi
    if [ "$rcretries1" == "" ]
    then
        uci set wireless.wifi1.rcretries='8'
    fi
#Ethernet
    if [ "$eth_timer" == "" ]
    then
        uci set ethernet.ethernet.ethtimer='0'
    fi
    if [ "$eth_mtu" == "" ]
    then
        uci set network.lan.mtu='1500'
    fi
#GPS
    if [ "$gps_cnt" == "" ]
    then
        uci set system.gps.counter='12'
    fi
#VLAN
    if [ "$tagmgmt" == "" ]
    then
        uci set vlan.vlan.tagmgmt='0'
    fi
#5 Radio Default values
    uci set wireless.wifi1.enable_ol_stats='1'
    uci set wireless.@wifi-iface[1].qboost_enable='0'
    uci set wireless.@wifi-iface[1].data_txstats='1'
#2.4 Radio Default values
    uci set wireless.wifi0.txchainmask='1'
    uci set wireless.wifi0.rxchainmask='1'
    if [ "$rate0" == "" ]
    then
        uci set wireless.wifi0.rate='0'
    fi
    if [ "$hidden_radio0" == "" ]
    then
        uci set wireless.@wifi-iface[0].hidden='1'
    fi
    if [ "$macfilter0" == "" ]
    then
        uci set wireless.@wifi-iface[0].macfilter='disable'       
    fi
    if [ "$radiostatus0" == "" ]
    then
        uci set wireless.@wifi-iface[0].disabled='0'             
    fi
#Network
    if [ "$dnsip" == "" ]
    then
        uci set network.lan.dns='0.0.0.0'       
    fi
#Radius
    if [ "$radiusstatus" == "" ]
    then
        uci set wrt-radauth.sys.enableRadAuth='0'       
    fi
#DHCP
    ignore=$(uci get dhcp.lan.ignore)
    if [ "$ignore" == "" ]
    then
        uci set dhcp.lan=dhcp
        uci set dhcp.lan.interface='lan'
        uci set dhcp.lan.dhcpv6='server'
        uci set dhcp.lan.ra='server'
        uci set dhcp.lan.start='192.168.1.100'
        uci set dhcp.lan.limit='192.168.1.150'
        uci set dhcp.lan.leasetime='43200'
        uci set dhcp.lan.ignore='1'
    fi
#TFTP
    if [ "$tftpkeepset" == "" ]
    then
        uci set tftp.tftp.keepset='1'
    fi
    if [ "$http" == "" ]
    then
        uci set tftp.http='http'
        uci set tftp.http.filetype='1'
        uci set tftp.http.optype='0'
    fi

#SYSTEM
    if [ "$location" == "" ]
    then
        uci set system.@system[0].location='location'
    fi
    if [ "$contact" == "" ]
    then
        uci set system.@system[0].contact='1234567890'
    fi
    if [ "$email" == "" ]
    then
        uci set system.@system[0].email='example@mail.com'
    fi
    if [ "$bstid" == "" ]
    then
        uci set system.@system[0].bstid='mh-mum-air-T1-st'
    fi
    if [ "$tcpcnt" == "" ]
    then
        uci set system.@system[0].tcpcnt='5'
    fi
    if [ "$tcpintvl" == "" ]
    then
        uci set system.@system[0].tcpintvl='1'
    fi
    if [ "$appusr" == "" ]
    then
        uci set system.@system[0].appuser='admin'
    fi
    if [ "$apppwd" == "" ]
    then
        uci set system.@system[0].apppass='admin'
    fi
#ROUTING
    param=$(uci get network.param)
    if [ "$param" == "" ]
    then
        uci set network.param=routing
        uci set network.param.networkmode='1'
        uci set network.param.natstatus='0'
        uci set network.kweth=routing
        uci set network.kweth.type='bridge'
        ethaddtype=$(uci get network.lan.proto)
        uci set network.kweth.proto=$ethaddtype
        ethipaddr=$(uci get network.lan.ipaddr)
        uci set network.kweth.ipaddr=$ethipaddr
        ethnetmask=$(uci get network.lan.netmask)
        uci set network.kweth.netmask=$ethnetmask
        ethgateway=$(uci get network.lan.gateway)
        uci set network.kweth.gateway=$ethgateway
    fi
#RETAINIP
    retip=$(uci get tftp.retip)
    if [ "$retip" == "" ]
    then
        uci set tftp.retip=retip
        uci set tftp.retip.retainip='0'
    fi
    if [ -f "/etc/retainip" ]
    then
        filename='/etc/retainip'
        while read p
        do 
            $p
        done < $filename
        rm -rf /etc/retainip
    fi
    if [ -f "/etc/config/reboot_logs" ]
    then
        mv /etc/config/reboot_logs /etc/reboot_logs
    fi

    procd_close_instance
}
