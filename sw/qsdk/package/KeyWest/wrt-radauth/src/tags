!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCESS_ACCEPT	radius.c	39;"	d	file:
ACCESS_REJECT	radius.c	40;"	d	file:
ACCESS_REQUEST	radius.c	38;"	d	file:
ADDBA_CLR_RESP	ieee80211_defines.h	/^    ADDBA_CLR_RESP = 4,$/;"	e	enum:__anon12
ADDBA_MODE_AUTO	ieee80211_defines.h	/^    ADDBA_MODE_AUTO   = 0,$/;"	e	enum:__anon13
ADDBA_MODE_MANUAL	ieee80211_defines.h	/^    ADDBA_MODE_MANUAL = 1,$/;"	e	enum:__anon13
ADDBA_RESP	ieee80211_defines.h	/^    ADDBA_RESP     = 3,$/;"	e	enum:__anon12
ADDBA_SEND	ieee80211_defines.h	/^    ADDBA_SEND     = 0,$/;"	e	enum:__anon12
ADDBA_STATUS	ieee80211_defines.h	/^    ADDBA_STATUS   = 1,$/;"	e	enum:__anon12
AES_KEY_SIZE	802.11.h	689;"	d
APHY_CWMIN	802.11.h	600;"	d
APHY_DIFS_TIME	802.11.h	594;"	d
APHY_PREAMBLE_TIME	802.11.h	595;"	d
APHY_SERVICE_NBITS	802.11.h	598;"	d
APHY_SIFS_TIME	802.11.h	593;"	d
APHY_SIGNAL_TIME	802.11.h	596;"	d
APHY_SLOT_TIME	802.11.h	592;"	d
APHY_SYMBOL_TIME	802.11.h	597;"	d
APHY_TAIL_NBITS	802.11.h	599;"	d
APPS_AWAKE	ieee80211_defines.h	/^     APPS_AWAKE = 0,$/;"	e	enum:__anon11
APPS_FAKE_SLEEP	ieee80211_defines.h	/^     APPS_FAKE_SLEEP,           \/* Pending blocking sleep *\/$/;"	e	enum:__anon11
APPS_FAKING_SLEEP	ieee80211_defines.h	/^     APPS_FAKING_SLEEP,         \/* Blocking sleep *\/$/;"	e	enum:__anon11
APPS_PENDING_SLEEP	ieee80211_defines.h	/^     APPS_PENDING_SLEEP,$/;"	e	enum:__anon11
APPS_SLEEP	ieee80211_defines.h	/^     APPS_SLEEP,$/;"	e	enum:__anon11
APPS_UNKNOWN_PWRSAVE	ieee80211_defines.h	/^     APPS_UNKNOWN_PWRSAVE,$/;"	e	enum:__anon11
AP_ASSOC_STATE_ASSOC	ieee80211_defines.h	321;"	d
AP_ASSOC_STATE_AUTH	ieee80211_defines.h	320;"	d
AP_ASSOC_STATE_NONE	ieee80211_defines.h	319;"	d
AP_STATE_BAD	ieee80211_defines.h	313;"	d
AP_STATE_GOOD	ieee80211_defines.h	312;"	d
AP_STATE_RETRY	ieee80211_defines.h	314;"	d
BCN_PRB_SSID	802.11.h	327;"	d
BPHY_CWMIN	802.11.h	608;"	d
BPHY_DIFS_TIME	802.11.h	605;"	d
BPHY_PLCP_SHORT_TIME	802.11.h	607;"	d
BPHY_PLCP_TIME	802.11.h	606;"	d
BPHY_SIFS_TIME	802.11.h	604;"	d
BPHY_SLOT_TIME	802.11.h	603;"	d
BRCM_IE_LEN	802.11.h	647;"	d
BRCM_IE_VER	802.11.h	649;"	d
BRCM_OUI	802.11.h	636;"	d
BRF_ABCAP	802.11.h	652;"	d
BRF_ABRQRD	802.11.h	653;"	d
BYTE_ORDER	md5.c	57;"	d	file:
BYTE_ORDER	md5.c	59;"	d	file:
BYTE_ORDER	md5.c	61;"	d	file:
CLIST_DFS_UPDATE	_ieee80211.h	/^    CLIST_DFS_UPDATE,$/;"	e	enum:ieee80211_clist_cmd
CLIST_NEW_COUNTRY	_ieee80211.h	/^    CLIST_NEW_COUNTRY$/;"	e	enum:ieee80211_clist_cmd
CLIST_UPDATE	_ieee80211.h	/^    CLIST_UPDATE,$/;"	e	enum:ieee80211_clist_cmd
DEBUG	radius.c	50;"	d	file:
DEBUG	wireless.c	40;"	d	file:
DEBUG	wrt-radauth.c	43;"	d	file:
DELBA_SEND	ieee80211_defines.h	/^    DELBA_SEND     = 2,$/;"	e	enum:__anon12
DOT11_A3_HDR_LEN	802.11.h	42;"	d
DOT11_A4_HDR_LEN	802.11.h	43;"	d
DOT11_ACK_LEN	802.11.h	130;"	d
DOT11_ACTION_CAT_ERR_MASK	802.11.h	575;"	d
DOT11_ACTION_CAT_SPECT_MNG	802.11.h	576;"	d
DOT11_ACTION_ID_CHANNEL_SWITCH	802.11.h	582;"	d
DOT11_ACTION_ID_M_REP	802.11.h	579;"	d
DOT11_ACTION_ID_M_REQ	802.11.h	578;"	d
DOT11_ACTION_ID_TPC_REP	802.11.h	581;"	d
DOT11_ACTION_ID_TPC_REQ	802.11.h	580;"	d
DOT11_ACTION_MEASURE_LEN	802.11.h	192;"	d
DOT11_AID_MASK	802.11.h	446;"	d
DOT11_AUTH_FIXED_LEN	802.11.h	173;"	d
DOT11_BCN_PRB_LEN	802.11.h	166;"	d
DOT11_BSSTYPE_ANY	802.11.h	587;"	d
DOT11_BSSTYPE_INDEPENDENT	802.11.h	586;"	d
DOT11_BSSTYPE_INFRASTRUCTURE	802.11.h	585;"	d
DOT11_CAP_AGILITY	802.11.h	569;"	d
DOT11_CAP_CCK_OFDM	802.11.h	572;"	d
DOT11_CAP_ESS	802.11.h	562;"	d
DOT11_CAP_IBSS	802.11.h	563;"	d
DOT11_CAP_PBCC	802.11.h	568;"	d
DOT11_CAP_POLLABLE	802.11.h	564;"	d
DOT11_CAP_POLL_RQ	802.11.h	565;"	d
DOT11_CAP_PRIVACY	802.11.h	566;"	d
DOT11_CAP_SHORT	802.11.h	567;"	d
DOT11_CAP_SHORTSLOT	802.11.h	571;"	d
DOT11_CAP_SPECTRUM	802.11.h	570;"	d
DOT11_CHALLENGE_LEN	802.11.h	332;"	d
DOT11_CS_END_LEN	802.11.h	146;"	d
DOT11_CTS_LEN	802.11.h	123;"	d
DOT11_DEFAULT_FRAG_LEN	802.11.h	67;"	d
DOT11_DEFAULT_RTS_LEN	802.11.h	61;"	d
DOT11_EXT_IV_FLAG	802.11.h	675;"	d
DOT11_FCS_LEN	802.11.h	45;"	d
DOT11_ICV_AES_LEN	802.11.h	47;"	d
DOT11_ICV_LEN	802.11.h	46;"	d
DOT11_IV_AES_CCM_LEN	802.11.h	54;"	d
DOT11_IV_AES_OCB_LEN	802.11.h	53;"	d
DOT11_IV_LEN	802.11.h	51;"	d
DOT11_IV_TKIP_LEN	802.11.h	52;"	d
DOT11_KEY_INDEX_SHIFT	802.11.h	50;"	d
DOT11_LLC_SNAP_HDR_LEN	802.11.h	78;"	d
DOT11_MAC_HDR_LEN	802.11.h	44;"	d
DOT11_MAXNUMFRAGS	802.11.h	615;"	d
DOT11_MAX_BEACON_PERIOD	802.11.h	71;"	d
DOT11_MAX_DTIM_PERIOD	802.11.h	75;"	d
DOT11_MAX_FRAG_LEN	802.11.h	66;"	d
DOT11_MAX_IV_SIZE	802.11.h	674;"	d
DOT11_MAX_KEY_SIZE	802.11.h	673;"	d
DOT11_MAX_MPDU_BODY_LEN	802.11.h	56;"	d
DOT11_MAX_MPDU_LEN	802.11.h	57;"	d
DOT11_MAX_RTS_LEN	802.11.h	62;"	d
DOT11_MAX_SSID_LEN	802.11.h	58;"	d
DOT11_MEASURE_BASIC_MAP_BSS	802.11.h	249;"	d
DOT11_MEASURE_BASIC_MAP_OFDM	802.11.h	250;"	d
DOT11_MEASURE_BASIC_MAP_RADAR	802.11.h	252;"	d
DOT11_MEASURE_BASIC_MAP_UKNOWN	802.11.h	251;"	d
DOT11_MEASURE_BASIC_MAP_UNMEAS	802.11.h	253;"	d
DOT11_MEASURE_BASIC_REP_LEN	802.11.h	298;"	d
DOT11_MEASURE_MODE_ENABLE	802.11.h	241;"	d
DOT11_MEASURE_MODE_INCAPABLE	802.11.h	246;"	d
DOT11_MEASURE_MODE_LATE	802.11.h	245;"	d
DOT11_MEASURE_MODE_REFUSED	802.11.h	247;"	d
DOT11_MEASURE_MODE_REPORT	802.11.h	243;"	d
DOT11_MEASURE_MODE_REQUEST	802.11.h	242;"	d
DOT11_MEASURE_TYPE_BASIC	802.11.h	234;"	d
DOT11_MEASURE_TYPE_CCA	802.11.h	235;"	d
DOT11_MEASURE_TYPE_RPI	802.11.h	236;"	d
DOT11_MGMT_HDR_LEN	802.11.h	157;"	d
DOT11_MIN_BEACON_PERIOD	802.11.h	70;"	d
DOT11_MIN_DTIM_PERIOD	802.11.h	74;"	d
DOT11_MIN_FRAG_LEN	802.11.h	65;"	d
DOT11_MNG_AID_LEN	802.11.h	441;"	d
DOT11_MNG_AP_ADDR_LEN	802.11.h	438;"	d
DOT11_MNG_AUTH_ALGO_LEN	802.11.h	434;"	d
DOT11_MNG_AUTH_SEQ_LEN	802.11.h	435;"	d
DOT11_MNG_BARKER_PREAMBLE	802.11.h	559;"	d
DOT11_MNG_BEACON_INT_LEN	802.11.h	436;"	d
DOT11_MNG_CAP_LEN	802.11.h	437;"	d
DOT11_MNG_CF_PARMS_ID	802.11.h	531;"	d
DOT11_MNG_CHALLENGE_ID	802.11.h	538;"	d
DOT11_MNG_CHANNEL_SWITCH_ID	802.11.h	544;"	d
DOT11_MNG_COUNTRY_ID	802.11.h	534;"	d
DOT11_MNG_DS_PARAM_LEN	802.11.h	509;"	d
DOT11_MNG_DS_PARMS_ID	802.11.h	530;"	d
DOT11_MNG_ERP_ID	802.11.h	549;"	d
DOT11_MNG_ERP_LEN	802.11.h	556;"	d
DOT11_MNG_EXT_RATES_ID	802.11.h	551;"	d
DOT11_MNG_FH_PARMS_ID	802.11.h	529;"	d
DOT11_MNG_HOPPING_PARMS_ID	802.11.h	535;"	d
DOT11_MNG_HOPPING_TABLE_ID	802.11.h	536;"	d
DOT11_MNG_IBSS_DFS_ID	802.11.h	548;"	d
DOT11_MNG_IBSS_PARAM_LEN	802.11.h	510;"	d
DOT11_MNG_IBSS_PARMS_ID	802.11.h	533;"	d
DOT11_MNG_IE_MREP_FIXED_LEN	802.11.h	289;"	d
DOT11_MNG_IE_MREQ_FIXED_LEN	802.11.h	267;"	d
DOT11_MNG_IE_MREQ_LEN	802.11.h	265;"	d
DOT11_MNG_IE_TPC_REPORT_LEN	802.11.h	214;"	d
DOT11_MNG_LISTEN_INT_LEN	802.11.h	439;"	d
DOT11_MNG_MEASURE_REPORT_ID	802.11.h	546;"	d
DOT11_MNG_MEASURE_REQUEST_ID	802.11.h	545;"	d
DOT11_MNG_NONERP_ID	802.11.h	550;"	d
DOT11_MNG_NONERP_PRESENT	802.11.h	557;"	d
DOT11_MNG_PROPR_ID	802.11.h	553;"	d
DOT11_MNG_PWR_CAP_ID	802.11.h	540;"	d
DOT11_MNG_PWR_CONSTRAINT_ID	802.11.h	539;"	d
DOT11_MNG_QUIET_ID	802.11.h	547;"	d
DOT11_MNG_RATES_ID	802.11.h	528;"	d
DOT11_MNG_REASON_LEN	802.11.h	440;"	d
DOT11_MNG_REQUEST_ID	802.11.h	537;"	d
DOT11_MNG_SSID_ID	802.11.h	527;"	d
DOT11_MNG_STATUS_LEN	802.11.h	442;"	d
DOT11_MNG_SUPP_CHANNELS_ID	802.11.h	543;"	d
DOT11_MNG_TIMESTAMP_LEN	802.11.h	443;"	d
DOT11_MNG_TIM_BITMAP_CTL	802.11.h	517;"	d
DOT11_MNG_TIM_DTIM_COUNT	802.11.h	515;"	d
DOT11_MNG_TIM_DTIM_PERIOD	802.11.h	516;"	d
DOT11_MNG_TIM_FIXED_LEN	802.11.h	514;"	d
DOT11_MNG_TIM_ID	802.11.h	532;"	d
DOT11_MNG_TIM_PVB	802.11.h	518;"	d
DOT11_MNG_TPC_REPORT_ID	802.11.h	542;"	d
DOT11_MNG_TPC_REQUEST_ID	802.11.h	541;"	d
DOT11_MNG_USE_PROTECTION	802.11.h	558;"	d
DOT11_MNG_WPA_ID	802.11.h	552;"	d
DOT11_OFDM_SIGNAL_EXTENSION	802.11.h	611;"	d
DOT11_OPEN_SYSTEM	802.11.h	330;"	d
DOT11_OUI_LEN	802.11.h	79;"	d
DOT11_PS_POLL_LEN	802.11.h	138;"	d
DOT11_RC_AUTH_INVAL	802.11.h	451;"	d
DOT11_RC_BUSY	802.11.h	455;"	d
DOT11_RC_DEAUTH_LEAVING	802.11.h	452;"	d
DOT11_RC_DISASSOC_LEAVING	802.11.h	461;"	d
DOT11_RC_INACTIVITY	802.11.h	454;"	d
DOT11_RC_INVAL_CLASS_2	802.11.h	457;"	d
DOT11_RC_INVAL_CLASS_3	802.11.h	459;"	d
DOT11_RC_MAX	802.11.h	465;"	d
DOT11_RC_NOT_AUTH	802.11.h	463;"	d
DOT11_RC_RESERVED	802.11.h	449;"	d
DOT11_RC_UNSPECIFIED	802.11.h	450;"	d
DOT11_RTS_LEN	802.11.h	116;"	d
DOT11_SCANTYPE_ACTIVE	802.11.h	588;"	d
DOT11_SCANTYPE_PASSIVE	802.11.h	589;"	d
DOT11_SHARED_KEY	802.11.h	331;"	d
DOT11_STATUS_ASSOC_AGILITY_REQUIRED	802.11.h	493;"	d
DOT11_STATUS_ASSOC_BAD_POWER_CAP	802.11.h	497;"	d
DOT11_STATUS_ASSOC_BAD_SUP_CHANNELS	802.11.h	499;"	d
DOT11_STATUS_ASSOC_BUSY_FAIL	802.11.h	484;"	d
DOT11_STATUS_ASSOC_DSSOFDM_REQUIRED	802.11.h	505;"	d
DOT11_STATUS_ASSOC_ERPBCC_REQUIRED	802.11.h	503;"	d
DOT11_STATUS_ASSOC_FAIL	802.11.h	474;"	d
DOT11_STATUS_ASSOC_PBCC_REQUIRED	802.11.h	491;"	d
DOT11_STATUS_ASSOC_RATE_MISMATCH	802.11.h	486;"	d
DOT11_STATUS_ASSOC_SHORTSLOT_REQUIRED	802.11.h	501;"	d
DOT11_STATUS_ASSOC_SHORT_REQUIRED	802.11.h	489;"	d
DOT11_STATUS_ASSOC_SPECTRUM_REQUIRED	802.11.h	495;"	d
DOT11_STATUS_AUTH_CHALLENGE_FAIL	802.11.h	481;"	d
DOT11_STATUS_AUTH_MISMATCH	802.11.h	476;"	d
DOT11_STATUS_AUTH_SEQ	802.11.h	478;"	d
DOT11_STATUS_AUTH_TIMEOUT	802.11.h	482;"	d
DOT11_STATUS_CAP_MISMATCH	802.11.h	470;"	d
DOT11_STATUS_FAILURE	802.11.h	469;"	d
DOT11_STATUS_REASSOC_FAIL	802.11.h	472;"	d
DOT11_STATUS_SUCCESS	802.11.h	468;"	d
DOT11_TU_TO_US	802.11.h	39;"	d
ETHER_ADDR_LEN	ethernet.h	29;"	d
ETHER_BRCM_CRAM	ethernet.h	94;"	d
ETHER_BRCM_SUBTYPE_LEN	ethernet.h	93;"	d
ETHER_CRC_LEN	ethernet.h	39;"	d
ETHER_HDR_LEN	ethernet.h	44;"	d
ETHER_ISBCAST	ethernet.h	130;"	d
ETHER_ISMULTI	ethernet.h	125;"	d
ETHER_ISNULLADDR	ethernet.h	142;"	d
ETHER_IS_VALID_LEN	ethernet.h	99;"	d
ETHER_MAX_DATA	ethernet.h	64;"	d
ETHER_MAX_LEN	ethernet.h	59;"	d
ETHER_MIN_DATA	ethernet.h	54;"	d
ETHER_MIN_LEN	ethernet.h	49;"	d
ETHER_TYPE_802_1X	ethernet.h	91;"	d
ETHER_TYPE_BRCM	ethernet.h	90;"	d
ETHER_TYPE_IP	ethernet.h	89;"	d
ETHER_TYPE_LEN	ethernet.h	34;"	d
EXTERNAL_USE_ONLY	ieee80211_ioctl.h	40;"	d
F	md5.c	202;"	d	file:
FALSE	typedefs.h	19;"	d
FALSE	typedefs.h	42;"	d
FC_ACK	802.11.h	421;"	d
FC_ACTION	802.11.h	416;"	d
FC_ASSOC_REQ	802.11.h	406;"	d
FC_ASSOC_RESP	802.11.h	407;"	d
FC_AUTH	802.11.h	414;"	d
FC_BEACON	802.11.h	412;"	d
FC_CF_END	802.11.h	422;"	d
FC_CF_END_ACK	802.11.h	423;"	d
FC_CTS	802.11.h	420;"	d
FC_DATA	802.11.h	425;"	d
FC_DATA_CF_ACK	802.11.h	427;"	d
FC_DEAUTH	802.11.h	415;"	d
FC_DISASSOC	802.11.h	413;"	d
FC_FROMDS	802.11.h	343;"	d
FC_FROMDS_SHIFT	802.11.h	344;"	d
FC_KIND	802.11.h	404;"	d
FC_KIND_MASK	802.11.h	402;"	d
FC_MOREDATA	802.11.h	351;"	d
FC_MOREDATA_SHIFT	802.11.h	352;"	d
FC_MOREFRAG	802.11.h	345;"	d
FC_MOREFRAG_SHIFT	802.11.h	346;"	d
FC_NULL_DATA	802.11.h	426;"	d
FC_ORDER	802.11.h	355;"	d
FC_ORDER_SHIFT	802.11.h	356;"	d
FC_PM	802.11.h	349;"	d
FC_PM_SHIFT	802.11.h	350;"	d
FC_PROBE_REQ	802.11.h	410;"	d
FC_PROBE_RESP	802.11.h	411;"	d
FC_PS_POLL	802.11.h	418;"	d
FC_PVER_MASK	802.11.h	335;"	d
FC_PVER_SHIFT	802.11.h	336;"	d
FC_REASSOC_REQ	802.11.h	408;"	d
FC_REASSOC_RESP	802.11.h	409;"	d
FC_RETRY	802.11.h	347;"	d
FC_RETRY_SHIFT	802.11.h	348;"	d
FC_RTS	802.11.h	419;"	d
FC_SUBTYPE_ACK	802.11.h	387;"	d
FC_SUBTYPE_ACTION	802.11.h	381;"	d
FC_SUBTYPE_ASSOC_REQ	802.11.h	370;"	d
FC_SUBTYPE_ASSOC_RESP	802.11.h	371;"	d
FC_SUBTYPE_ATIM	802.11.h	377;"	d
FC_SUBTYPE_AUTH	802.11.h	379;"	d
FC_SUBTYPE_BEACON	802.11.h	376;"	d
FC_SUBTYPE_CF_ACK	802.11.h	397;"	d
FC_SUBTYPE_CF_ACK_POLL	802.11.h	399;"	d
FC_SUBTYPE_CF_END	802.11.h	388;"	d
FC_SUBTYPE_CF_END_ACK	802.11.h	389;"	d
FC_SUBTYPE_CF_POLL	802.11.h	398;"	d
FC_SUBTYPE_CTS	802.11.h	386;"	d
FC_SUBTYPE_DATA	802.11.h	392;"	d
FC_SUBTYPE_DATA_CF_ACK	802.11.h	393;"	d
FC_SUBTYPE_DATA_CF_ACK_POLL	802.11.h	395;"	d
FC_SUBTYPE_DATA_CF_POLL	802.11.h	394;"	d
FC_SUBTYPE_DEAUTH	802.11.h	380;"	d
FC_SUBTYPE_DISASSOC	802.11.h	378;"	d
FC_SUBTYPE_MASK	802.11.h	339;"	d
FC_SUBTYPE_NULL	802.11.h	396;"	d
FC_SUBTYPE_PROBE_REQ	802.11.h	374;"	d
FC_SUBTYPE_PROBE_RESP	802.11.h	375;"	d
FC_SUBTYPE_PS_POLL	802.11.h	384;"	d
FC_SUBTYPE_REASSOC_REQ	802.11.h	372;"	d
FC_SUBTYPE_REASSOC_RESP	802.11.h	373;"	d
FC_SUBTYPE_RTS	802.11.h	385;"	d
FC_SUBTYPE_SHIFT	802.11.h	340;"	d
FC_TODS	802.11.h	341;"	d
FC_TODS_SHIFT	802.11.h	342;"	d
FC_TYPE_CTL	802.11.h	366;"	d
FC_TYPE_DATA	802.11.h	367;"	d
FC_TYPE_MASK	802.11.h	337;"	d
FC_TYPE_MNG	802.11.h	365;"	d
FC_TYPE_SHIFT	802.11.h	338;"	d
FC_WEP	802.11.h	353;"	d
FC_WEP_SHIFT	802.11.h	354;"	d
FRAGNUM_MASK	802.11.h	360;"	d
G	md5.c	228;"	d	file:
H	md5.c	254;"	d	file:
I	md5.c	280;"	d	file:
IEEE80211_ACL_ADDMAC	ieee80211_defines.h	/^    IEEE80211_ACL_ADDMAC,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_DELMAC	ieee80211_defines.h	/^    IEEE80211_ACL_DELMAC,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_DETACH	ieee80211_defines.h	/^    IEEE80211_ACL_DETACH$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_FLUSH	ieee80211_defines.h	/^    IEEE80211_ACL_FLUSH,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_POLICY_ALLOW	ieee80211_defines.h	/^    IEEE80211_ACL_POLICY_ALLOW,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_POLICY_DENY	ieee80211_defines.h	/^    IEEE80211_ACL_POLICY_DENY,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_POLICY_OPEN	ieee80211_defines.h	/^    IEEE80211_ACL_POLICY_OPEN,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ACL_POLICY_RADIUS	ieee80211_defines.h	/^    IEEE80211_ACL_POLICY_RADIUS,$/;"	e	enum:_ieee80211_acl_cmd
IEEE80211_ADDR_COPY	ieee80211_ioctl.h	46;"	d
IEEE80211_ADDR_EQ	ieee80211_ioctl.h	49;"	d
IEEE80211_ADDR_LEN	_ieee80211.h	435;"	d
IEEE80211_AMPDU_DENCITY	ieee80211_defines.h	/^    IEEE80211_AMPDU_DENCITY,                 \/* AMPDU dencity*\/$/;"	e	enum:_ieee80211_param
IEEE80211_AMPDU_LIMIT	ieee80211_defines.h	/^    IEEE80211_AMPDU_LIMIT,                   \/* AMPDU limit*\/$/;"	e	enum:_ieee80211_param
IEEE80211_AMPDU_LIMIT_DEFAULT	_ieee80211.h	409;"	d
IEEE80211_AMPDU_LIMIT_MAX	_ieee80211.h	408;"	d
IEEE80211_AMPDU_LIMIT_MIN	_ieee80211.h	407;"	d
IEEE80211_AMPDU_MODE_OFF	ieee80211_defines.h	/^    IEEE80211_AMPDU_MODE_OFF,   \/* disable AMPDU *\/$/;"	e	enum:_ieee80211_ampdu_mode
IEEE80211_AMPDU_MODE_ON	ieee80211_defines.h	/^    IEEE80211_AMPDU_MODE_ON,    \/* enable AMPDU *\/$/;"	e	enum:_ieee80211_ampdu_mode
IEEE80211_AMPDU_MODE_WDSVAR	ieee80211_defines.h	/^    IEEE80211_AMPDU_MODE_WDSVAR \/* enable AMPDU with 4addr WAR *\/$/;"	e	enum:_ieee80211_ampdu_mode
IEEE80211_AMPDU_SUBFRAME_DEFAULT	_ieee80211.h	412;"	d
IEEE80211_AMPDU_SUBFRAME_MAX	_ieee80211.h	411;"	d
IEEE80211_AMPDU_SUBFRAME_MIN	_ieee80211.h	410;"	d
IEEE80211_AMSDU_LIMIT_MAX	_ieee80211.h	413;"	d
IEEE80211_APPIE_FRAME_ASSOC_REQ	ieee80211_ioctl.h	/^    IEEE80211_APPIE_FRAME_ASSOC_REQ  = 3,   $/;"	e	enum:__anon21
IEEE80211_APPIE_FRAME_ASSOC_RESP	ieee80211_ioctl.h	/^    IEEE80211_APPIE_FRAME_ASSOC_RESP = 4,   $/;"	e	enum:__anon21
IEEE80211_APPIE_FRAME_BEACON	ieee80211_ioctl.h	/^    IEEE80211_APPIE_FRAME_BEACON     = 0,$/;"	e	enum:__anon21
IEEE80211_APPIE_FRAME_PROBE_REQ	ieee80211_ioctl.h	/^    IEEE80211_APPIE_FRAME_PROBE_REQ  = 1,   $/;"	e	enum:__anon21
IEEE80211_APPIE_FRAME_PROBE_RESP	ieee80211_ioctl.h	/^    IEEE80211_APPIE_FRAME_PROBE_RESP = 2,   $/;"	e	enum:__anon21
IEEE80211_APPIE_MAX	ieee80211_ioctl.h	50;"	d
IEEE80211_APPIE_NUM_OF_FRAME	ieee80211_ioctl.h	/^    IEEE80211_APPIE_NUM_OF_FRAME     = 5   $/;"	e	enum:__anon21
IEEE80211_ATIM_WINDOW	ieee80211_defines.h	/^    IEEE80211_ATIM_WINDOW,                   \/* ATIM window *\/$/;"	e	enum:_ieee80211_param
IEEE80211_AUTH_8021X	ieee80211_defines.h	/^    IEEE80211_AUTH_8021X    = 3, \/* 802.1x *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_AUTO	ieee80211_defines.h	/^    IEEE80211_AUTH_AUTO     = 4, \/* deprecated *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_CCKM	ieee80211_defines.h	/^    IEEE80211_AUTH_CCKM     = 7, \/* CCK *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_MAX	ieee80211_defines.h	694;"	d
IEEE80211_AUTH_NONE	ieee80211_defines.h	/^    IEEE80211_AUTH_NONE     = 0, \/* deprecated *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_OPEN	ieee80211_defines.h	/^    IEEE80211_AUTH_OPEN     = 1, \/* open *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_RSNA	ieee80211_defines.h	/^    IEEE80211_AUTH_RSNA     = 6, \/* WPA2\/RSNA *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_SHARED	ieee80211_defines.h	/^    IEEE80211_AUTH_SHARED   = 2, \/* shared-key *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_WAPI	ieee80211_defines.h	/^    IEEE80211_AUTH_WAPI     = 8, \/* WAPI *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_AUTH_WPA	ieee80211_defines.h	/^    IEEE80211_AUTH_WPA      = 5, \/* WPA *\/$/;"	e	enum:_ieee80211_auth_mode
IEEE80211_BEACON_INTVAL	ieee80211_defines.h	/^    IEEE80211_BEACON_INTVAL,                 \/* in TUs *\/$/;"	e	enum:_ieee80211_param
IEEE80211_BMISS_COUNT_MAX	ieee80211_defines.h	/^    IEEE80211_BMISS_COUNT_MAX,               \/* number of beacon miss intrs for bmiss notificationst *\/$/;"	e	enum:_ieee80211_param
IEEE80211_BMISS_COUNT_RESET	ieee80211_defines.h	/^    IEEE80211_BMISS_COUNT_RESET,             \/* number of beacon miss intrs before reset *\/$/;"	e	enum:_ieee80211_param
IEEE80211_BT_COEX_INFO_BTBUSY	ieee80211_defines.h	/^    IEEE80211_BT_COEX_INFO_BTBUSY        = 1,$/;"	e	enum:_ieee80211_bt_coex_info_type
IEEE80211_BT_COEX_INFO_SCHEME	ieee80211_defines.h	/^    IEEE80211_BT_COEX_INFO_SCHEME        = 0,$/;"	e	enum:_ieee80211_bt_coex_info_type
IEEE80211_CAP_HT	ieee80211_defines.h	/^    IEEE80211_CAP_HT,                        \/* CAPABILITY: HT *\/$/;"	e	enum:_ieee80211_cap
IEEE80211_CAP_MULTI_DOMAIN	ieee80211_defines.h	/^    IEEE80211_CAP_MULTI_DOMAIN,              \/* CAPABILITY: multiple domain *\/$/;"	e	enum:_ieee80211_cap
IEEE80211_CAP_SHPREAMBLE	ieee80211_defines.h	/^    IEEE80211_CAP_SHPREAMBLE,                \/* CAPABILITY: short premable *\/$/;"	e	enum:_ieee80211_cap
IEEE80211_CAP_SHSLOT	ieee80211_defines.h	/^    IEEE80211_CAP_SHSLOT,                    \/* CAPABILITY: short slot *\/$/;"	e	enum:_ieee80211_cap
IEEE80211_CAP_WMM	ieee80211_defines.h	/^    IEEE80211_CAP_WMM,                       \/* CAPABILITY: WMM *\/$/;"	e	enum:_ieee80211_cap
IEEE80211_CHAN_108A	_ieee80211.h	238;"	d
IEEE80211_CHAN_108G	_ieee80211.h	240;"	d
IEEE80211_CHAN_11D_EXCLUDED	_ieee80211.h	221;"	d
IEEE80211_CHAN_11NA_HT20	_ieee80211.h	247;"	d
IEEE80211_CHAN_11NA_HT40MINUS	_ieee80211.h	255;"	d
IEEE80211_CHAN_11NA_HT40PLUS	_ieee80211.h	253;"	d
IEEE80211_CHAN_11NG_HT20	_ieee80211.h	245;"	d
IEEE80211_CHAN_11NG_HT40MINUS	_ieee80211.h	251;"	d
IEEE80211_CHAN_11NG_HT40PLUS	_ieee80211.h	249;"	d
IEEE80211_CHAN_2GHZ	_ieee80211.h	204;"	d
IEEE80211_CHAN_5GHZ	_ieee80211.h	205;"	d
IEEE80211_CHAN_A	_ieee80211.h	230;"	d
IEEE80211_CHAN_ADHOC_DEFAULT1	_ieee80211.h	191;"	d
IEEE80211_CHAN_ADHOC_DEFAULT2	_ieee80211.h	192;"	d
IEEE80211_CHAN_ALL	_ieee80211.h	258;"	d
IEEE80211_CHAN_ALLTURBO	_ieee80211.h	262;"	d
IEEE80211_CHAN_ANY	_ieee80211.h	185;"	d
IEEE80211_CHAN_ANYC	_ieee80211.h	186;"	d
IEEE80211_CHAN_B	_ieee80211.h	232;"	d
IEEE80211_CHAN_BYTES	_ieee80211.h	184;"	d
IEEE80211_CHAN_CCK	_ieee80211.h	202;"	d
IEEE80211_CHAN_CLR_DISALLOW_ADHOC	_ieee80211.h	372;"	d
IEEE80211_CHAN_CLR_RADAR	_ieee80211.h	368;"	d
IEEE80211_CHAN_CSA_RECEIVED	_ieee80211.h	222;"	d
IEEE80211_CHAN_DEFAULT	_ieee80211.h	189;"	d
IEEE80211_CHAN_DEFAULT_11A	_ieee80211.h	190;"	d
IEEE80211_CHAN_DFS	_ieee80211.h	219;"	d
IEEE80211_CHAN_DFS_CLEAR	_ieee80211.h	220;"	d
IEEE80211_CHAN_DISALLOW_ADHOC	_ieee80211.h	223;"	d
IEEE80211_CHAN_DYN	_ieee80211.h	207;"	d
IEEE80211_CHAN_EXCLUDE_11D	_ieee80211.h	376;"	d
IEEE80211_CHAN_FHSS	_ieee80211.h	228;"	d
IEEE80211_CHAN_G	_ieee80211.h	236;"	d
IEEE80211_CHAN_GFSK	_ieee80211.h	208;"	d
IEEE80211_CHAN_HALF	_ieee80211.h	211;"	d
IEEE80211_CHAN_HT20	_ieee80211.h	213;"	d
IEEE80211_CHAN_HT40INTOL	_ieee80211.h	216;"	d
IEEE80211_CHAN_HT40MINUS	_ieee80211.h	215;"	d
IEEE80211_CHAN_HT40PLUS	_ieee80211.h	214;"	d
IEEE80211_CHAN_MAX	_ieee80211.h	183;"	d
IEEE80211_CHAN_OFDM	_ieee80211.h	203;"	d
IEEE80211_CHAN_PASSIVE	_ieee80211.h	206;"	d
IEEE80211_CHAN_PUREG	_ieee80211.h	234;"	d
IEEE80211_CHAN_QUARTER	_ieee80211.h	212;"	d
IEEE80211_CHAN_RADAR	_ieee80211.h	209;"	d
IEEE80211_CHAN_SET_DFS	_ieee80211.h	374;"	d
IEEE80211_CHAN_SET_DISALLOW_ADHOC	_ieee80211.h	370;"	d
IEEE80211_CHAN_SET_RADAR	_ieee80211.h	366;"	d
IEEE80211_CHAN_ST	_ieee80211.h	242;"	d
IEEE80211_CHAN_STURBO	_ieee80211.h	210;"	d
IEEE80211_CHAN_TURBO	_ieee80211.h	201;"	d
IEEE80211_CHEXTOFFSET	ieee80211_defines.h	/^    IEEE80211_CHEXTOFFSET,$/;"	e	enum:_ieee80211_param
IEEE80211_CHSCANINIT	ieee80211_defines.h	/^    IEEE80211_CHSCANINIT,$/;"	e	enum:_ieee80211_param
IEEE80211_CHWIDTH	ieee80211_defines.h	/^    IEEE80211_CHWIDTH,$/;"	e	enum:_ieee80211_param
IEEE80211_CIPHER_AES_CCM	ieee80211_defines.h	/^    IEEE80211_CIPHER_AES_CCM    = 3,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_AES_OCB	ieee80211_defines.h	/^    IEEE80211_CIPHER_AES_OCB    = 2,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_CKIP	ieee80211_defines.h	/^    IEEE80211_CIPHER_CKIP       = 5,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_MAX	ieee80211_defines.h	711;"	d
IEEE80211_CIPHER_NONE	ieee80211_defines.h	/^    IEEE80211_CIPHER_NONE       = 6,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_TKIP	ieee80211_defines.h	/^    IEEE80211_CIPHER_TKIP       = 1,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_WAPI	ieee80211_defines.h	/^    IEEE80211_CIPHER_WAPI       = 4,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CIPHER_WEP	ieee80211_defines.h	/^    IEEE80211_CIPHER_WEP        = 0,$/;"	e	enum:_ieee80211_cipher_type
IEEE80211_CLONE_BSSID	ieee80211_defines.h	107;"	d
IEEE80211_CLONE_BSSID	ieee80211_ioctl.h	619;"	d
IEEE80211_CLONE_NOBEACONS	ieee80211_defines.h	108;"	d
IEEE80211_CLONE_WDS	ieee80211_defines.h	109;"	d
IEEE80211_CLONE_WDSLEGACY	ieee80211_defines.h	110;"	d
IEEE80211_COALESCING_DISABLED	ieee80211_defines.h	/^    IEEE80211_COALESCING_DISABLED   = 0,        \/* Coalescing is disabled*\/$/;"	e	enum:_ieee80211_coalescing_state
IEEE80211_COALESCING_DYNAMIC	ieee80211_defines.h	/^    IEEE80211_COALESCING_DYNAMIC    = 1,        \/* Dynamically move to Enabled state based on Uruns*\/$/;"	e	enum:_ieee80211_coalescing_state
IEEE80211_COALESCING_ENABLED	ieee80211_defines.h	/^    IEEE80211_COALESCING_ENABLED    = 2,        \/* Coalescing is enabled*\/$/;"	e	enum:_ieee80211_coalescing_state
IEEE80211_CWM_EXTPROTCTSONLY	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTCTSONLY,   \/* CTS to self *\/$/;"	e	enum:ieee80211_cwm_extprotmode
IEEE80211_CWM_EXTPROTMAX	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTMAX$/;"	e	enum:ieee80211_cwm_extprotmode
IEEE80211_CWM_EXTPROTNONE	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTNONE,      \/* no protection *\/$/;"	e	enum:ieee80211_cwm_extprotmode
IEEE80211_CWM_EXTPROTRTSCTS	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTRTSCTS,    \/* RTS-CTS *\/$/;"	e	enum:ieee80211_cwm_extprotmode
IEEE80211_CWM_EXTPROTSPACING20	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTSPACING20,$/;"	e	enum:ieee80211_cwm_extprotspacing
IEEE80211_CWM_EXTPROTSPACING25	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTSPACING25,$/;"	e	enum:ieee80211_cwm_extprotspacing
IEEE80211_CWM_EXTPROTSPACINGMAX	_ieee80211.h	/^    IEEE80211_CWM_EXTPROTSPACINGMAX$/;"	e	enum:ieee80211_cwm_extprotspacing
IEEE80211_CWM_MODE20	_ieee80211.h	/^    IEEE80211_CWM_MODE20,$/;"	e	enum:ieee80211_cwm_mode
IEEE80211_CWM_MODE2040	_ieee80211.h	/^    IEEE80211_CWM_MODE2040,         $/;"	e	enum:ieee80211_cwm_mode
IEEE80211_CWM_MODE40	_ieee80211.h	/^    IEEE80211_CWM_MODE40,$/;"	e	enum:ieee80211_cwm_mode
IEEE80211_CWM_MODEMAX	_ieee80211.h	/^    IEEE80211_CWM_MODEMAX$/;"	e	enum:ieee80211_cwm_mode
IEEE80211_CWM_WIDTH20	_ieee80211.h	/^    IEEE80211_CWM_WIDTH20,$/;"	e	enum:ieee80211_cwm_width
IEEE80211_CWM_WIDTH40	_ieee80211.h	/^    IEEE80211_CWM_WIDTH40$/;"	e	enum:ieee80211_cwm_width
IEEE80211_DEVICE_ADDBA_MODE	ieee80211_defines.h	/^    IEEE80211_DEVICE_ADDBA_MODE,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_BLKDFSCHAN	ieee80211_defines.h	/^    IEEE80211_DEVICE_BLKDFSCHAN,            \/* block the use of DFS channels *\/$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_BMISS_LIMIT	ieee80211_defines.h	/^    IEEE80211_DEVICE_BMISS_LIMIT,            \/* # of beacon misses for HW to generate BMISS intr *\/$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_COUNTRYCODE	ieee80211_defines.h	/^    IEEE80211_DEVICE_COUNTRYCODE,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_CWM_ENABLE	ieee80211_defines.h	/^    IEEE80211_DEVICE_CWM_ENABLE,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_CWM_EXTBUSYTHRESHOLD	ieee80211_defines.h	/^    IEEE80211_DEVICE_CWM_EXTBUSYTHRESHOLD,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_CWM_EXTPROTMODE	ieee80211_defines.h	/^    IEEE80211_DEVICE_CWM_EXTPROTMODE,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_CWM_EXTPROTSPACING	ieee80211_defines.h	/^    IEEE80211_DEVICE_CWM_EXTPROTSPACING,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_DOTH	ieee80211_defines.h	/^    IEEE80211_DEVICE_DOTH,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_GREEN_AP_PS_ENABLE	ieee80211_defines.h	/^    IEEE80211_DEVICE_GREEN_AP_PS_ENABLE,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_GREEN_AP_PS_ON_TIME	ieee80211_defines.h	/^    IEEE80211_DEVICE_GREEN_AP_PS_ON_TIME,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_GREEN_AP_PS_TIMEOUT	ieee80211_defines.h	/^    IEEE80211_DEVICE_GREEN_AP_PS_TIMEOUT,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_NUM_RX_CHAIN	ieee80211_defines.h	/^    IEEE80211_DEVICE_NUM_RX_CHAIN,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_NUM_TX_CHAIN	ieee80211_defines.h	/^    IEEE80211_DEVICE_NUM_TX_CHAIN,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_PROTECTION_MODE	ieee80211_defines.h	/^    IEEE80211_DEVICE_PROTECTION_MODE,       \/* protection mode*\/$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_RX_CHAIN_MASK	ieee80211_defines.h	/^    IEEE80211_DEVICE_RX_CHAIN_MASK,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_RX_CHAIN_MASK_LEGACY	ieee80211_defines.h	/^    IEEE80211_DEVICE_RX_CHAIN_MASK_LEGACY, $/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_TX_CHAIN_MASK	ieee80211_defines.h	/^    IEEE80211_DEVICE_TX_CHAIN_MASK,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DEVICE_TX_CHAIN_MASK_LEGACY	ieee80211_defines.h	/^    IEEE80211_DEVICE_TX_CHAIN_MASK_LEGACY,$/;"	e	enum:_ieee80211_device_param
IEEE80211_DRIVER_CAPS	ieee80211_defines.h	/^    IEEE80211_DRIVER_CAPS,                   $/;"	e	enum:_ieee80211_param
IEEE80211_DTIM_INTVAL	ieee80211_defines.h	/^    IEEE80211_DTIM_INTVAL,                   \/* number of beacons *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_ADDMKTKIE	ieee80211_defines.h	/^    IEEE80211_FEATURE_ADDMKTKIE,             \/* Mktk *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_APBRIDGE	ieee80211_defines.h	/^    IEEE80211_FEATURE_APBRIDGE,              \/* turn on internal mcast traffic bridging for AP *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_AUTOWDS	ieee80211_defines.h	/^    IEEE80211_FEATURE_AUTOWDS,               \/* Mktk *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_COPY_BEACON	ieee80211_defines.h	/^    IEEE80211_FEATURE_COPY_BEACON,           \/* keep a copy of beacon *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_COUNTER_MEASURES	ieee80211_defines.h	/^    IEEE80211_FEATURE_COUNTER_MEASURES ,     \/* turn on couter measures *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_COUNTRY_IE	ieee80211_defines.h	/^    IEEE80211_FEATURE_COUNTRY_IE,            \/* add country IE in AP *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_DOTH	ieee80211_defines.h	/^    IEEE80211_FEATURE_DOTH,                  \/* enable 802.11h *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_DROP_UNENC	ieee80211_defines.h	/^    IEEE80211_FEATURE_DROP_UNENC,            \/* drop un encrypted frames *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_HIDE_SSID	ieee80211_defines.h	/^    IEEE80211_FEATURE_HIDE_SSID,             \/* turn on hide ssid feature *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_MAC_CLONE	ieee80211_defines.h	/^    IEEE80211_FEATURE_MAC_CLONE,             \/* Mktk *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_PRIVACY	ieee80211_defines.h	/^    IEEE80211_FEATURE_PRIVACY,               \/* encryption *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_PRIVATE_RSNIE	ieee80211_defines.h	/^    IEEE80211_FEATURE_PRIVATE_RSNIE,         \/* enable OS shim to setup RSN IE*\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_PURE11N	ieee80211_defines.h	/^    IEEE80211_FEATURE_PURE11N,               \/* enable pure 11n  mode *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_PUREB	ieee80211_defines.h	/^    IEEE80211_FEATURE_PUREB,                 \/* turn on pure B mode for AP *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_PUREG	ieee80211_defines.h	/^    IEEE80211_FEATURE_PUREG,                 \/* turn on pure G mode for AP *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_REGCLASS	ieee80211_defines.h	/^    IEEE80211_FEATURE_REGCLASS,              \/* add regulatory class IE in AP *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_STAFWD	ieee80211_defines.h	/^    IEEE80211_FEATURE_STAFWD,                \/* dynamic AP Client  feature *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_TX_COALESCING	ieee80211_defines.h	/^    IEEE80211_FEATURE_TX_COALESCING,         \/* enable tx coalescing *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_UAPSD	ieee80211_defines.h	/^    IEEE80211_FEATURE_UAPSD,                 \/* UAPSD setting (BE\/BK\/VI\/VO) *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_WDS	ieee80211_defines.h	/^    IEEE80211_FEATURE_WDS,                   \/* dynamic WDS feature *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_WMM	ieee80211_defines.h	/^    IEEE80211_FEATURE_WMM,                   \/* WMM *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FEATURE_WMM_PWRSAVE	ieee80211_defines.h	/^    IEEE80211_FEATURE_WMM_PWRSAVE,           \/* WMM Power Save *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FH_CHAN	_ieee80211.h	381;"	d
IEEE80211_FH_CHANMOD	_ieee80211.h	380;"	d
IEEE80211_FH_CHANPAT	_ieee80211.h	383;"	d
IEEE80211_FH_CHANSET	_ieee80211.h	382;"	d
IEEE80211_FILTER_TYPE_ALL	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_ALL         =   0xFF  \/* used to check the valid filter bits *\/  $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_ASSOC_REQ	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_ASSOC_REQ   =   0x8,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_ASSOC_RESP	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_ASSOC_RESP  =   0x10,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_AUTH	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_AUTH        =   0x20,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_BEACON	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_BEACON      =   0x1,  $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_DEAUTH	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_DEAUTH      =   0x40,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_DISASSOC	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_DISASSOC    =   0x80,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_PROBE_REQ	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_PROBE_REQ   =   0x2,   $/;"	e	enum:__anon22
IEEE80211_FILTER_TYPE_PROBE_RESP	ieee80211_ioctl.h	/^     IEEE80211_FILTER_TYPE_PROBE_RESP  =   0x4,   $/;"	e	enum:__anon22
IEEE80211_FIXED_RATE	ieee80211_defines.h	/^    IEEE80211_FIXED_RATE,                    \/* $/;"	e	enum:_ieee80211_param
IEEE80211_FIXED_RATE_LEGACY	_ieee80211.h	/^    IEEE80211_FIXED_RATE_LEGACY  = 2   \/* legacy rates *\/$/;"	e	enum:ieee80211_fixed_rate_mode
IEEE80211_FIXED_RATE_MCS	_ieee80211.h	/^    IEEE80211_FIXED_RATE_MCS   = 1,  \/* HT rates *\/$/;"	e	enum:ieee80211_fixed_rate_mode
IEEE80211_FIXED_RATE_NONE	_ieee80211.h	/^    IEEE80211_FIXED_RATE_NONE  = 0,$/;"	e	enum:ieee80211_fixed_rate_mode
IEEE80211_FIXED_RETRIES	ieee80211_defines.h	/^    IEEE80211_FIXED_RETRIES,                 \/* fixed retries  0-4 *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FRAG_THRESHOLD	ieee80211_defines.h	/^    IEEE80211_FRAG_THRESHOLD,                \/* fragmentation threshold, 0 means no rts threshold  *\/$/;"	e	enum:_ieee80211_param
IEEE80211_FRAME_TYPE_ASSOCREQ	ieee80211_defines.h	/^    IEEE80211_FRAME_TYPE_ASSOCREQ,$/;"	e	enum:_ieee80211_frame_type
IEEE80211_FRAME_TYPE_ASSOCRESP	ieee80211_defines.h	/^    IEEE80211_FRAME_TYPE_ASSOCRESP$/;"	e	enum:_ieee80211_frame_type
IEEE80211_FRAME_TYPE_BEACON	ieee80211_defines.h	/^    IEEE80211_FRAME_TYPE_BEACON,$/;"	e	enum:_ieee80211_frame_type
IEEE80211_FRAME_TYPE_MAX	ieee80211_defines.h	781;"	d
IEEE80211_FRAME_TYPE_PROBEREQ	ieee80211_defines.h	/^    IEEE80211_FRAME_TYPE_PROBEREQ,$/;"	e	enum:_ieee80211_frame_type
IEEE80211_FRAME_TYPE_PROBERESP	ieee80211_defines.h	/^    IEEE80211_FRAME_TYPE_PROBERESP,$/;"	e	enum:_ieee80211_frame_type
IEEE80211_HBR_TIMER	ieee80211_defines.h	/^    IEEE80211_HBR_TIMER,$/;"	e	enum:_ieee80211_param
IEEE80211_HT40_INTOLERANT	ieee80211_defines.h	/^    IEEE80211_HT40_INTOLERANT,$/;"	e	enum:_ieee80211_param
IEEE80211_HT_RATE_SIZE	_ieee80211.h	390;"	d
IEEE80211_IDLE_TIME	ieee80211_defines.h	/^    IEEE80211_IDLE_TIME,                     \/* minimun no activity time before vap can pause *\/$/;"	e	enum:_ieee80211_param
IEEE80211_IOCTL_ADDMAC	ieee80211_ioctl.h	414;"	d
IEEE80211_IOCTL_CHANSWITCH	ieee80211_ioctl.h	419;"	d
IEEE80211_IOCTL_CONFIG_GENERIC	ieee80211_ioctl.h	613;"	d
IEEE80211_IOCTL_DELKEY	ieee80211_ioctl.h	408;"	d
IEEE80211_IOCTL_DELMAC	ieee80211_ioctl.h	415;"	d
IEEE80211_IOCTL_FILTERFRAME	ieee80211_ioctl.h	425;"	d
IEEE80211_IOCTL_GETADDBASTATUS	ieee80211_ioctl.h	428;"	d
IEEE80211_IOCTL_GETCHANINFO	ieee80211_ioctl.h	411;"	d
IEEE80211_IOCTL_GETCHANLIST	ieee80211_ioctl.h	416;"	d
IEEE80211_IOCTL_GETKEY	ieee80211_ioctl.h	604;"	d
IEEE80211_IOCTL_GETMAC	ieee80211_ioctl.h	612;"	d
IEEE80211_IOCTL_GETMODE	ieee80211_ioctl.h	420;"	d
IEEE80211_IOCTL_GETOPTIE	ieee80211_ioctl.h	413;"	d
IEEE80211_IOCTL_GETPARAM	ieee80211_ioctl.h	405;"	d
IEEE80211_IOCTL_GETWMMPARAMS	ieee80211_ioctl.h	409;"	d
IEEE80211_IOCTL_GETWPAIE	ieee80211_ioctl.h	605;"	d
IEEE80211_IOCTL_GETWSCIE	ieee80211_ioctl.h	611;"	d
IEEE80211_IOCTL_GET_APPIEBUF	ieee80211_ioctl.h	422;"	d
IEEE80211_IOCTL_GET_MACADDR	ieee80211_ioctl.h	432;"	d
IEEE80211_IOCTL_GREEN_AP_PS_ENABLE	ieee80211_ioctl.h	/^	IEEE80211_IOCTL_GREEN_AP_PS_ENABLE = 113,$/;"	e	enum:__anon20
IEEE80211_IOCTL_GREEN_AP_PS_ON_TIME	ieee80211_ioctl.h	/^	IEEE80211_IOCTL_GREEN_AP_PS_ON_TIME = 115,$/;"	e	enum:__anon20
IEEE80211_IOCTL_GREEN_AP_PS_TIMEOUT	ieee80211_ioctl.h	/^	IEEE80211_IOCTL_GREEN_AP_PS_TIMEOUT = 114,$/;"	e	enum:__anon20
IEEE80211_IOCTL_KICKMAC	ieee80211_ioctl.h	418;"	d
IEEE80211_IOCTL_SCAN_RESULTS	ieee80211_ioctl.h	610;"	d
IEEE80211_IOCTL_SENDADDBA	ieee80211_ioctl.h	427;"	d
IEEE80211_IOCTL_SENDDELBA	ieee80211_ioctl.h	429;"	d
IEEE80211_IOCTL_SETCHANLIST	ieee80211_ioctl.h	417;"	d
IEEE80211_IOCTL_SETKEY	ieee80211_ioctl.h	406;"	d
IEEE80211_IOCTL_SETMLME	ieee80211_ioctl.h	410;"	d
IEEE80211_IOCTL_SETMODE	ieee80211_ioctl.h	421;"	d
IEEE80211_IOCTL_SETOPTIE	ieee80211_ioctl.h	412;"	d
IEEE80211_IOCTL_SETPARAM	ieee80211_ioctl.h	404;"	d
IEEE80211_IOCTL_SETWMMPARAMS	ieee80211_ioctl.h	407;"	d
IEEE80211_IOCTL_SET_ACPARAMS	ieee80211_ioctl.h	424;"	d
IEEE80211_IOCTL_SET_ADDBARESP	ieee80211_ioctl.h	431;"	d
IEEE80211_IOCTL_SET_APPIEBUF	ieee80211_ioctl.h	423;"	d
IEEE80211_IOCTL_SET_HBRPARAMS	ieee80211_ioctl.h	433;"	d
IEEE80211_IOCTL_SET_MEDENYENTRY	ieee80211_ioctl.h	430;"	d
IEEE80211_IOCTL_SET_RTPARAMS	ieee80211_ioctl.h	426;"	d
IEEE80211_IOCTL_SET_RXTIMEOUT	ieee80211_ioctl.h	434;"	d
IEEE80211_IOCTL_STA_INFO	ieee80211_ioctl.h	607;"	d
IEEE80211_IOCTL_STA_STATS	ieee80211_ioctl.h	606;"	d
IEEE80211_IOC_ADDMAC	ieee80211_ioctl.h	363;"	d
IEEE80211_IOC_APBRIDGE	ieee80211_ioctl.h	340;"	d
IEEE80211_IOC_APPIEBUF	ieee80211_ioctl.h	367;"	d
IEEE80211_IOC_AUTHMODE	ieee80211_ioctl.h	308;"	d
IEEE80211_IOC_BEACON_INTERVAL	ieee80211_ioctl.h	362;"	d
IEEE80211_IOC_BSSID	ieee80211_ioctl.h	325;"	d
IEEE80211_IOC_CHANLIST	ieee80211_ioctl.h	337;"	d
IEEE80211_IOC_CHANNEL	ieee80211_ioctl.h	310;"	d
IEEE80211_IOC_COUNTERMEASURES	ieee80211_ioctl.h	335;"	d
IEEE80211_IOC_DELKEY	ieee80211_ioctl.h	330;"	d
IEEE80211_IOC_DELMAC	ieee80211_ioctl.h	364;"	d
IEEE80211_IOC_DRIVER_CAPS	ieee80211_ioctl.h	346;"	d
IEEE80211_IOC_DROPUNENCRYPTED	ieee80211_ioctl.h	328;"	d
IEEE80211_IOC_DTIM_PERIOD	ieee80211_ioctl.h	361;"	d
IEEE80211_IOC_FF	ieee80211_ioctl.h	365;"	d
IEEE80211_IOC_FILTERFRAME	ieee80211_ioctl.h	368;"	d
IEEE80211_IOC_HIDESSID	ieee80211_ioctl.h	339;"	d
IEEE80211_IOC_KEYMGTALGS	ieee80211_ioctl.h	347;"	d
IEEE80211_IOC_MACCMD	ieee80211_ioctl.h	351;"	d
IEEE80211_IOC_MCASTCIPHER	ieee80211_ioctl.h	341;"	d
IEEE80211_IOC_MCASTKEYLEN	ieee80211_ioctl.h	342;"	d
IEEE80211_IOC_MCAST_ENHANCE	ieee80211_ioctl.h	369;"	d
IEEE80211_IOC_MLME	ieee80211_ioctl.h	331;"	d
IEEE80211_IOC_NUMSSIDS	ieee80211_ioctl.h	299;"	d
IEEE80211_IOC_NUMWEPKEYS	ieee80211_ioctl.h	306;"	d
IEEE80211_IOC_OPTIE	ieee80211_ioctl.h	332;"	d
IEEE80211_IOC_POWERSAVE	ieee80211_ioctl.h	311;"	d
IEEE80211_IOC_POWERSAVESLEEP	ieee80211_ioctl.h	318;"	d
IEEE80211_IOC_PRIVACY	ieee80211_ioctl.h	327;"	d
IEEE80211_IOC_PROTMODE	ieee80211_ioctl.h	320;"	d
IEEE80211_IOC_ROAMING	ieee80211_ioctl.h	326;"	d
IEEE80211_IOC_RSNCAPS	ieee80211_ioctl.h	348;"	d
IEEE80211_IOC_RTSTHRESHOLD	ieee80211_ioctl.h	319;"	d
IEEE80211_IOC_SCAN_REQ	ieee80211_ioctl.h	333;"	d
IEEE80211_IOC_SCAN_RESULTS	ieee80211_ioctl.h	334;"	d
IEEE80211_IOC_SSID	ieee80211_ioctl.h	298;"	d
IEEE80211_IOC_STATIONNAME	ieee80211_ioctl.h	309;"	d
IEEE80211_IOC_STA_INFO	ieee80211_ioctl.h	354;"	d
IEEE80211_IOC_STA_STATS	ieee80211_ioctl.h	350;"	d
IEEE80211_IOC_STA_TXPOW	ieee80211_ioctl.h	353;"	d
IEEE80211_IOC_TURBOP	ieee80211_ioctl.h	366;"	d
IEEE80211_IOC_TXPOWER	ieee80211_ioctl.h	324;"	d
IEEE80211_IOC_TXPOWMAX	ieee80211_ioctl.h	352;"	d
IEEE80211_IOC_UCASTCIPHER	ieee80211_ioctl.h	344;"	d
IEEE80211_IOC_UCASTCIPHERS	ieee80211_ioctl.h	343;"	d
IEEE80211_IOC_UCASTKEYLEN	ieee80211_ioctl.h	345;"	d
IEEE80211_IOC_WEP	ieee80211_ioctl.h	300;"	d
IEEE80211_IOC_WEPKEY	ieee80211_ioctl.h	305;"	d
IEEE80211_IOC_WEPTXKEY	ieee80211_ioctl.h	307;"	d
IEEE80211_IOC_WME	ieee80211_ioctl.h	338;"	d
IEEE80211_IOC_WME_ACKPOLICY	ieee80211_ioctl.h	360;"	d
IEEE80211_IOC_WME_ACM	ieee80211_ioctl.h	359;"	d
IEEE80211_IOC_WME_AIFS	ieee80211_ioctl.h	357;"	d
IEEE80211_IOC_WME_CWMAX	ieee80211_ioctl.h	356;"	d
IEEE80211_IOC_WME_CWMIN	ieee80211_ioctl.h	355;"	d
IEEE80211_IOC_WME_TXOPLIMIT	ieee80211_ioctl.h	358;"	d
IEEE80211_IOC_WPA	ieee80211_ioctl.h	336;"	d
IEEE80211_IOC_WPAIE	ieee80211_ioctl.h	349;"	d
IEEE80211_IOC_WPAKEY	ieee80211_ioctl.h	329;"	d
IEEE80211_IQUE_CONFIG	ieee80211_defines.h	/^    IEEE80211_IQUE_CONFIG,$/;"	e	enum:_ieee80211_param
IEEE80211_ISO_COUNTRY_LENGTH	ieee80211_defines.h	67;"	d
IEEE80211_IS_CHAN_108A	_ieee80211.h	279;"	d
IEEE80211_IS_CHAN_108G	_ieee80211.h	281;"	d
IEEE80211_IS_CHAN_11D_EXCLUDED	_ieee80211.h	314;"	d
IEEE80211_IS_CHAN_11N	_ieee80211.h	335;"	d
IEEE80211_IS_CHAN_11NA	_ieee80211.h	343;"	d
IEEE80211_IS_CHAN_11NA_HT20	_ieee80211.h	324;"	d
IEEE80211_IS_CHAN_11NA_HT40MINUS	_ieee80211.h	332;"	d
IEEE80211_IS_CHAN_11NA_HT40PLUS	_ieee80211.h	330;"	d
IEEE80211_IS_CHAN_11NG	_ieee80211.h	341;"	d
IEEE80211_IS_CHAN_11NG_HT20	_ieee80211.h	322;"	d
IEEE80211_IS_CHAN_11NG_HT40MINUS	_ieee80211.h	328;"	d
IEEE80211_IS_CHAN_11NG_HT40PLUS	_ieee80211.h	326;"	d
IEEE80211_IS_CHAN_11N_CTL_40_CAPABLE	_ieee80211.h	361;"	d
IEEE80211_IS_CHAN_11N_CTL_CAPABLE	_ieee80211.h	356;"	d
IEEE80211_IS_CHAN_11N_CTL_L_CAPABLE	_ieee80211.h	359;"	d
IEEE80211_IS_CHAN_11N_CTL_U_CAPABLE	_ieee80211.h	357;"	d
IEEE80211_IS_CHAN_11N_HT20	_ieee80211.h	337;"	d
IEEE80211_IS_CHAN_11N_HT40	_ieee80211.h	339;"	d
IEEE80211_IS_CHAN_2GHZ	_ieee80211.h	284;"	d
IEEE80211_IS_CHAN_5GHZ	_ieee80211.h	286;"	d
IEEE80211_IS_CHAN_A	_ieee80211.h	267;"	d
IEEE80211_IS_CHAN_ANYG	_ieee80211.h	275;"	d
IEEE80211_IS_CHAN_B	_ieee80211.h	269;"	d
IEEE80211_IS_CHAN_CCK	_ieee80211.h	290;"	d
IEEE80211_IS_CHAN_CSA	_ieee80211.h	316;"	d
IEEE80211_IS_CHAN_DFS	_ieee80211.h	308;"	d
IEEE80211_IS_CHAN_DFSFLAG	_ieee80211.h	310;"	d
IEEE80211_IS_CHAN_DISALLOW_ADHOC	_ieee80211.h	312;"	d
IEEE80211_IS_CHAN_DTURBO	_ieee80211.h	298;"	d
IEEE80211_IS_CHAN_FHSS	_ieee80211.h	265;"	d
IEEE80211_IS_CHAN_G	_ieee80211.h	273;"	d
IEEE80211_IS_CHAN_GFSK	_ieee80211.h	292;"	d
IEEE80211_IS_CHAN_HALF	_ieee80211.h	301;"	d
IEEE80211_IS_CHAN_HT20_CAPABLE	_ieee80211.h	346;"	d
IEEE80211_IS_CHAN_HT40MINUS_CAPABLE	_ieee80211.h	350;"	d
IEEE80211_IS_CHAN_HT40PLUS_CAPABLE	_ieee80211.h	348;"	d
IEEE80211_IS_CHAN_HT40_CAPABLE	_ieee80211.h	352;"	d
IEEE80211_IS_CHAN_HT_CAPABLE	_ieee80211.h	354;"	d
IEEE80211_IS_CHAN_ODD	_ieee80211.h	318;"	d
IEEE80211_IS_CHAN_OFDM	_ieee80211.h	288;"	d
IEEE80211_IS_CHAN_PASSIVE	_ieee80211.h	305;"	d
IEEE80211_IS_CHAN_PUREG	_ieee80211.h	271;"	d
IEEE80211_IS_CHAN_QUARTER	_ieee80211.h	303;"	d
IEEE80211_IS_CHAN_RADAR	_ieee80211.h	364;"	d
IEEE80211_IS_CHAN_ST	_ieee80211.h	277;"	d
IEEE80211_IS_CHAN_STURBO	_ieee80211.h	296;"	d
IEEE80211_IS_CHAN_TURBO	_ieee80211.h	294;"	d
IEEE80211_KEYBUF_SIZE	_ieee80211.h	438;"	d
IEEE80211_KEYIX_NONE	ieee80211_defines.h	720;"	d
IEEE80211_KEYMGT_ALGS	ieee80211_defines.h	/^    IEEE80211_KEYMGT_ALGS,$/;"	e	enum:_ieee80211_rsn_param
IEEE80211_KEY_DEFAULT	ieee80211_ioctl.h	80;"	d
IEEE80211_KEY_DIR_BOTH	ieee80211_defines.h	/^    IEEE80211_KEY_DIR_BOTH$/;"	e	enum:_ieee80211_key_direction
IEEE80211_KEY_DIR_RX	ieee80211_defines.h	/^    IEEE80211_KEY_DIR_RX,$/;"	e	enum:_ieee80211_key_direction
IEEE80211_KEY_DIR_TX	ieee80211_defines.h	/^    IEEE80211_KEY_DIR_TX,$/;"	e	enum:_ieee80211_key_direction
IEEE80211_KEY_GROUP	ieee80211_ioctl.h	51;"	d
IEEE80211_KEY_RECV	ieee80211_ioctl.h	48;"	d
IEEE80211_KEY_XMIT	ieee80211_ioctl.h	47;"	d
IEEE80211_LISTEN_INTVAL	ieee80211_defines.h	/^    IEEE80211_LISTEN_INTVAL,                 \/* number of beacons *\/$/;"	e	enum:_ieee80211_param
IEEE80211_MACCMD_DETACH	ieee80211_ioctl.h	/^	IEEE80211_MACCMD_DETACH		= 4,	\/* detach ACL policy *\/$/;"	e	enum:__anon14
IEEE80211_MACCMD_FLUSH	ieee80211_ioctl.h	/^	IEEE80211_MACCMD_FLUSH		= 3,	\/* flush ACL database *\/$/;"	e	enum:__anon14
IEEE80211_MACCMD_POLICY_ALLOW	ieee80211_ioctl.h	/^	IEEE80211_MACCMD_POLICY_ALLOW	= 1,	\/* set policy: allow traffic *\/$/;"	e	enum:__anon14
IEEE80211_MACCMD_POLICY_DENY	ieee80211_ioctl.h	/^	IEEE80211_MACCMD_POLICY_DENY	= 2,	\/* set policy: deny traffic *\/$/;"	e	enum:__anon14
IEEE80211_MACCMD_POLICY_OPEN	ieee80211_ioctl.h	/^	IEEE80211_MACCMD_POLICY_OPEN	= 0,	\/* set policy: no ACL's *\/$/;"	e	enum:__anon14
IEEE80211_MAX_OPT_IE	ieee80211_ioctl.h	60;"	d
IEEE80211_MAX_WSC_IE	ieee80211_ioctl.h	61;"	d
IEEE80211_MCAST_CIPHER_LEN	ieee80211_defines.h	/^    IEEE80211_MCAST_CIPHER_LEN,$/;"	e	enum:_ieee80211_rsn_param
IEEE80211_MCAST_RATE	ieee80211_defines.h	/^    IEEE80211_MCAST_RATE,                    \/* rate in Kbps *\/$/;"	e	enum:_ieee80211_param
IEEE80211_ME	ieee80211_defines.h	/^    IEEE80211_ME,                            \/* mcast enhancement mode *\/$/;"	e	enum:_ieee80211_param
IEEE80211_MEDEBUG	ieee80211_defines.h	/^	IEEE80211_MEDEBUG,$/;"	e	enum:_ieee80211_param
IEEE80211_MEDUMP	ieee80211_defines.h	/^	IEEE80211_MEDUMP,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_ADDDENY	ieee80211_defines.h	/^    IEEE80211_ME_ADDDENY,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_CLEARDENY	ieee80211_defines.h	/^    IEEE80211_ME_CLEARDENY,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_DISABLE	ieee80211_ioctl.h	/^		IEEE80211_ME_DISABLE =	0,$/;"	e	enum:__anon18
IEEE80211_ME_DROPMCAST	ieee80211_defines.h	/^	IEEE80211_ME_DROPMCAST,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_SHOWDENY	ieee80211_defines.h	/^    IEEE80211_ME_SHOWDENY,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_SNOOPLENGTH	ieee80211_defines.h	/^	IEEE80211_ME_SNOOPLENGTH,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_TIMEOUT	ieee80211_defines.h	/^	IEEE80211_ME_TIMEOUT,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_TIMER	ieee80211_defines.h	/^	IEEE80211_ME_TIMER,$/;"	e	enum:_ieee80211_param
IEEE80211_ME_TRANSLATE	ieee80211_ioctl.h	/^		IEEE80211_ME_TRANSLATE =	2$/;"	e	enum:__anon18
IEEE80211_ME_TUNNELING	ieee80211_ioctl.h	/^		IEEE80211_ME_TUNNELING =	1,$/;"	e	enum:__anon18
IEEE80211_MICBUF_SIZE	_ieee80211.h	439;"	d
IEEE80211_MIMO_POWERSAVE_DYNAMIC	ieee80211_defines.h	/^    IEEE80211_MIMO_POWERSAVE_DYNAMIC  \/* dynamic mimo powersave *\/$/;"	e	enum:_iee80211_mimo_powersave_mode
IEEE80211_MIMO_POWERSAVE_NONE	ieee80211_defines.h	/^    IEEE80211_MIMO_POWERSAVE_NONE,    \/* no mimo power save *\/$/;"	e	enum:_iee80211_mimo_powersave_mode
IEEE80211_MIMO_POWERSAVE_STATIC	ieee80211_defines.h	/^    IEEE80211_MIMO_POWERSAVE_STATIC,  \/* static mimo power save *\/$/;"	e	enum:_iee80211_mimo_powersave_mode
IEEE80211_MIN_BEACON_COUNT	ieee80211_defines.h	/^    IEEE80211_MIN_BEACON_COUNT,              \/* minumum number beacons to tx\/rx before vap can pause *\/$/;"	e	enum:_ieee80211_param
IEEE80211_MLME_ASSOC	ieee80211_ioctl.h	104;"	d
IEEE80211_MLME_AUTHORIZE	ieee80211_ioctl.h	107;"	d
IEEE80211_MLME_CLEAR_STATS	ieee80211_ioctl.h	109;"	d
IEEE80211_MLME_DEAUTH	ieee80211_ioctl.h	106;"	d
IEEE80211_MLME_DISASSOC	ieee80211_ioctl.h	105;"	d
IEEE80211_MLME_UNAUTHORIZE	ieee80211_ioctl.h	108;"	d
IEEE80211_MODE_11A	_ieee80211.h	/^    IEEE80211_MODE_11A              = 1,    \/* 5GHz, OFDM *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11B	_ieee80211.h	/^    IEEE80211_MODE_11B              = 2,    \/* 2GHz, CCK *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11G	_ieee80211.h	/^    IEEE80211_MODE_11G              = 3,    \/* 2GHz, OFDM *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NA_HT20	_ieee80211.h	/^    IEEE80211_MODE_11NA_HT20        = 7,    \/* 5Ghz, HT20 *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NA_HT40MINUS	_ieee80211.h	/^    IEEE80211_MODE_11NA_HT40MINUS   = 10,   \/* 5Ghz, HT40 (ext ch -1) *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NA_HT40PLUS	_ieee80211.h	/^    IEEE80211_MODE_11NA_HT40PLUS    = 9,    \/* 5Ghz, HT40 (ext ch +1) *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NG_HT20	_ieee80211.h	/^    IEEE80211_MODE_11NG_HT20        = 8,    \/* 2Ghz, HT20 *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NG_HT40MINUS	_ieee80211.h	/^    IEEE80211_MODE_11NG_HT40MINUS   = 12,   \/* 2Ghz, HT40 (ext ch -1) *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_11NG_HT40PLUS	_ieee80211.h	/^    IEEE80211_MODE_11NG_HT40PLUS    = 11,   \/* 2Ghz, HT40 (ext ch +1) *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_AUTO	_ieee80211.h	/^    IEEE80211_MODE_AUTO             = 0,    \/* autoselect *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_FH	_ieee80211.h	/^    IEEE80211_MODE_FH               = 4,    \/* 2GHz, GFSK *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_MAX	_ieee80211.h	55;"	d
IEEE80211_MODE_TURBO_A	_ieee80211.h	/^    IEEE80211_MODE_TURBO_A          = 5,    \/* 5GHz, OFDM, 2x clock dynamic turbo *\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MODE_TURBO_G	_ieee80211.h	/^    IEEE80211_MODE_TURBO_G          = 6,    \/* 2GHz, OFDM, 2x clock  dynamic turbo*\/$/;"	e	enum:ieee80211_phymode
IEEE80211_MSG_ACL	ieee80211_defines.h	831;"	d
IEEE80211_MSG_ACS	ieee80211_defines.h	841;"	d
IEEE80211_MSG_ACTION	ieee80211_defines.h	837;"	d
IEEE80211_MSG_ANY	ieee80211_defines.h	842;"	d
IEEE80211_MSG_ASSOC	ieee80211_defines.h	819;"	d
IEEE80211_MSG_AUTH	ieee80211_defines.h	820;"	d
IEEE80211_MSG_CRYPTO	ieee80211_defines.h	814;"	d
IEEE80211_MSG_DEBUG	ieee80211_defines.h	812;"	d
IEEE80211_MSG_DOT1X	ieee80211_defines.h	825;"	d
IEEE80211_MSG_DOT1XSM	ieee80211_defines.h	826;"	d
IEEE80211_MSG_DOTH	ieee80211_defines.h	834;"	d
IEEE80211_MSG_DUMPPKTS	ieee80211_defines.h	813;"	d
IEEE80211_MSG_ELEMID	ieee80211_defines.h	817;"	d
IEEE80211_MSG_FLAGS	ieee80211_defines.h	/^    IEEE80211_MSG_FLAGS,                     \/* flags to turn on different debug messages *\/$/;"	e	enum:_ieee80211_param
IEEE80211_MSG_INACT	ieee80211_defines.h	835;"	d
IEEE80211_MSG_INPUT	ieee80211_defines.h	815;"	d
IEEE80211_MSG_IQUE	ieee80211_defines.h	833;"	d
IEEE80211_MSG_MLME	ieee80211_defines.h	811;"	d
IEEE80211_MSG_NODE	ieee80211_defines.h	818;"	d
IEEE80211_MSG_OUTPUT	ieee80211_defines.h	822;"	d
IEEE80211_MSG_POWER	ieee80211_defines.h	824;"	d
IEEE80211_MSG_RADDUMP	ieee80211_defines.h	828;"	d
IEEE80211_MSG_RADIUS	ieee80211_defines.h	827;"	d
IEEE80211_MSG_RADKEYS	ieee80211_defines.h	829;"	d
IEEE80211_MSG_ROAM	ieee80211_defines.h	836;"	d
IEEE80211_MSG_SCAN	ieee80211_defines.h	821;"	d
IEEE80211_MSG_SCANENTRY	ieee80211_defines.h	839;"	d
IEEE80211_MSG_SCAN_SM	ieee80211_defines.h	840;"	d
IEEE80211_MSG_STATE	ieee80211_defines.h	823;"	d
IEEE80211_MSG_WDS	ieee80211_defines.h	838;"	d
IEEE80211_MSG_WME	ieee80211_defines.h	832;"	d
IEEE80211_MSG_WPA	ieee80211_defines.h	830;"	d
IEEE80211_MSG_XRATE	ieee80211_defines.h	816;"	d
IEEE80211_MULTI_DOMAIN	ieee80211_defines.h	/^    IEEE80211_MULTI_DOMAIN,                  \/* Multiple domain *\/$/;"	e	enum:_ieee80211_param
IEEE80211_M_AHDEMO	_ieee80211.h	/^    IEEE80211_M_AHDEMO      = 3,    \/* Old lucent compatible adhoc demo *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_ANY	_ieee80211.h	/^    IEEE80211_M_ANY         = 0xFF  \/* Any of the above; used by NDIS 6.x *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_BASE	_ieee80211.h	/^    IEEE80211_M_BASE        = 13,    \/* *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_BTAMP	_ieee80211.h	/^    IEEE80211_M_BTAMP       = 9,    \/* VAP for BT AMP *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_HOSTAP	_ieee80211.h	/^    IEEE80211_M_HOSTAP      = 6,    \/* Software Access Point *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_IBSS	_ieee80211.h	/^    IEEE80211_M_IBSS        = 0,    \/* IBSS (adhoc) station *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_MONITOR	_ieee80211.h	/^    IEEE80211_M_MONITOR     = 8,    \/* Monitor mode *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_SAT	_ieee80211.h	/^    IEEE80211_M_SAT         = 14,    \/* *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_STA	_ieee80211.h	/^    IEEE80211_M_STA         = 1,    \/* infrastructure station *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_WDS	_ieee80211.h	/^    IEEE80211_M_WDS         = 2,    \/* WDS link *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_NAWDS_PARAM_DEFCAPS	_ieee80211.h	/^    IEEE80211_NAWDS_PARAM_DEFCAPS,$/;"	e	enum:ieee80211_nawds_param
IEEE80211_NAWDS_PARAM_MODE	_ieee80211.h	/^    IEEE80211_NAWDS_PARAM_MODE,$/;"	e	enum:ieee80211_nawds_param
IEEE80211_NAWDS_PARAM_NUM	_ieee80211.h	/^    IEEE80211_NAWDS_PARAM_NUM = 0,$/;"	e	enum:ieee80211_nawds_param
IEEE80211_NAWDS_PARAM_OVERRIDE	_ieee80211.h	/^    IEEE80211_NAWDS_PARAM_OVERRIDE,$/;"	e	enum:ieee80211_nawds_param
IEEE80211_NOBRIDGE_MODE	ieee80211_defines.h	/^    IEEE80211_NOBRIDGE_MODE,                 \/* No bridging done, all frames sent up the stack *\/$/;"	e	enum:_ieee80211_param
IEEE80211_NODE_PARAM_ASSOCID	ieee80211_defines.h	/^    IEEE80211_NODE_PARAM_ASSOCID,$/;"	e	enum:_ieee80211_node_param_type
IEEE80211_NODE_PARAM_AUTH_MODE	ieee80211_defines.h	/^    IEEE80211_NODE_PARAM_AUTH_MODE, \/* auth mode *\/$/;"	e	enum:_ieee80211_node_param_type
IEEE80211_NODE_PARAM_CAP_INFO	ieee80211_defines.h	/^    IEEE80211_NODE_PARAM_CAP_INFO,  \/* auth mode *\/$/;"	e	enum:_ieee80211_node_param_type
IEEE80211_NODE_PARAM_INACT	ieee80211_defines.h	/^    IEEE80211_NODE_PARAM_INACT,     \/* inactivity timer value *\/$/;"	e	enum:_ieee80211_node_param_type
IEEE80211_NODE_PARAM_TX_POWER	ieee80211_defines.h	/^    IEEE80211_NODE_PARAM_TX_POWER,$/;"	e	enum:_ieee80211_node_param_type
IEEE80211_NON_QOS_SEQ	_ieee80211.h	433;"	d
IEEE80211_NO_STABEACONS	ieee80211_ioctl.h	620;"	d
IEEE80211_NWID_LEN	ieee80211_defines.h	66;"	d
IEEE80211_PARAM_11N_RATE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_11N_RATE	= 87,	\/* Set ADDBA mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_11N_RETRIES	ieee80211_ioctl.h	/^	IEEE80211_PARAM_11N_RETRIES	= 88,	\/* Tx chain mask for legacy clients *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ABOLT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ABOLT		= 26,	\/* Atheros Adv. Capabilities *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ADDMKTKIE	ieee80211_ioctl.h	/^    IEEE80211_PARAM_ADDMKTKIE           = 131,  \/* Add MkTk compatible staWDS IE *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMPDU	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMPDU		= 73,	\/* 11n a-mpdu support *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMPDU_DENSITY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMPDU_DENSITY	= 75,	\/* a-mpdu density *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMPDU_LIMIT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMPDU_LIMIT	= 74,	\/* a-mpdu length limit *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMPDU_SUBFRAMES	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMPDU_SUBFRAMES	= 76,	\/* a-mpdu subframe limit *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMSDU	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMSDU		= 77,	\/* a-msdu support *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AMSDU_LIMIT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AMSDU_LIMIT	= 78,	\/* a-msdu length limit *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_APBRIDGE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_APBRIDGE	= 20,	\/* AP inter-sta bridging *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AR	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AR		= 38,	\/* AR support *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ATH_RADIO	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ATH_RADIO	= 91,	\/* returns the name of the radio being used *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_AUTHMODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_AUTHMODE	= 3,	\/* authentication mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BASICRATES	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BASICRATES	= 101,	\/* Change Basic Rates *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BEACON_INTERVAL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BEACON_INTERVAL	= 29,	\/* beacon interval (ms) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BGSCAN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BGSCAN		= 40,	\/* bg scanning (on, off) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BGSCAN_IDLE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BGSCAN_IDLE	= 41,	\/* bg scan idle threshold *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BGSCAN_INTERVAL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BGSCAN_INTERVAL	= 42,	\/* bg scan interval *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BLOCKDFSCHAN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BLOCKDFSCHAN	= 63, 	\/* enable\/disable use of DFS channels *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BMISS_COUNT_MAX	ieee80211_ioctl.h	/^    IEEE80211_PARAM_BMISS_COUNT_MAX     = 134,  \/* Add MkTk compatible staWDS IE *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_BURST	ieee80211_ioctl.h	/^	IEEE80211_PARAM_BURST		= 36,	\/* burst mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CCMPSW_ENCDEC	ieee80211_ioctl.h	/^    IEEE80211_PARAM_CCMPSW_ENCDEC = 130, \/* support for ccmp s\/w encrypt decrypt *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CHANBW	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CHANBW		= 60,	\/* set chan bandwidth preference *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CHEXTOFFSET	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CHEXTOFFSET	= 118,$/;"	e	enum:__anon20
IEEE80211_PARAM_CHSCANINIT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CHSCANINIT	= 119,$/;"	e	enum:__anon20
IEEE80211_PARAM_CHWIDTH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CHWIDTH		= 122,$/;"	e	enum:__anon20
IEEE80211_PARAM_COEXT_DISABLE	ieee80211_ioctl.h	/^    IEEE80211_PARAM_COEXT_DISABLE    = 124,$/;"	e	enum:__anon20
IEEE80211_PARAM_COMPRESSION	ieee80211_ioctl.h	/^	IEEE80211_PARAM_COMPRESSION	= 33,	\/* compression *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_COUNTERMEASURES	ieee80211_ioctl.h	/^	IEEE80211_PARAM_COUNTERMEASURES	= 14,	\/* WPA\/TKIP countermeasures *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_COUNTRYCODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_COUNTRYCODE	= 79,	\/* Get country code *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_COUNTRY_IE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_COUNTRY_IE	= 45,	\/* enable country IE *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_COVERAGE_CLASS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_COVERAGE_CLASS	= 44,	\/* coverage class *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_CHWIDTH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_CHWIDTH	= 70,	\/* CWM STATE: current channel width *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_ENABLE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_ENABLE	= 68,\/* CWM state machine enabled *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_EXTBUSYTHRESHOLD	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_EXTBUSYTHRESHOLD = 69,\/* CWM extension channel busy threshold *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_EXTOFFSET	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_EXTOFFSET	= 65,	\/* CWM extension channel offset *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_EXTPROTMODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_EXTPROTMODE	= 66,	\/* CWM extension channel protection mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_EXTPROTSPACING	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_EXTPROTSPACING = 67,\/* CWM extension channel protection spacing *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_CWM_MODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_CWM_MODE	= 64,	\/* CWM mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_DBG_LVL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DBG_LVL		= 89,	\/* Debug Level for specific VAP *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_DOTH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DOTH		= 30,	\/* 11.h is on\/off *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_DRIVER_CAPS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DRIVER_CAPS	= 16,	\/* driver capabilities *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_DROPUNENCRYPTED	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DROPUNENCRYPTED	= 15,	\/* discard unencrypted frames *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_DROPUNENC_EAPOL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DROPUNENC_EAPOL	= 106,$/;"	e	enum:__anon20
IEEE80211_PARAM_DTIM_PERIOD	ieee80211_ioctl.h	/^	IEEE80211_PARAM_DTIM_PERIOD	= 28,	\/* DTIM period (beacons) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_EOSPDROP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_EOSPDROP	= 57,	\/* force uapsd EOSP drop (ap only) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_EXTAP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_EXTAP		= 123,   \/* Enable client 3 addr forwarding *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_FAST_CC	ieee80211_ioctl.h	/^	IEEE80211_PARAM_FAST_CC		= 72,	\/* fast channel change *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_FF	ieee80211_ioctl.h	/^	IEEE80211_PARAM_FF		= 34,	\/* fast frames support *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_GENREASSOC	ieee80211_ioctl.h	/^	IEEE80211_PARAM_GENREASSOC	= 32,	\/* Generate a reassociation request *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_GETIQUECONFIG	ieee80211_ioctl.h	/^    IEEE80211_PARAM_GETIQUECONFIG = 129, \/*print out the iQUE config*\/$/;"	e	enum:__anon20
IEEE80211_PARAM_HBR_STATE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_HBR_STATE	= 108,$/;"	e	enum:__anon20
IEEE80211_PARAM_HBR_TIMER	ieee80211_ioctl.h	/^	IEEE80211_PARAM_HBR_TIMER	= 107,$/;"	e	enum:__anon20
IEEE80211_PARAM_HIDESSID	ieee80211_ioctl.h	/^	IEEE80211_PARAM_HIDESSID	= 19,	\/* hide SSID mode (on, off) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_HT40_INTOLERANT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_HT40_INTOLERANT	= 121,$/;"	e	enum:__anon20
IEEE80211_PARAM_HT_PROTECTION	ieee80211_ioctl.h	/^	IEEE80211_PARAM_HT_PROTECTION	= 83,	\/* Protect traffic in HT mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_IGNORE_11DBEACON	ieee80211_ioctl.h	/^	IEEE80211_PARAM_IGNORE_11DBEACON = 92,	\/* Don't process 11d beacon (on, off) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_INACT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_INACT		= 23,	\/* station inactivity timeout *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_INACT_AUTH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_INACT_AUTH	= 24,	\/* station auth inact timeout *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_INACT_INIT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_INACT_INIT	= 25,	\/* station init inact timeout *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_KEYMGTALGS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_KEYMGTALGS	= 21,	\/* key management algorithms *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MACCMD	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MACCMD		= 17,	\/* MAC ACL operation *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MARKDFS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MARKDFS		= 58,	\/* mark a dfs interference channel when found *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MCASTCIPHER	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MCASTCIPHER	= 5,	\/* multicast\/default cipher *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MCASTKEYLEN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MCASTKEYLEN	= 6,	\/* multicast key length *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MCAST_RATE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MCAST_RATE	= 43,	\/* Multicast Tx Rate *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME		= 94,	\/* Set Mcast enhancement option: 0 disable, 1 tunneling, 2 translate *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MEDEBUG	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MEDEBUG		= 96,	\/* mcast enhancement debug level *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MEDUMP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MEDUMP		= 95,	\/* Dump the snoop table for mcast enhancement *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_ADDDENY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_ADDDENY	= 128,	\/* add deny entry for mcast enhancement *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_CLEARDENY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_CLEARDENY	= 127,	\/* clear deny table for mcast enhancement *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_DROPMCAST	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_DROPMCAST	= 125,	\/* drop mcast if empty entry *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_SHOWDENY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_SHOWDENY	= 126,	\/* show deny table for mcast enhancement *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_SNOOPLENGTH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_SNOOPLENGTH	= 97,	\/* mcast snoop list length *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_TIMEOUT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_TIMEOUT	= 99,	\/* Set Mcast enhancement timeout for STA's without traffic, in msec *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ME_TIMER	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ME_TIMER	= 98,	\/* Set Mcast enhancement timer to update the snoop list, in msec *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MODE		= 2,	\/* phy mode (11a, 11b, etc.) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_MPDU_SPACING	ieee80211_ioctl.h	/^	IEEE80211_PARAM_MPDU_SPACING	= 120,$/;"	e	enum:__anon20
IEEE80211_PARAM_NETWORK_SLEEP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_NETWORK_SLEEP	= 105,	\/* set network sleep enable\/disable *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_NO_EDGE_CH	ieee80211_ioctl.h	/^	IEEE80211_PARAM_NO_EDGE_CH	= 102,	\/* Avoid band edge channels *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PRIVACY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PRIVACY		= 13,	\/* privacy invoked *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PROTMODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PROTMODE	= 4,	\/* 802.11g protection *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PSPOLL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PSPOLL		= 56,	\/* force ps-poll generation (sta only) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PUREG	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PUREG		= 37,	\/* pure 11g (no 11b stations) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PUREN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PUREN		= 100,	\/* pure 11n (no 11bg\/11a stations) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_PWRTARGET	ieee80211_ioctl.h	/^	IEEE80211_PARAM_PWRTARGET	= 31,	\/* Current Channel Pwr Constraint *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_QOSNULL	ieee80211_ioctl.h	/^	IEEE80211_PARAM_QOSNULL		= 55,	\/* force sleep\/wake *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RADIO	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RADIO		= 104,	\/* radio on\/off *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_REGCLASS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_REGCLASS	= 59,	\/* enable regclass ids in country IE *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RESET_ONCE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RESET_ONCE	= 84,	\/* Force a reset *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAMING	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAMING		= 12,	\/* roaming mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RATE_11A	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RATE_11A	= 50,	\/* tx rate threshold in 11a *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RATE_11B	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RATE_11B	= 51,	\/* tx rate threshold in 11b *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RATE_11G	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RATE_11G	= 52,	\/* tx rate threshold in 11g *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RSSI_11A	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RSSI_11A	= 47,	\/* rssi threshold in 11a *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RSSI_11B	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RSSI_11B	= 48,	\/* rssi threshold in 11b *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_ROAM_RSSI_11G	ieee80211_ioctl.h	/^	IEEE80211_PARAM_ROAM_RSSI_11G	= 49,	\/* rssi threshold in 11g *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RSNCAPS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RSNCAPS		= 22,	\/* RSN capabilities *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RTSCTS_RATECODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RTSCTS_RATECODE	= 82,	\/* RTS Rate code *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RX_CHAINMASK	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RX_CHAINMASK	= 81,	\/* Rx chain mask *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_RX_RATE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_RX_RATE		= 117,$/;"	e	enum:__anon20
IEEE80211_PARAM_SCANVALID	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SCANVALID	= 46,	\/* scan cache valid threshold *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_SCAN_PRE_SLEEP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SCAN_PRE_SLEEP	= 110,$/;"	e	enum:__anon20
IEEE80211_PARAM_SETADDBAOPER	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SETADDBAOPER	= 85,	\/* Set ADDBA mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_SETWAPI	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SETWAPI		= 112,$/;"	e	enum:__anon20
IEEE80211_PARAM_SHORTPREAMBLE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SHORTPREAMBLE	= 62, 	\/* enable\/disable short Preamble *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_SHORT_GI	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SHORT_GI	= 71,	\/* half GI *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_SLEEP	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SLEEP		= 54,	\/* force sleep\/wake *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_SLEEP_PRE_SCAN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_SLEEP_PRE_SCAN	= 109,$/;"	e	enum:__anon20
IEEE80211_PARAM_STA_FORWARD	ieee80211_ioctl.h	/^	IEEE80211_PARAM_STA_FORWARD	= 93,	\/* Enable client 3 addr forwarding *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_TURBO	ieee80211_ioctl.h	/^	IEEE80211_PARAM_TURBO		= 1,	\/* turbo mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_TX_CHAINMASK	ieee80211_ioctl.h	/^	IEEE80211_PARAM_TX_CHAINMASK	= 80,	\/* Tx chain mask *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_TX_CHAINMASK_LEGACY	ieee80211_ioctl.h	/^	IEEE80211_PARAM_TX_CHAINMASK_LEGACY = 86, \/* Tx chain mask for legacy clients *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_UAPSDINFO	ieee80211_ioctl.h	/^	IEEE80211_PARAM_UAPSDINFO	= 53,	\/* value for qos info field *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_UCASTCIPHER	ieee80211_ioctl.h	/^	IEEE80211_PARAM_UCASTCIPHER	= 8,	\/* unicast cipher *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_UCASTCIPHERS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_UCASTCIPHERS	= 7,	\/* unicast cipher suites *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_UCASTKEYLEN	ieee80211_ioctl.h	/^	IEEE80211_PARAM_UCASTKEYLEN	= 9,	\/* unicast key length *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_VAP_IND	ieee80211_ioctl.h	/^	IEEE80211_PARAM_VAP_IND		= 111,  \/* Independent VAP mode for Repeater and AP-STA config *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WDS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WDS		= 39,	\/* Enable 4 address processing *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WDS_AUTODETECT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WDS_AUTODETECT	= 90,	\/* Configurable Auto Detect\/Delba for WDS mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WEP_TKIP_HT	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WEP_TKIP_HT	= 103,	\/* Enable HT rates with WEP\/TKIP encryption *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WMM	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WMM		= 18,	\/* WMM mode (on, off) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WMM_AGGRMODE	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WMM_AGGRMODE	= 61,	\/* set WMM Aggressive Mode *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WPA	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WPA		= 10,	\/* WPA mode (0,1,2) *\/$/;"	e	enum:__anon20
IEEE80211_PARAM_WPS	ieee80211_ioctl.h	/^	IEEE80211_PARAM_WPS		= 116,$/;"	e	enum:__anon20
IEEE80211_PARAM_XR	ieee80211_ioctl.h	/^	IEEE80211_PARAM_XR		= 35,	\/* XR support *\/$/;"	e	enum:__anon20
IEEE80211_PERSTA_KEYTABLE_SIZE	ieee80211_defines.h	/^    IEEE80211_PERSTA_KEYTABLE_SIZE,          \/* IBSS-only, read-only: persta key table size *\/$/;"	e	enum:_ieee80211_param
IEEE80211_PMKID_LEN	ieee80211_defines.h	757;"	d
IEEE80211_POWERSAVE_CAM	ieee80211_ioctl.h	314;"	d
IEEE80211_POWERSAVE_NOSUP	ieee80211_ioctl.h	312;"	d
IEEE80211_POWERSAVE_OFF	ieee80211_ioctl.h	313;"	d
IEEE80211_POWERSAVE_ON	ieee80211_ioctl.h	317;"	d
IEEE80211_POWERSAVE_PSP	ieee80211_ioctl.h	315;"	d
IEEE80211_POWERSAVE_PSP_CAM	ieee80211_ioctl.h	316;"	d
IEEE80211_PRIMARY_VAP	ieee80211_defines.h	111;"	d
IEEE80211_PRIVACY_FILTER_ALLWAYS	ieee80211_defines.h	/^    IEEE80211_PRIVACY_FILTER_ALLWAYS,$/;"	e	enum:_ieee80211_privacy_filter
IEEE80211_PRIVACY_FILTER_KEY_UNAVAILABLE	ieee80211_defines.h	/^    IEEE80211_PRIVACY_FILTER_KEY_UNAVAILABLE,$/;"	e	enum:_ieee80211_privacy_filter
IEEE80211_PRIVACY_FILTER_PACKET_BOTH	ieee80211_defines.h	/^    IEEE80211_PRIVACY_FILTER_PACKET_BOTH$/;"	e	enum:_ieee80211_privacy_filter_packet_type
IEEE80211_PRIVACY_FILTER_PACKET_MULTICAST	ieee80211_defines.h	/^    IEEE80211_PRIVACY_FILTER_PACKET_MULTICAST,$/;"	e	enum:_ieee80211_privacy_filter_packet_type
IEEE80211_PRIVACY_FILTER_PACKET_UNICAST	ieee80211_defines.h	/^    IEEE80211_PRIVACY_FILTER_PACKET_UNICAST,$/;"	e	enum:_ieee80211_privacy_filter_packet_type
IEEE80211_PROTECTION_CTSTOSELF	ieee80211_defines.h	654;"	d
IEEE80211_PROTECTION_NONE	ieee80211_defines.h	653;"	d
IEEE80211_PROTECTION_RTS_CTS	ieee80211_defines.h	655;"	d
IEEE80211_PROTMODE_CTS	ieee80211_ioctl.h	322;"	d
IEEE80211_PROTMODE_OFF	ieee80211_ioctl.h	321;"	d
IEEE80211_PROTMODE_RTSCTS	ieee80211_ioctl.h	323;"	d
IEEE80211_PROT_CTSONLY	_ieee80211.h	/^    IEEE80211_PROT_CTSONLY  = 1,    \/* CTS to self *\/$/;"	e	enum:ieee80211_protmode
IEEE80211_PROT_NONE	_ieee80211.h	/^    IEEE80211_PROT_NONE     = 0,    \/* no protection *\/$/;"	e	enum:ieee80211_protmode
IEEE80211_PROT_RTSCTS	_ieee80211.h	/^    IEEE80211_PROT_RTSCTS   = 2,    \/* RTS-CTS *\/$/;"	e	enum:ieee80211_protmode
IEEE80211_PWRSAVE_LOW	ieee80211_defines.h	/^    IEEE80211_PWRSAVE_LOW,$/;"	e	enum:ieee80211_psmode
IEEE80211_PWRSAVE_MAXIMUM	ieee80211_defines.h	/^    IEEE80211_PWRSAVE_MAXIMUM$/;"	e	enum:ieee80211_psmode
IEEE80211_PWRSAVE_NONE	ieee80211_defines.h	/^    IEEE80211_PWRSAVE_NONE = 0,          \/* no power save *\/$/;"	e	enum:ieee80211_psmode
IEEE80211_PWRSAVE_NORMAL	ieee80211_defines.h	/^    IEEE80211_PWRSAVE_NORMAL,$/;"	e	enum:ieee80211_psmode
IEEE80211_RADAR_11HCOUNT	_ieee80211.h	194;"	d
IEEE80211_RADAR_DETECT_DEFAULT_DELAY	_ieee80211.h	196;"	d
IEEE80211_RADAR_TEST_MUTE_CHAN	_ieee80211.h	195;"	d
IEEE80211_RATE_IDX_ENTRY	_ieee80211.h	396;"	d
IEEE80211_RATE_MAXSIZE	_ieee80211.h	389;"	d
IEEE80211_RATE_MCS	_ieee80211.h	393;"	d
IEEE80211_RATE_MCS_VAL	_ieee80211.h	394;"	d
IEEE80211_RATE_SINGLE_STREAM_MCS_MAX	_ieee80211.h	391;"	d
IEEE80211_RATE_SIZE	_ieee80211.h	388;"	d
IEEE80211_RATE_TYPE_LEGACY	ieee80211_defines.h	/^    IEEE80211_RATE_TYPE_LEGACY,$/;"	e	enum:_ieee80211_rate_type
IEEE80211_RATE_TYPE_MCS	ieee80211_defines.h	/^    IEEE80211_RATE_TYPE_MCS,$/;"	e	enum:_ieee80211_rate_type
IEEE80211_REASON_CANCELLED	ieee80211_defines.h	/^    IEEE80211_REASON_CANCELLED,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_CODE	ieee80211_defines.h	/^typedef int IEEE80211_REASON_CODE;$/;"	t
IEEE80211_REASON_COMPLETED	ieee80211_defines.h	/^    IEEE80211_REASON_COMPLETED,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_COUNT	ieee80211_defines.h	/^    IEEE80211_REASON_COUNT$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_MAX_OFFCHAN_RETRIES	ieee80211_defines.h	/^    IEEE80211_REASON_MAX_OFFCHAN_RETRIES,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_NONE	ieee80211_defines.h	/^    IEEE80211_REASON_NONE,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_TERMINATION_FUNCTION	ieee80211_defines.h	/^    IEEE80211_REASON_TERMINATION_FUNCTION,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_REASON_TIMEDOUT	ieee80211_defines.h	/^    IEEE80211_REASON_TIMEDOUT,$/;"	e	enum:ieee80211_scan_completion_reason
IEEE80211_RECEIVE_80211	ieee80211_defines.h	/^    IEEE80211_RECEIVE_80211,                 \/* deliver std 802.11 frames 802.11 instead of ethernet frames on the rx *\/$/;"	e	enum:_ieee80211_param
IEEE80211_RESET_TYPE_DEVICE	ieee80211_defines.h	/^    IEEE80211_RESET_TYPE_DEVICE = 0,    \/* device reset on error: tx timeout and etc. *\/$/;"	e	enum:_ieee80211_reset_type
IEEE80211_RESET_TYPE_DOT11_INTF	ieee80211_defines.h	/^    IEEE80211_RESET_TYPE_DOT11_INTF,    \/* dot11 reset: only reset one network interface (vap) *\/$/;"	e	enum:_ieee80211_reset_type
IEEE80211_RESET_TYPE_INTERNAL	ieee80211_defines.h	/^    IEEE80211_RESET_TYPE_INTERNAL,      \/* internal reset *\/$/;"	e	enum:_ieee80211_reset_type
IEEE80211_RIFS_AGGR_DIV	_ieee80211.h	414;"	d
IEEE80211_ROAMING_AUTO	_ieee80211.h	/^    IEEE80211_ROAMING_AUTO  = 1,    \/* 802.11 layer control *\/$/;"	e	enum:ieee80211_roamingmode
IEEE80211_ROAMING_DEVICE	_ieee80211.h	/^    IEEE80211_ROAMING_DEVICE= 0,    \/* driver\/hardware control *\/$/;"	e	enum:ieee80211_roamingmode
IEEE80211_ROAMING_MANUAL	_ieee80211.h	/^    IEEE80211_ROAMING_MANUAL= 2,    \/* application control *\/$/;"	e	enum:ieee80211_roamingmode
IEEE80211_RSN_CAPS	ieee80211_defines.h	/^    IEEE80211_RSN_CAPS$/;"	e	enum:_ieee80211_rsn_param
IEEE80211_RSSI_MAX	_ieee80211.h	401;"	d
IEEE80211_RSSI_MIN	_ieee80211.h	402;"	d
IEEE80211_RTS_THRESHOLD	ieee80211_defines.h	/^    IEEE80211_RTS_THRESHOLD,                 \/* rts threshold, 0 means no rts threshold  *\/$/;"	e	enum:_ieee80211_param
IEEE80211_RX_DECRYPT_ERROR	ieee80211_defines.h	87;"	d
IEEE80211_RX_FCS_ERROR	ieee80211_defines.h	85;"	d
IEEE80211_RX_KEYMISS	ieee80211_defines.h	89;"	d
IEEE80211_RX_MIC_ERROR	ieee80211_defines.h	86;"	d
IEEE80211_SAFE_MODE	ieee80211_defines.h	/^    IEEE80211_SAFE_MODE,                     \/* Safe mode *\/$/;"	e	enum:_ieee80211_param
IEEE80211_SCAN_2GHZ	ieee80211_defines.h	231;"	d
IEEE80211_SCAN_5GHZ	ieee80211_defines.h	232;"	d
IEEE80211_SCAN_ACTIVE	ieee80211_defines.h	230;"	d
IEEE80211_SCAN_ADD_BCAST_PROBE	ieee80211_defines.h	237;"	d
IEEE80211_SCAN_ALLBANDS	ieee80211_defines.h	233;"	d
IEEE80211_SCAN_BACKGROUND	ieee80211_defines.h	/^    IEEE80211_SCAN_BACKGROUND,$/;"	e	enum:_ieee80211_scan_type
IEEE80211_SCAN_BEST	_ieee80211.h	/^    IEEE80211_SCAN_BEST     = 1,    \/* 802.11 layer selects best *\/$/;"	e	enum:ieee80211_scanmode
IEEE80211_SCAN_BSSID_MATCH	ieee80211_defines.h	/^    IEEE80211_SCAN_BSSID_MATCH ,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_CANCEL_ASYNC	ieee80211_defines.h	246;"	d
IEEE80211_SCAN_CANCEL_SYNC	ieee80211_defines.h	248;"	d
IEEE80211_SCAN_CANCEL_WAIT	ieee80211_defines.h	247;"	d
IEEE80211_SCAN_COMPLETED	ieee80211_defines.h	/^    IEEE80211_SCAN_COMPLETED,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_CONTINUOUS	ieee80211_defines.h	234;"	d
IEEE80211_SCAN_DEVICE	_ieee80211.h	/^    IEEE80211_SCAN_DEVICE   = 0,    \/* driver\/hardware control *\/$/;"	e	enum:ieee80211_scanmode
IEEE80211_SCAN_EVENT_COUNT	ieee80211_defines.h	/^    IEEE80211_SCAN_EVENT_COUNT$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_EXTERNAL	ieee80211_defines.h	238;"	d
IEEE80211_SCAN_FIRST	_ieee80211.h	/^    IEEE80211_SCAN_FIRST    = 2,    \/* take first suitable candidate *\/$/;"	e	enum:ieee80211_scanmode
IEEE80211_SCAN_FORCED	ieee80211_defines.h	235;"	d
IEEE80211_SCAN_FOREGROUND	ieee80211_defines.h	/^    IEEE80211_SCAN_FOREGROUND,$/;"	e	enum:_ieee80211_scan_type
IEEE80211_SCAN_FOREIGN_CHANNEL	ieee80211_defines.h	/^    IEEE80211_SCAN_FOREIGN_CHANNEL,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_FOREIGN_CHANNEL_GET_NF	ieee80211_defines.h	/^    IEEE80211_SCAN_FOREIGN_CHANNEL_GET_NF,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_HOME_CHANNEL	ieee80211_defines.h	/^    IEEE80211_SCAN_HOME_CHANNEL,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_MAX_SSID	ieee80211_ioctl.h	52;"	d
IEEE80211_SCAN_NOW	ieee80211_defines.h	236;"	d
IEEE80211_SCAN_PARAMS_MAX_BSSID	ieee80211_defines.h	241;"	d
IEEE80211_SCAN_PARAMS_MAX_SSID	ieee80211_defines.h	240;"	d
IEEE80211_SCAN_PASSIVE	ieee80211_defines.h	229;"	d
IEEE80211_SCAN_PAUSED	ieee80211_defines.h	/^    IEEE80211_SCAN_PAUSED,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_PRIORITY_HIGH	ieee80211_defines.h	/^    IEEE80211_SCAN_PRIORITY_HIGH$/;"	e	enum:_ieee80211_scan_priority
IEEE80211_SCAN_PRIORITY_LOW	ieee80211_defines.h	/^    IEEE80211_SCAN_PRIORITY_LOW,$/;"	e	enum:_ieee80211_scan_priority
IEEE80211_SCAN_RESTARTED	ieee80211_defines.h	/^    IEEE80211_SCAN_RESTARTED,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_RESUMED	ieee80211_defines.h	/^    IEEE80211_SCAN_RESUMED,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SCAN_SPECTRAL	ieee80211_defines.h	/^    IEEE80211_SCAN_SPECTRAL$/;"	e	enum:_ieee80211_scan_type
IEEE80211_SCAN_STARTED	ieee80211_defines.h	/^    IEEE80211_SCAN_STARTED,$/;"	e	enum:_ieee80211_scan_event_type
IEEE80211_SEND_80211	ieee80211_defines.h	/^    IEEE80211_SEND_80211,                    \/* OS sends std 802.11 frames 802.11 instead of ethernet frames on tx side *\/$/;"	e	enum:_ieee80211_param
IEEE80211_SEND_NULL	ieee80211_defines.h	/^    IEEE80211_SEND_NULL,$/;"	e	enum:_ieee80211_send_frame_type
IEEE80211_SEND_QOSNULL	ieee80211_defines.h	/^    IEEE80211_SEND_QOSNULL,$/;"	e	enum:_ieee80211_send_frame_type
IEEE80211_SHORT_GI	ieee80211_defines.h	/^    IEEE80211_SHORT_GI,                      \/* short gi on\/off *\/$/;"	e	enum:_ieee80211_param
IEEE80211_SHORT_PREAMBLE	ieee80211_defines.h	/^    IEEE80211_SHORT_PREAMBLE,                \/* short preamble on\/off *\/$/;"	e	enum:_ieee80211_param
IEEE80211_SHORT_SLOT	ieee80211_defines.h	/^    IEEE80211_SHORT_SLOT,                    \/* short slot on\/off *\/$/;"	e	enum:_ieee80211_param
IEEE80211_STATUS	ieee80211_defines.h	/^typedef int IEEE80211_STATUS;$/;"	t
IEEE80211_STA_OPMODE_NORMAL	ieee80211_ioctl.h	/^	IEEE80211_STA_OPMODE_NORMAL,$/;"	e	enum:__anon16
IEEE80211_STA_OPMODE_XR	ieee80211_ioctl.h	/^	IEEE80211_STA_OPMODE_XR$/;"	e	enum:__anon16
IEEE80211_TID_SIZE	_ieee80211.h	432;"	d
IEEE80211_TSN_MODE	ieee80211_defines.h	/^    IEEE80211_TSN_MODE,                      \/* TSN mode*\/$/;"	e	enum:_ieee80211_param
IEEE80211_TXPOWER	ieee80211_defines.h	/^    IEEE80211_TXPOWER,                       \/* in 0.5db units *\/$/;"	e	enum:_ieee80211_param
IEEE80211_TX_COALESCING_THRESHOLD	ieee80211_defines.h	541;"	d
IEEE80211_TX_ERROR	ieee80211_defines.h	76;"	d
IEEE80211_TX_XRETRY	ieee80211_defines.h	77;"	d
IEEE80211_T_ANY	_ieee80211.h	/^    IEEE80211_T_ANY,$/;"	e	enum:ieee80211_phytype
IEEE80211_T_CCK	_ieee80211.h	37;"	d
IEEE80211_T_DS	_ieee80211.h	/^    IEEE80211_T_DS,                 \/* direct sequence spread spectrum *\/$/;"	e	enum:ieee80211_phytype
IEEE80211_T_ERP	_ieee80211.h	/^    IEEE80211_T_ERP,$/;"	e	enum:ieee80211_phytype
IEEE80211_T_FH	_ieee80211.h	/^    IEEE80211_T_FH,                 \/* frequency hopping *\/$/;"	e	enum:ieee80211_phytype
IEEE80211_T_HT	_ieee80211.h	/^    IEEE80211_T_HT,                 \/* HT - full GI *\/$/;"	e	enum:ieee80211_phytype
IEEE80211_T_MAX	_ieee80211.h	/^    IEEE80211_T_MAX$/;"	e	enum:ieee80211_phytype
IEEE80211_T_OFDM	_ieee80211.h	/^    IEEE80211_T_OFDM,               \/* frequency division multiplexing *\/$/;"	e	enum:ieee80211_phytype
IEEE80211_T_TURBO	_ieee80211.h	/^    IEEE80211_T_TURBO,              \/* high rate OFDM, aka turbo mode *\/$/;"	e	enum:ieee80211_phytype
IEEE80211_UCAST_CIPHER_LEN	ieee80211_defines.h	/^    IEEE80211_UCAST_CIPHER_LEN,$/;"	e	enum:_ieee80211_rsn_param
IEEE80211_VAP_CREATED	ieee80211_defines.h	/^    IEEE80211_VAP_CREATED = 1,$/;"	e	enum:_ieee80211_dev_vap_event
IEEE80211_VAP_DELETED	ieee80211_defines.h	/^    IEEE80211_VAP_DELETED$/;"	e	enum:_ieee80211_dev_vap_event
IEEE80211_VAP_STOPPED	ieee80211_defines.h	/^    IEEE80211_VAP_STOPPED,$/;"	e	enum:_ieee80211_dev_vap_event
IEEE80211_WEP_MBSSID	ieee80211_defines.h	/^    IEEE80211_WEP_MBSSID,                  $/;"	e	enum:_ieee80211_param
IEEE80211_WEP_MIXED	ieee80211_ioctl.h	304;"	d
IEEE80211_WEP_NOSUP	ieee80211_ioctl.h	301;"	d
IEEE80211_WEP_OFF	ieee80211_ioctl.h	302;"	d
IEEE80211_WEP_ON	ieee80211_ioctl.h	303;"	d
IEEE80211_WLANCONFIG_CMDTYPE	ieee80211_ioctl.h	/^} IEEE80211_WLANCONFIG_CMDTYPE;$/;"	t	typeref:enum:__anon23
IEEE80211_WLANCONFIG_FAIL	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_FAIL        = 1,$/;"	e	enum:__anon24
IEEE80211_WLANCONFIG_NAWDS_CLR_ADDR	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_CLR_ADDR,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NAWDS_GET	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_GET,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NAWDS_SET_ADDR	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_SET_ADDR,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NAWDS_SET_DEFCAPS	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_SET_DEFCAPS,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NAWDS_SET_MODE	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_SET_MODE,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NAWDS_SET_OVERRIDE	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NAWDS_SET_OVERRIDE,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_NOP	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_NOP,$/;"	e	enum:__anon23
IEEE80211_WLANCONFIG_OK	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_OK          = 0,$/;"	e	enum:__anon24
IEEE80211_WLANCONFIG_STATUS	ieee80211_ioctl.h	/^} IEEE80211_WLANCONFIG_STATUS;$/;"	t	typeref:enum:__anon24
IEEE80211_WMEPARAM_BSS	ieee80211_ioctl.h	249;"	d
IEEE80211_WMEPARAM_SELF	ieee80211_ioctl.h	248;"	d
IEEE80211_WMEPARAM_VAL	ieee80211_ioctl.h	250;"	d
IEEE80211_WMMPARAMS_ACM	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_ACM		= 5,$/;"	e	enum:__anon19
IEEE80211_WMMPARAMS_AIFS	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_AIFS	= 3,$/;"	e	enum:__anon19
IEEE80211_WMMPARAMS_CWMAX	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_CWMAX	= 2,$/;"	e	enum:__anon19
IEEE80211_WMMPARAMS_CWMIN	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_CWMIN	= 1,$/;"	e	enum:__anon19
IEEE80211_WMMPARAMS_NOACKPOLICY	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_NOACKPOLICY	= 6,$/;"	e	enum:__anon19
IEEE80211_WMMPARAMS_TXOPLIMIT	ieee80211_ioctl.h	/^	IEEE80211_WMMPARAMS_TXOPLIMIT	= 4,$/;"	e	enum:__anon19
IEEE80211_WPS_MODE	ieee80211_defines.h	/^    IEEE80211_WPS_MODE,                      \/* WPS mode*\/$/;"	e	enum:_ieee80211_param
IFLA_WIRELESS	wrt-radauth.c	46;"	d	file:
INLINE	typedefs.h	148;"	d
INLINE	typedefs.h	152;"	d
INLINE	typedefs.h	156;"	d
IS_WPA_AUTH	802.11.h	667;"	d
LAST_ASSOC_TIME_DELTA_REQUIREMENT	ieee80211_defines.h	303;"	d
MAC2STR	wireless.h	41;"	d
MACLENGTH	radius.c	49;"	d	file:
MACSTR	wireless.h	40;"	d
MAX_CHAINS	ieee80211_defines.h	406;"	d
MSG_DONTWAIT	wireless.h	38;"	d
NAS_IP_ADDRESS	radius.c	44;"	d	file:
NAS_PORT	radius.c	45;"	d	file:
NAS_PORT_TYPE	radius.c	46;"	d	file:
NEIGHBOR_BSS_RANK	ieee80211_defines.h	294;"	d
NULL	typedefs.h	48;"	d
OFF	typedefs.h	56;"	d
ON	typedefs.h	60;"	d
PACKED	802.11.h	/^}  PACKED;$/;"	v	typeref:struct:dot11_channel_switch
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:brcm_ie
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_ack_frame
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_action_measure
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_assoc_req
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_assoc_resp
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_auth
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_bcn_prb
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_cf_end_frame
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_cts_frame
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_header
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_llc_snap_header
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_management_header
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_meas_rep
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_meas_rep_basic
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_ps_poll_frame
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_quiet
PACKED	802.11.h	/^} PACKED;$/;"	v	typeref:struct:dot11_rts_frame
PACKED	802.11.h	33;"	d
PACKED	802.11.h	35;"	d
PACKED	802.11.h	691;"	d
PACKED	ethernet.h	/^} PACKED ;$/;"	v	typeref:struct:ether_addr
PACKED	ethernet.h	/^} PACKED ;$/;"	v	typeref:struct:ether_header
PACKED	ethernet.h	149;"	d
PACKED	ethernet.h	21;"	d
PACKED	ethernet.h	23;"	d
PHY_CWMAX	802.11.h	613;"	d
PREFERRED_BSS_RANK	ieee80211_defines.h	293;"	d
PTRSZ	typedefs.h	142;"	d
QBSS_HYST_ADJ	ieee80211_defines.h	307;"	d
QBSS_SCALE_DOWN_FACTOR	ieee80211_defines.h	306;"	d
QBSS_SCALE_MAX	ieee80211_defines.h	305;"	d
REPLY_MESSAGE	radius.c	47;"	d	file:
RFC1042_HDR_LEN	802.11.h	90;"	d
ROTATE_LEFT	md5.c	197;"	d	file:
SEQNUM_SHIFT	802.11.h	359;"	d
SET	md5.c	203;"	d	file:
SET	md5.c	223;"	d	file:
SET	md5.c	229;"	d	file:
SET	md5.c	249;"	d	file:
SET	md5.c	255;"	d	file:
SET	md5.c	275;"	d	file:
SET	md5.c	281;"	d	file:
SET	md5.c	301;"	d	file:
SIOC80211IFCREATE	ieee80211_ioctl.h	295;"	d
SIOC80211IFCREATE	ieee80211_ioctl.h	608;"	d
SIOC80211IFDESTROY	ieee80211_ioctl.h	296;"	d
SIOC80211IFDESTROY	ieee80211_ioctl.h	609;"	d
SIOCG80211	ieee80211_ioctl.h	293;"	d
SIOCG80211STATS	ieee80211_ioctl.h	294;"	d
SIOCG80211STATS	ieee80211_ioctl.h	602;"	d
SIOCS80211	ieee80211_ioctl.h	292;"	d
STA_RADIUS_ACCEPTED	radius.h	27;"	d
STA_RADIUS_DENIED	radius.h	29;"	d
STA_RADIUS_WAITING	radius.h	28;"	d
T1	md5.c	65;"	d	file:
T10	md5.c	74;"	d	file:
T11	md5.c	75;"	d	file:
T12	md5.c	76;"	d	file:
T13	md5.c	77;"	d	file:
T14	md5.c	78;"	d	file:
T15	md5.c	79;"	d	file:
T16	md5.c	80;"	d	file:
T17	md5.c	81;"	d	file:
T18	md5.c	82;"	d	file:
T19	md5.c	83;"	d	file:
T2	md5.c	66;"	d	file:
T20	md5.c	84;"	d	file:
T21	md5.c	85;"	d	file:
T22	md5.c	86;"	d	file:
T23	md5.c	87;"	d	file:
T24	md5.c	88;"	d	file:
T25	md5.c	89;"	d	file:
T26	md5.c	90;"	d	file:
T27	md5.c	91;"	d	file:
T28	md5.c	92;"	d	file:
T29	md5.c	93;"	d	file:
T3	md5.c	67;"	d	file:
T30	md5.c	94;"	d	file:
T31	md5.c	95;"	d	file:
T32	md5.c	96;"	d	file:
T33	md5.c	97;"	d	file:
T34	md5.c	98;"	d	file:
T35	md5.c	99;"	d	file:
T36	md5.c	100;"	d	file:
T37	md5.c	101;"	d	file:
T38	md5.c	102;"	d	file:
T39	md5.c	103;"	d	file:
T4	md5.c	68;"	d	file:
T40	md5.c	104;"	d	file:
T41	md5.c	105;"	d	file:
T42	md5.c	106;"	d	file:
T43	md5.c	107;"	d	file:
T44	md5.c	108;"	d	file:
T45	md5.c	109;"	d	file:
T46	md5.c	110;"	d	file:
T47	md5.c	111;"	d	file:
T48	md5.c	112;"	d	file:
T49	md5.c	113;"	d	file:
T5	md5.c	69;"	d	file:
T50	md5.c	114;"	d	file:
T51	md5.c	115;"	d	file:
T52	md5.c	116;"	d	file:
T53	md5.c	117;"	d	file:
T54	md5.c	118;"	d	file:
T55	md5.c	119;"	d	file:
T56	md5.c	120;"	d	file:
T57	md5.c	121;"	d	file:
T58	md5.c	122;"	d	file:
T59	md5.c	123;"	d	file:
T6	md5.c	70;"	d	file:
T60	md5.c	124;"	d	file:
T61	md5.c	125;"	d	file:
T62	md5.c	126;"	d	file:
T63	md5.c	127;"	d	file:
T64	md5.c	128;"	d	file:
T7	md5.c	71;"	d	file:
T8	md5.c	72;"	d	file:
T9	md5.c	73;"	d	file:
TKIP_EOM_FLAG	802.11.h	683;"	d
TKIP_EOM_SIZE	802.11.h	682;"	d
TKIP_KEY_SIZE	802.11.h	684;"	d
TKIP_MIC_AUTH_RX	802.11.h	686;"	d
TKIP_MIC_AUTH_TX	802.11.h	685;"	d
TKIP_MIC_SIZE	802.11.h	681;"	d
TKIP_MIC_SUP_RX	802.11.h	687;"	d
TKIP_MIC_SUP_TX	802.11.h	688;"	d
TLV_BODY_OFF	802.11.h	524;"	d
TLV_HDR_LEN	802.11.h	523;"	d
TLV_LEN_OFF	802.11.h	522;"	d
TLV_TAG_OFF	802.11.h	521;"	d
TRUE	typedefs.h	22;"	d
TRUE	typedefs.h	45;"	d
T_MASK	md5.c	64;"	d	file:
USER_NAME	radius.c	42;"	d	file:
USER_PW	radius.c	43;"	d	file:
VLAN_FIELDS_OFFSET	ethernet.h	74;"	d
VLAN_FIELDS_SIZE	ethernet.h	79;"	d
VLAN_PRI_MASK	ethernet.h	85;"	d
VLAN_PRI_SHIFT	ethernet.h	82;"	d
VLAN_TAG	ethernet.h	69;"	d
WAIT	wrt-radauth.c	/^short WAIT = 300;$/;"	v
WAPI_MUTIL_REKEY	ieee80211_defines.h	865;"	d
WAPI_STA_AGING	ieee80211_defines.h	864;"	d
WAPI_STA_STATS	ieee80211_defines.h	866;"	d
WAPI_UNICAST_REKEY	ieee80211_defines.h	863;"	d
WAPI_WAI_REQUEST	ieee80211_defines.h	862;"	d
WEP128_KEY_HEX_SIZE	802.11.h	680;"	d
WEP128_KEY_SIZE	802.11.h	679;"	d
WEP1_KEY_HEX_SIZE	802.11.h	678;"	d
WEP1_KEY_SIZE	802.11.h	677;"	d
WLAN_MLME_STOP_BSS_F_CLEAR_ASSOC_STATE	ieee80211_defines.h	853;"	d
WLAN_MLME_STOP_BSS_F_FORCE_STOP_RESET	ieee80211_defines.h	854;"	d
WLAN_MLME_STOP_BSS_F_NO_RESET	ieee80211_defines.h	856;"	d
WLAN_MLME_STOP_BSS_F_SEND_DEAUTH	ieee80211_defines.h	852;"	d
WLAN_MLME_STOP_BSS_F_STANDBY	ieee80211_defines.h	857;"	d
WLAN_MLME_STOP_BSS_F_WAIT_RX_DONE	ieee80211_defines.h	855;"	d
WLAN_RSSI_BEACON	ieee80211_defines.h	/^    WLAN_RSSI_BEACON  \/* rssi of the beacon, only valid for STA\/IBSS vap *\/$/;"	e	enum:_wlan_rssi_type
WLAN_RSSI_RX	ieee80211_defines.h	/^    WLAN_RSSI_RX,$/;"	e	enum:_wlan_rssi_type
WLAN_RSSI_TX	ieee80211_defines.h	/^    WLAN_RSSI_TX,$/;"	e	enum:_wlan_rssi_type
WLAN_WME_ACKPOLICY	ieee80211_defines.h	/^    WLAN_WME_ACKPOLICY \/*bss only*\/$/;"	e	enum:_wlan_wme_param
WLAN_WME_ACM	ieee80211_defines.h	/^    WLAN_WME_ACM,      \/*bss only*\/$/;"	e	enum:_wlan_wme_param
WLAN_WME_AIFS	ieee80211_defines.h	/^    WLAN_WME_AIFS,$/;"	e	enum:_wlan_wme_param
WLAN_WME_CWMAX	ieee80211_defines.h	/^    WLAN_WME_CWMAX,$/;"	e	enum:_wlan_wme_param
WLAN_WME_CWMIN	ieee80211_defines.h	/^    WLAN_WME_CWMIN,$/;"	e	enum:_wlan_wme_param
WLAN_WME_TXOPLIMIT	ieee80211_defines.h	/^    WLAN_WME_TXOPLIMIT,$/;"	e	enum:_wlan_wme_param
WPA_AUTH_DISABLED	802.11.h	665;"	d
WPA_AUTH_NONE	802.11.h	662;"	d
WPA_AUTH_PSK	802.11.h	664;"	d
WPA_AUTH_UNSPECIFIED	802.11.h	663;"	d
WPA_OUI	802.11.h	657;"	d
WPA_OUI_LEN	802.11.h	659;"	d
WPA_VERSION	802.11.h	656;"	d
_802_11_H_	802.11.h	16;"	d
_IEEE80211_DEFINES_H_	ieee80211_defines.h	18;"	d
_NET80211_IEEE80211_IOCTL_H_	ieee80211_ioctl.h	35;"	d
_NET80211__IEEE80211_H_	_ieee80211.h	18;"	d
_NET_ETHERNET_H_	ethernet.h	14;"	d
_TYPEDEFS_H_	typedefs.h	13;"	d
_WIRELESS_H	wireless.h	25;"	d
__EXTERN	common.h	4;"	d
__EXTERN	common.h	6;"	d
__MAIN__	radius-client.c	28;"	d	file:
__MAIN__	wrt-radauth.c	37;"	d	file:
__RADIUS_H	radius.h	24;"	d
_iee80211_mimo_powersave_mode	ieee80211_defines.h	/^typedef enum _iee80211_mimo_powersave_mode {$/;"	g
_ieee80211_acl_cmd	ieee80211_defines.h	/^typedef enum _ieee80211_acl_cmd {$/;"	g
_ieee80211_ampdu_mode	ieee80211_defines.h	/^typedef enum _ieee80211_ampdu_mode {$/;"	g
_ieee80211_auth_mode	ieee80211_defines.h	/^typedef enum _ieee80211_auth_mode {$/;"	g
_ieee80211_bt_coex_info_type	ieee80211_defines.h	/^typedef enum _ieee80211_bt_coex_info_type {$/;"	g
_ieee80211_cap	ieee80211_defines.h	/^typedef enum _ieee80211_cap {$/;"	g
_ieee80211_cipher_type	ieee80211_defines.h	/^typedef enum _ieee80211_cipher_type {$/;"	g
_ieee80211_coalescing_state	ieee80211_defines.h	/^typedef enum _ieee80211_coalescing_state {$/;"	g
_ieee80211_dev_vap_event	ieee80211_defines.h	/^typedef enum _ieee80211_dev_vap_event {$/;"	g
_ieee80211_device_param	ieee80211_defines.h	/^typedef enum _ieee80211_device_param {$/;"	g
_ieee80211_frame_type	ieee80211_defines.h	/^typedef enum _ieee80211_frame_type {$/;"	g
_ieee80211_key_direction	ieee80211_defines.h	/^typedef enum _ieee80211_key_direction {$/;"	g
_ieee80211_keyval	ieee80211_defines.h	/^typedef struct _ieee80211_keyval {$/;"	s
_ieee80211_node_param_type	ieee80211_defines.h	/^typedef enum _ieee80211_node_param_type {$/;"	g
_ieee80211_param	ieee80211_defines.h	/^typedef enum _ieee80211_param {$/;"	g
_ieee80211_pmkid_entry	ieee80211_defines.h	/^typedef struct _ieee80211_pmkid_entry {$/;"	s
_ieee80211_privacy_excemption_filter	ieee80211_defines.h	/^typedef struct _ieee80211_privacy_excemption_filter {$/;"	s
_ieee80211_privacy_filter	ieee80211_defines.h	/^typedef enum _ieee80211_privacy_filter {$/;"	g
_ieee80211_privacy_filter_packet_type	ieee80211_defines.h	/^typedef enum _ieee80211_privacy_filter_packet_type {$/;"	g
_ieee80211_rate_info	ieee80211_defines.h	/^typedef struct _ieee80211_rate_info {$/;"	s
_ieee80211_rate_type	ieee80211_defines.h	/^typedef enum _ieee80211_rate_type {$/;"	g
_ieee80211_reset_request	ieee80211_defines.h	/^typedef struct _ieee80211_reset_request {$/;"	s
_ieee80211_reset_type	ieee80211_defines.h	/^typedef enum _ieee80211_reset_type {$/;"	g
_ieee80211_rsn_param	ieee80211_defines.h	/^typedef enum _ieee80211_rsn_param {$/;"	g
_ieee80211_scan_event	ieee80211_defines.h	/^typedef struct _ieee80211_scan_event {$/;"	s
_ieee80211_scan_event_type	ieee80211_defines.h	/^typedef enum _ieee80211_scan_event_type {$/;"	g
_ieee80211_scan_info	ieee80211_defines.h	/^typedef struct _ieee80211_scan_info {$/;"	s
_ieee80211_scan_params	ieee80211_defines.h	/^typedef struct _ieee80211_scan_params {$/;"	s
_ieee80211_scan_priority	ieee80211_defines.h	/^typedef enum _ieee80211_scan_priority {$/;"	g
_ieee80211_scan_type	ieee80211_defines.h	/^typedef enum _ieee80211_scan_type {$/;"	g
_ieee80211_send_frame_type	ieee80211_defines.h	/^typedef enum _ieee80211_send_frame_type {$/;"	g
_ieee80211_ssid	ieee80211_defines.h	/^typedef struct _ieee80211_ssid {$/;"	s
_ieee80211_tspec_info	ieee80211_defines.h	/^typedef struct _ieee80211_tspec_info {$/;"	s
_wlan_dev_event_handler_table	ieee80211_defines.h	/^typedef struct _wlan_dev_event_handler_table {$/;"	s
_wlan_event_handler_table	ieee80211_defines.h	/^typedef struct _wlan_event_handler_table {$/;"	s
_wlan_misc_event_handler_table	ieee80211_defines.h	/^typedef struct _wlan_misc_event_handler_table {$/;"	s
_wlan_mlme_event_handler_table	ieee80211_defines.h	/^typedef struct _wlan_mlme_event_handler_table {$/;"	s
_wlan_rssi_info	ieee80211_defines.h	/^typedef struct _wlan_rssi_info {$/;"	s
_wlan_rssi_type	ieee80211_defines.h	/^typedef enum _wlan_rssi_type {$/;"	g
_wlan_wme_param	ieee80211_defines.h	/^typedef enum _wlan_wme_param {$/;"	g
a1	802.11.h	/^	struct ether_addr	a1;		\/* address 1 *\/$/;"	m	struct:dot11_header	typeref:struct:dot11_header::ether_addr
a2	802.11.h	/^	struct ether_addr	a2;		\/* address 2 *\/$/;"	m	struct:dot11_header	typeref:struct:dot11_header::ether_addr
a3	802.11.h	/^	struct ether_addr	a3;		\/* address 3 *\/$/;"	m	struct:dot11_header	typeref:struct:dot11_header::ether_addr
a4	802.11.h	/^	struct ether_addr	a4;		\/* address 4 *\/$/;"	m	struct:dot11_header	typeref:struct:dot11_header::ether_addr
abcd	md5.h	/^    md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
acc_policy_edca	ieee80211_defines.h	/^    u_int8_t    acc_policy_edca;$/;"	m	struct:_ieee80211_tspec_info
acc_policy_hcca	ieee80211_defines.h	/^    u_int8_t    acc_policy_hcca;$/;"	m	struct:_ieee80211_tspec_info
accepted	radius.h	/^	unsigned char accepted;$/;"	m	struct:sta
ack_policy	ieee80211_defines.h	/^    u_int8_t    ack_policy;$/;"	m	struct:_ieee80211_tspec_info
action	802.11.h	/^	uint8	action;$/;"	m	struct:dot11_action_measure
action	ieee80211_defines.h	/^    u_int8_t               action;$/;"	m	struct:ieee80211_addba_delba_request
add_station_acl	wireless.c	/^int add_station_acl (char *ifname, unsigned char *mac)$/;"	f
aggregation	ieee80211_defines.h	/^    u_int8_t    aggregation;$/;"	m	struct:_ieee80211_tspec_info
aid	802.11.h	/^	uint16			aid;		\/* association ID *\/$/;"	m	struct:dot11_assoc_resp
aid	ieee80211_defines.h	/^    u_int16_t              aid;$/;"	m	struct:ieee80211_addba_delba_request
alg	802.11.h	/^	uint16			alg;		\/* algorithm *\/$/;"	m	struct:dot11_auth
app_buf	ieee80211_ioctl.h	/^    u_int8_t  app_buf[];$/;"	m	struct:ieee80211req_getset_appiebuf
app_buflen	ieee80211_ioctl.h	/^    u_int32_t app_buflen;  \/*application supplied buffer length *\/$/;"	m	struct:ieee80211req_getset_appiebuf
app_filterype	ieee80211_ioctl.h	/^      u_int32_t app_filterype; \/* management frame filter type *\/$/;"	m	struct:ieee80211req_set_filter
app_frmtype	ieee80211_ioctl.h	/^    u_int32_t app_frmtype; \/*management frame type for which buffer is added*\/$/;"	m	struct:ieee80211req_getset_appiebuf
arg1	ieee80211_defines.h	/^    u_int32_t              arg1;$/;"	m	struct:ieee80211_addba_delba_request
arg2	ieee80211_defines.h	/^    u_int32_t              arg2;$/;"	m	struct:ieee80211_addba_delba_request
assoc	802.11.h	/^	uchar	assoc;		\/*  # of assoc STAs *\/$/;"	m	struct:brcm_ie
authmac_req	wrt-radauth.c	/^int authmac_req (unsigned char *mac, struct sta *station)$/;"	f
avg_rssi	ieee80211_defines.h	/^    int8_t    avg_rssi;     \/* average rssi *\/$/;"	m	struct:_wlan_rssi_info
basic	802.11.h	/^		} PACKED basic;$/;"	m	union:dot11_meas_rep::__anon6	typeref:struct:dot11_meas_rep::__anon6::__anon7
beacon_interval	802.11.h	/^	uint16			beacon_interval;$/;"	m	struct:dot11_bcn_prb
beacon_timeout	ieee80211_defines.h	/^    int                                 beacon_timeout;         \/* maximum time to wait for beacons *\/$/;"	m	struct:_ieee80211_scan_params
bool	typedefs.h	/^typedef	int	bool;$/;"	t
bool	typedefs.h	/^typedef	unsigned char	bool;$/;"	t
brcm_ie	802.11.h	/^struct brcm_ie {$/;"	s
brcm_ie_t	802.11.h	/^typedef	struct brcm_ie brcm_ie_t;$/;"	t	typeref:struct:brcm_ie
bss_node	ieee80211_defines.h	/^    struct ieee80211_node               *bss_node;              \/* BSS node *\/$/;"	m	struct:_ieee80211_scan_params	typeref:struct:_ieee80211_scan_params::ieee80211_node
bssid	802.11.h	/^	struct ether_addr	bssid;		\/* BSS ID *\/$/;"	m	struct:dot11_management_header	typeref:struct:dot11_management_header::ether_addr
bssid	802.11.h	/^	struct ether_addr	bssid;		\/* receiver address, STA in AP *\/$/;"	m	struct:dot11_ps_poll_frame	typeref:struct:dot11_ps_poll_frame::ether_addr
bssid	802.11.h	/^	struct ether_addr	bssid;		\/* transmitter address, STA in AP *\/$/;"	m	struct:dot11_cf_end_frame	typeref:struct:dot11_cf_end_frame::ether_addr
bssid	ieee80211_defines.h	/^    u_int8_t    bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:_ieee80211_pmkid_entry
bssid_list	ieee80211_defines.h	/^    u_int8_t                            bssid_list[IEEE80211_SCAN_PARAMS_MAX_BSSID][IEEE80211_ADDR_LEN];$/;"	m	struct:_ieee80211_scan_params
buf	md5.h	/^    md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
cancelled	ieee80211_defines.h	/^                           cancelled   : 1;        \/* if the scan is cancelled *\/$/;"	m	struct:_ieee80211_scan_info
capability	802.11.h	/^	uint16			capability;	\/* capability information *\/$/;"	m	struct:dot11_assoc_req
capability	802.11.h	/^	uint16			capability;	\/* capability information *\/$/;"	m	struct:dot11_assoc_resp
capability	802.11.h	/^	uint16			capability;$/;"	m	struct:dot11_bcn_prb
caps	ieee80211_ioctl.h	/^    u_int8_t caps;$/;"	m	struct:ieee80211_wlanconfig_nawds
category	802.11.h	/^	uint8	category;$/;"	m	struct:dot11_action_measure
chan	ieee80211_defines.h	/^    wlan_chan_t                         chan;$/;"	m	struct:_ieee80211_scan_event
chan_list	ieee80211_defines.h	/^    u_int32_t                           *chan_list;             \/* array of ieee channels (or) frequencies to scan *\/$/;"	m	struct:_ieee80211_scan_params
chan_map_tuple_t	802.11.h	/^} chan_map_tuple_t;$/;"	t	typeref:struct:__anon8
changed	radius.h	/^	unsigned char changed;$/;"	m	struct:sta
channel	802.11.h	/^			uint8 channel;$/;"	m	struct:dot11_meas_rep::__anon6::__anon7
channel	802.11.h	/^	uint8 channel;$/;"	m	struct:__anon5
channel	802.11.h	/^	uint8 channel;$/;"	m	struct:__anon8
channel	802.11.h	/^	uint8 channel;$/;"	m	struct:dot11_channel_switch
channel	802.11.h	/^	uint8 channel;$/;"	m	struct:dot11_meas_rep_basic
check_termination_context	ieee80211_defines.h	/^    void                                *check_termination_context;  \/* context passed to function above *\/$/;"	m	struct:_ieee80211_scan_params
check_termination_function	ieee80211_defines.h	/^    ieee80211_scan_termination_check    check_termination_function;  \/* function checking for termination condition *\/$/;"	m	struct:_ieee80211_scan_params
cl_channels	_ieee80211.h	/^    struct ieee80211_channel    *cl_channels;$/;"	m	struct:ieee80211_channel_list	typeref:struct:ieee80211_channel_list::ieee80211_channel
cl_nchans	_ieee80211.h	/^    int                         cl_nchans;$/;"	m	struct:ieee80211_channel_list
cmdtype	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_CMDTYPE cmdtype;  \/* sub-command *\/$/;"	m	struct:ieee80211_wlanconfig
count	802.11.h	/^	uint8 count;	\/* TBTTs until beacon interval in quiet starts *\/$/;"	m	struct:dot11_quiet
count	802.11.h	/^	uint8 count;$/;"	m	struct:dot11_channel_switch
count	md5.h	/^    md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
count	wrt-radauth.c	/^	uint count;         \/* number of MAC addresses *\/$/;"	m	struct:maclist	file:
ctl	802.11.h	/^	uint8	ctl;				\/* always 0x03 *\/$/;"	m	struct:dot11_llc_snap_header
cw_enable	_ieee80211.h	/^    u_int32_t                         cw_enable;            \/* CWM State Machine Enabled *\/$/;"	m	struct:ieee80211_cwm
cw_extbusythreshold	_ieee80211.h	/^    u_int32_t                         cw_extbusythreshold;  \/* CWM Extension Channel Busy Threshold *\/$/;"	m	struct:ieee80211_cwm
cw_extoffset	_ieee80211.h	/^    int8_t                            cw_extoffset;         \/* CWM Extension Channel Offset *\/$/;"	m	struct:ieee80211_cwm
cw_extprotmode	_ieee80211.h	/^    enum ieee80211_cwm_extprotmode    cw_extprotmode;       \/* CWM Extension Channel Protection Mode *\/$/;"	m	struct:ieee80211_cwm	typeref:enum:ieee80211_cwm::ieee80211_cwm_extprotmode
cw_extprotspacing	_ieee80211.h	/^    enum ieee80211_cwm_extprotspacing cw_extprotspacing;    \/* CWM Extension Channel Protection Spacing *\/$/;"	m	struct:ieee80211_cwm	typeref:enum:ieee80211_cwm::ieee80211_cwm_extprotspacing
cw_mode	_ieee80211.h	/^    enum ieee80211_cwm_mode           cw_mode;              \/* CWM mode *\/$/;"	m	struct:ieee80211_cwm	typeref:enum:ieee80211_cwm::ieee80211_cwm_mode
cw_width	_ieee80211.h	/^    enum ieee80211_cwm_width          cw_width;             \/* CWM channel width *\/$/;"	m	struct:ieee80211_cwm	typeref:enum:ieee80211_cwm::ieee80211_cwm_width
d11cnt	802.11.h	/^typedef struct d11cnt {$/;"	s
d11cnt_t	802.11.h	/^} d11cnt_t;$/;"	t	typeref:struct:d11cnt
da	802.11.h	/^	struct ether_addr	da;		\/* receiver address *\/$/;"	m	struct:dot11_management_header	typeref:struct:dot11_management_header::ether_addr
data	802.11.h	/^		uint8 data[1];$/;"	m	union:dot11_meas_rep::__anon6
data	802.11.h	/^	uint8	data[1];$/;"	m	struct:dot11_action_measure
data	ieee80211_defines.h	/^        u_int8_t            data[8];$/;"	m	union:ieee80211_rx_status::__anon10
data	ieee80211_ioctl.h	/^    } data;$/;"	m	struct:ieee80211_wlanconfig	typeref:union:ieee80211_wlanconfig::__anon25
defcaps	ieee80211_ioctl.h	/^    u_int8_t defcaps;$/;"	m	struct:ieee80211_wlanconfig_nawds
deinit_driver	wireless.c	/^void deinit_driver ()$/;"	f
delay_bound	ieee80211_defines.h	/^    u_int32_t   delay_bound;$/;"	m	struct:_ieee80211_tspec_info
direction	ieee80211_defines.h	/^    u_int8_t    direction;$/;"	m	struct:_ieee80211_tspec_info
disable_deny_acl	wireless.c	/^int disable_deny_acl (char *ifname)$/;"	f
dot11_ack_frame	802.11.h	/^struct dot11_ack_frame {$/;"	s
dot11_action_measure	802.11.h	/^struct dot11_action_measure {$/;"	s
dot11_assoc_req	802.11.h	/^struct dot11_assoc_req {$/;"	s
dot11_assoc_resp	802.11.h	/^struct dot11_assoc_resp {$/;"	s
dot11_auth	802.11.h	/^struct dot11_auth {$/;"	s
dot11_bcn_prb	802.11.h	/^struct dot11_bcn_prb {$/;"	s
dot11_cf_end_frame	802.11.h	/^struct dot11_cf_end_frame {$/;"	s
dot11_channel_switch	802.11.h	/^struct dot11_channel_switch {$/;"	s
dot11_channel_switch_t	802.11.h	/^typedef struct dot11_channel_switch dot11_channel_switch_t;$/;"	t	typeref:struct:dot11_channel_switch
dot11_cts_frame	802.11.h	/^struct dot11_cts_frame {$/;"	s
dot11_header	802.11.h	/^struct dot11_header {$/;"	s
dot11_ibss_dfs_t	802.11.h	/^} dot11_ibss_dfs_t;$/;"	t	typeref:struct:__anon9
dot11_llc_snap_header	802.11.h	/^struct dot11_llc_snap_header {$/;"	s
dot11_management_header	802.11.h	/^struct dot11_management_header {$/;"	s
dot11_meas_rep	802.11.h	/^struct dot11_meas_rep {$/;"	s
dot11_meas_rep_basic	802.11.h	/^struct dot11_meas_rep_basic {$/;"	s
dot11_meas_rep_basic_t	802.11.h	/^typedef struct dot11_meas_rep_basic dot11_meas_rep_basic_t;$/;"	t	typeref:struct:dot11_meas_rep_basic
dot11_meas_rep_t	802.11.h	/^typedef struct dot11_meas_rep dot11_meas_rep_t;$/;"	t	typeref:struct:dot11_meas_rep
dot11_meas_req_t	802.11.h	/^} dot11_meas_req_t;$/;"	t	typeref:struct:__anon5
dot11_power_cap_t	802.11.h	/^} dot11_power_cap_t;$/;"	t	typeref:struct:__anon2
dot11_power_cnst_t	802.11.h	/^} dot11_power_cnst_t;$/;"	t	typeref:struct:__anon1
dot11_ps_poll_frame	802.11.h	/^struct dot11_ps_poll_frame {$/;"	s
dot11_quiet	802.11.h	/^struct dot11_quiet {$/;"	s
dot11_quiet_t	802.11.h	/^typedef struct dot11_quiet dot11_quiet_t;$/;"	t	typeref:struct:dot11_quiet
dot11_rts_frame	802.11.h	/^struct dot11_rts_frame {$/;"	s
dot11_supp_channels_t	802.11.h	/^} dot11_supp_channels_t;$/;"	t	typeref:struct:__anon4
dot11_tpc_rep_t	802.11.h	/^} dot11_tpc_rep_t;$/;"	t	typeref:struct:__anon3
dot1Dtag	ieee80211_defines.h	/^    u_int8_t    dot1Dtag;$/;"	m	struct:_ieee80211_tspec_info
dsap	802.11.h	/^	uint8	dsap;				\/* always 0xAA *\/$/;"	m	struct:dot11_llc_snap_header
duration	802.11.h	/^			uint16 duration;$/;"	m	struct:dot11_meas_rep::__anon6::__anon7
duration	802.11.h	/^	uint16 duration;$/;"	m	struct:__anon5
duration	802.11.h	/^	uint16 duration;$/;"	m	struct:dot11_meas_rep_basic
duration	802.11.h	/^	uint16 duration;\/* Length of quiet period, in TU's *\/$/;"	m	struct:dot11_quiet
durid	802.11.h	/^	uint16			durid;		\/* AID *\/$/;"	m	struct:dot11_ps_poll_frame
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_ack_frame
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_cf_end_frame
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_cts_frame
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_header
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_management_header
durid	802.11.h	/^	uint16			durid;		\/* duration\/ID *\/$/;"	m	struct:dot11_rts_frame
ea	wrt-radauth.c	/^	struct ether_addr ea[1];    \/* variable length array of MAC addresses *\/$/;"	m	struct:maclist	typeref:struct:maclist::ether_addr	file:
eaddr	802.11.h	/^	uint8 eaddr[ETHER_ADDR_LEN];$/;"	m	struct:__anon9
enable_deny_acl	wireless.c	/^int enable_deny_acl (char *ifname)$/;"	f
ether_addr	ethernet.h	/^struct	ether_addr {$/;"	s
ether_bcast	ethernet.h	/^static const struct ether_addr ether_bcast = {{255, 255, 255, 255, 255, 255}};$/;"	v	typeref:struct:ether_addr
ether_dhost	ethernet.h	/^	uint8	ether_dhost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_header	ethernet.h	/^struct	ether_header {$/;"	s
ether_shost	ethernet.h	/^	uint8	ether_shost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_sprintf	wireless.c	/^ether_sprintf(const unsigned char *addr)$/;"	f
ether_type	ethernet.h	/^	uint16	ether_type;$/;"	m	struct:ether_header
ether_type	ieee80211_defines.h	/^    u_int16_t                               ether_type; \/* type of ethernet to apply this filter, in host byte order*\/$/;"	m	struct:_ieee80211_privacy_excemption_filter
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_ack_frame
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_cf_end_frame
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_cts_frame
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_header
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_management_header
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_ps_poll_frame
fc	802.11.h	/^	uint16			fc;		\/* frame control *\/$/;"	m	struct:dot11_rts_frame
filter_type	ieee80211_defines.h	/^    ieee80211_privacy_filter                filter_type; $/;"	m	struct:_ieee80211_privacy_excemption_filter
first	wrt-radauth.c	/^struct sta *first=NULL;	\/* Pointer to first element in linked STA list *\/$/;"	v	typeref:struct:sta
first_channel	802.11.h	/^	uint8 first_channel;$/;"	m	struct:__anon4
flags	802.11.h	/^	uchar	flags;		\/* misc flags *\/$/;"	m	struct:brcm_ie
flags	ieee80211_defines.h	/^    int                                 flags;                  \/* scan flags *\/$/;"	m	struct:_ieee80211_scan_params
flags	ieee80211_defines.h	/^    int                    flags;                  \/* scan flags *\/$/;"	m	struct:_ieee80211_scan_info
float32	typedefs.h	/^typedef float		float32;$/;"	t
float64	typedefs.h	/^typedef double		float64;$/;"	t
float_t	typedefs.h	/^typedef float32 float_t;$/;"	t
float_t	typedefs.h	/^typedef float64 float_t;$/;"	t
getassoclist	wireless.c	/^int getassoclist(char *ifname, unsigned char *list)$/;"	f
getradiusconfig	wrt-radauth.c	/^int getradiusconfig()$/;"	f
handle_ifla_wireless	wireless.c	/^static void handle_ifla_wireless ( char *data, int len )$/;"	f	file:
handle_netlink_receive	wireless.c	/^void handle_netlink_receive ()$/;"	f
handle_new_sta	wrt-radauth.c	/^void handle_new_sta (unsigned char *mac_addr)$/;"	f
handle_newlink	wireless.c	/^handle_newlink(struct ifinfomsg *ifi, unsigned char *buf, size_t len)$/;"	f	file:
handle_radius_receive	radius.c	/^handle_radius_receive ()$/;"	f
i_data	ieee80211_ioctl.h	/^	void		*i_data;		\/* Extra data *\/$/;"	m	struct:ieee80211req
i_len	ieee80211_ioctl.h	/^	int16_t		i_len;			\/* Index or simple value *\/$/;"	m	struct:ieee80211req
i_name	ieee80211_ioctl.h	/^	char		i_name[IFNAMSIZ];	\/* if_name, e.g. "wi0" *\/$/;"	m	struct:ieee80211req
i_type	ieee80211_ioctl.h	/^	u_int16_t	i_type;			\/* req type *\/$/;"	m	struct:ieee80211req
i_val	ieee80211_ioctl.h	/^	int16_t		i_val;			\/* Index or simple value *\/$/;"	m	struct:ieee80211req
ic	ieee80211_defines.h	/^    wlan_dev_t             ic;$/;"	m	struct:ieee80211_addba_delba_request
ic_channels	ieee80211_ioctl.h	/^	u_int8_t	ic_channels[IEEE80211_CHAN_BYTES];$/;"	m	struct:ieee80211req_chanlist
ic_chans	ieee80211_ioctl.h	/^	struct ieee80211_channel ic_chans[IEEE80211_CHAN_MAX];$/;"	m	struct:ieee80211req_chaninfo	typeref:struct:ieee80211req_chaninfo::ieee80211_channel
ic_flagext	_ieee80211.h	/^    u_int8_t        ic_flagext;     \/* see below *\/$/;"	m	struct:ieee80211_channel
ic_flags	_ieee80211.h	/^    u_int32_t       ic_flags;       \/* see below *\/$/;"	m	struct:ieee80211_channel
ic_freq	_ieee80211.h	/^    u_int16_t       ic_freq;        \/* setting in Mhz *\/$/;"	m	struct:ieee80211_channel
ic_ieee	_ieee80211.h	/^    u_int8_t        ic_ieee;        \/* IEEE channel number *\/$/;"	m	struct:ieee80211_channel
ic_maxpower	_ieee80211.h	/^    int8_t          ic_maxpower;    \/* maximum tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_maxregpower	_ieee80211.h	/^    int8_t          ic_maxregpower; \/* maximum regulatory tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_minpower	_ieee80211.h	/^    int8_t          ic_minpower;    \/* minimum tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_nchans	ieee80211_ioctl.h	/^	u_int	ic_nchans;$/;"	m	struct:ieee80211req_chaninfo
ic_regClassId	_ieee80211.h	/^    u_int8_t        ic_regClassId;  \/* regClassId of this channel *\/        $/;"	m	struct:ieee80211_channel
icp_flags	ieee80211_ioctl.h	/^	u_int16_t	icp_flags;		\/* see below *\/$/;"	m	struct:ieee80211_clone_params
icp_name	ieee80211_ioctl.h	/^	char		icp_name[IFNAMSIZ];	\/* device name *\/$/;"	m	struct:ieee80211_clone_params
icp_opmode	ieee80211_ioctl.h	/^	u_int16_t	icp_opmode;		\/* operating mode *\/$/;"	m	struct:ieee80211_clone_params
id	802.11.h	/^	uchar	id;		$/;"	m	struct:brcm_ie
id	802.11.h	/^	uint8 id;$/;"	m	struct:__anon1
id	802.11.h	/^	uint8 id;$/;"	m	struct:__anon3
id	802.11.h	/^	uint8 id;$/;"	m	struct:__anon4
id	802.11.h	/^	uint8 id;$/;"	m	struct:__anon5
id	802.11.h	/^	uint8 id;$/;"	m	struct:__anon9
id	802.11.h	/^	uint8 id;$/;"	m	struct:dot11_channel_switch
id	802.11.h	/^	uint8 id;$/;"	m	struct:dot11_meas_rep
id	802.11.h	/^	uint8 id;$/;"	m	struct:dot11_quiet
id	radius.h	/^	int id; \/* radius packet identifier *\/$/;"	m	struct:sta
idk_keyix	ieee80211_ioctl.h	/^	u_int8_t	idk_keyix;	\/* key index *\/$/;"	m	struct:ieee80211req_del_key
idk_macaddr	ieee80211_ioctl.h	/^	u_int8_t	idk_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_del_key
idle_time	ieee80211_defines.h	/^    int                                 idle_time;              \/* time in msec on bss channel before switching channel *\/$/;"	m	struct:_ieee80211_scan_params
ie_data	ieee80211_defines.h	/^    u_int8_t                            *ie_data;               \/* pointer to ie data *\/$/;"	m	struct:_ieee80211_scan_params
ie_len	ieee80211_defines.h	/^    int                                 ie_len;                 \/* length of the ie data to be added to probe req *\/ $/;"	m	struct:_ieee80211_scan_params
ieee80211_acl_cmd	ieee80211_defines.h	/^} ieee80211_acl_cmd;$/;"	t	typeref:enum:_ieee80211_acl_cmd
ieee80211_acs_event_handler	ieee80211_defines.h	/^typedef void (*ieee80211_acs_event_handler) (void *arg, wlan_chan_t channel);  $/;"	t
ieee80211_addba_delba_request	ieee80211_defines.h	/^struct ieee80211_addba_delba_request {$/;"	s
ieee80211_ampdu_mode	ieee80211_defines.h	/^} ieee80211_ampdu_mode;$/;"	t	typeref:enum:_ieee80211_ampdu_mode
ieee80211_apps_pwrsave_state	ieee80211_defines.h	/^} ieee80211_apps_pwrsave_state;$/;"	t	typeref:enum:__anon11
ieee80211_auth_mode	ieee80211_defines.h	/^} ieee80211_auth_mode;$/;"	t	typeref:enum:_ieee80211_auth_mode
ieee80211_bt_coex_info_type	ieee80211_defines.h	/^} ieee80211_bt_coex_info_type;$/;"	t	typeref:enum:_ieee80211_bt_coex_info_type
ieee80211_cap	ieee80211_defines.h	/^} ieee80211_cap;$/;"	t	typeref:enum:_ieee80211_cap
ieee80211_channel	_ieee80211.h	/^struct ieee80211_channel {$/;"	s
ieee80211_channel_list	_ieee80211.h	/^struct ieee80211_channel_list {$/;"	s
ieee80211_cipher_type	ieee80211_defines.h	/^} ieee80211_cipher_type;$/;"	t	typeref:enum:_ieee80211_cipher_type
ieee80211_clist_cmd	_ieee80211.h	/^enum ieee80211_clist_cmd {$/;"	g
ieee80211_clone_params	ieee80211_ioctl.h	/^struct ieee80211_clone_params {$/;"	s
ieee80211_coalescing_state	ieee80211_defines.h	/^} ieee80211_coalescing_state;$/;"	t	typeref:enum:_ieee80211_coalescing_state
ieee80211_cwm	_ieee80211.h	/^struct ieee80211_cwm {$/;"	s
ieee80211_cwm_extprotmode	_ieee80211.h	/^enum ieee80211_cwm_extprotmode {$/;"	g
ieee80211_cwm_extprotspacing	_ieee80211.h	/^enum ieee80211_cwm_extprotspacing {$/;"	g
ieee80211_cwm_mode	_ieee80211.h	/^enum ieee80211_cwm_mode {$/;"	g
ieee80211_cwm_width	_ieee80211.h	/^enum ieee80211_cwm_width {$/;"	g
ieee80211_dev_vap_event	ieee80211_defines.h	/^} ieee80211_dev_vap_event;$/;"	t	typeref:enum:_ieee80211_dev_vap_event
ieee80211_device_param	ieee80211_defines.h	/^} ieee80211_device_param;$/;"	t	typeref:enum:_ieee80211_device_param
ieee80211_fixed_rate	_ieee80211.h	/^struct ieee80211_fixed_rate {$/;"	s
ieee80211_fixed_rate_mode	_ieee80211.h	/^enum ieee80211_fixed_rate_mode {$/;"	g
ieee80211_frame_type	ieee80211_defines.h	/^} ieee80211_frame_type; $/;"	t	typeref:enum:_ieee80211_frame_type
ieee80211_key_direction	ieee80211_defines.h	/^} ieee80211_key_direction;$/;"	t	typeref:enum:_ieee80211_key_direction
ieee80211_keyval	ieee80211_defines.h	/^} ieee80211_keyval;$/;"	t	typeref:struct:_ieee80211_keyval
ieee80211_mac_stats	ieee80211_defines.h	/^struct ieee80211_mac_stats {$/;"	s
ieee80211_mimo_powersave_mode	ieee80211_defines.h	/^} ieee80211_mimo_powersave_mode;$/;"	t	typeref:enum:_iee80211_mimo_powersave_mode
ieee80211_nawds_param	_ieee80211.h	/^enum ieee80211_nawds_param {$/;"	g
ieee80211_node_param_type	ieee80211_defines.h	/^} ieee80211_node_param_type;$/;"	t	typeref:enum:_ieee80211_node_param_type
ieee80211_nodestats	ieee80211_defines.h	/^struct ieee80211_nodestats {$/;"	s
ieee80211_opmode	_ieee80211.h	/^enum ieee80211_opmode {$/;"	g
ieee80211_param	ieee80211_defines.h	/^} ieee80211_param;$/;"	t	typeref:enum:_ieee80211_param
ieee80211_phy_stats	ieee80211_defines.h	/^struct ieee80211_phy_stats {$/;"	s
ieee80211_phymode	_ieee80211.h	/^enum ieee80211_phymode {$/;"	g
ieee80211_phytype	_ieee80211.h	/^enum ieee80211_phytype {$/;"	g
ieee80211_pmkid_entry	ieee80211_defines.h	/^} ieee80211_pmkid_entry;$/;"	t	typeref:struct:_ieee80211_pmkid_entry
ieee80211_privacy_exemption	ieee80211_defines.h	/^} ieee80211_privacy_exemption;$/;"	t	typeref:struct:_ieee80211_privacy_excemption_filter
ieee80211_privacy_filter	ieee80211_defines.h	/^} ieee80211_privacy_filter ;$/;"	t	typeref:enum:_ieee80211_privacy_filter
ieee80211_privacy_filter_packet_type	ieee80211_defines.h	/^} ieee80211_privacy_filter_packet_type ;$/;"	t	typeref:enum:_ieee80211_privacy_filter_packet_type
ieee80211_protmode	_ieee80211.h	/^enum ieee80211_protmode {$/;"	g
ieee80211_psmode	ieee80211_defines.h	/^typedef enum ieee80211_psmode {$/;"	g
ieee80211_pwrsave_mode	ieee80211_defines.h	/^} ieee80211_pwrsave_mode;$/;"	t	typeref:enum:ieee80211_psmode
ieee80211_rate_info	ieee80211_defines.h	/^} ieee80211_rate_info;$/;"	t	typeref:struct:_ieee80211_rate_info
ieee80211_rate_type	ieee80211_defines.h	/^} ieee80211_rate_type;$/;"	t	typeref:enum:_ieee80211_rate_type
ieee80211_rateset	_ieee80211.h	/^struct ieee80211_rateset {$/;"	s
ieee80211_recv_status	ieee80211_defines.h	/^} ieee80211_recv_status;$/;"	t	typeref:struct:ieee80211_rx_status
ieee80211_reset_request	ieee80211_defines.h	/^} ieee80211_reset_request;$/;"	t	typeref:struct:_ieee80211_reset_request
ieee80211_reset_type	ieee80211_defines.h	/^} ieee80211_reset_type;$/;"	t	typeref:enum:_ieee80211_reset_type
ieee80211_roam	_ieee80211.h	/^struct ieee80211_roam {$/;"	s
ieee80211_roamingmode	_ieee80211.h	/^enum ieee80211_roamingmode {$/;"	g
ieee80211_rsn_param	ieee80211_defines.h	/^} ieee80211_rsn_param;$/;"	t	typeref:enum:_ieee80211_rsn_param
ieee80211_rx_status	ieee80211_defines.h	/^typedef struct ieee80211_rx_status {$/;"	s
ieee80211_scan_completion_reason	ieee80211_defines.h	/^typedef enum ieee80211_scan_completion_reason {$/;"	g
ieee80211_scan_completion_reason	ieee80211_defines.h	/^} ieee80211_scan_completion_reason;$/;"	t	typeref:enum:ieee80211_scan_completion_reason
ieee80211_scan_event	ieee80211_defines.h	/^} ieee80211_scan_event;$/;"	t	typeref:struct:_ieee80211_scan_event
ieee80211_scan_event_handler	ieee80211_defines.h	/^typedef void (*ieee80211_scan_event_handler) (wlan_if_t vaphandle, ieee80211_scan_event *event, void *arg);  $/;"	t
ieee80211_scan_event_type	ieee80211_defines.h	/^} ieee80211_scan_event_type;$/;"	t	typeref:enum:_ieee80211_scan_event_type
ieee80211_scan_info	ieee80211_defines.h	/^} ieee80211_scan_info;$/;"	t	typeref:struct:_ieee80211_scan_info
ieee80211_scan_params	ieee80211_defines.h	/^} ieee80211_scan_params;$/;"	t	typeref:struct:_ieee80211_scan_params
ieee80211_scan_priority	ieee80211_defines.h	/^} ieee80211_scan_priority;$/;"	t	typeref:enum:_ieee80211_scan_priority
ieee80211_scan_termination_check	ieee80211_defines.h	/^typedef bool (*ieee80211_scan_termination_check) (void *arg);$/;"	t
ieee80211_scan_type	ieee80211_defines.h	/^} ieee80211_scan_type;$/;"	t	typeref:enum:_ieee80211_scan_type
ieee80211_scanmode	_ieee80211.h	/^enum ieee80211_scanmode {$/;"	g
ieee80211_send_frame_type	ieee80211_defines.h	/^} ieee80211_send_frame_type;$/;"	t	typeref:enum:_ieee80211_send_frame_type
ieee80211_ssid	ieee80211_defines.h	/^} ieee80211_ssid;$/;"	t	typeref:struct:_ieee80211_ssid
ieee80211_stats	ieee80211_defines.h	/^struct ieee80211_stats {$/;"	s
ieee80211_tspec_info	ieee80211_defines.h	/^} ieee80211_tspec_info;$/;"	t	typeref:struct:_ieee80211_tspec_info
ieee80211_tx_status	ieee80211_defines.h	/^typedef struct ieee80211_tx_status {$/;"	s
ieee80211_wlanconfig	ieee80211_ioctl.h	/^struct ieee80211_wlanconfig{$/;"	s
ieee80211_wlanconfig_nawds	ieee80211_ioctl.h	/^struct ieee80211_wlanconfig_nawds {$/;"	s
ieee80211_xmit_status	ieee80211_defines.h	/^} ieee80211_xmit_status;$/;"	t	typeref:struct:ieee80211_tx_status
ieee80211req	ieee80211_ioctl.h	/^struct ieee80211req {$/;"	s
ieee80211req_chaninfo	ieee80211_ioctl.h	/^struct ieee80211req_chaninfo {$/;"	s
ieee80211req_chanlist	ieee80211_ioctl.h	/^struct ieee80211req_chanlist {$/;"	s
ieee80211req_del_key	ieee80211_ioctl.h	/^struct ieee80211req_del_key {$/;"	s
ieee80211req_getset_appiebuf	ieee80211_ioctl.h	/^struct ieee80211req_getset_appiebuf {$/;"	s
ieee80211req_key	ieee80211_ioctl.h	/^struct ieee80211req_key {$/;"	s
ieee80211req_mlme	ieee80211_ioctl.h	/^struct ieee80211req_mlme {$/;"	s
ieee80211req_scan_result	ieee80211_ioctl.h	/^struct ieee80211req_scan_result {$/;"	s
ieee80211req_set_filter	ieee80211_ioctl.h	/^struct ieee80211req_set_filter {$/;"	s
ieee80211req_sta_info	ieee80211_ioctl.h	/^struct ieee80211req_sta_info {$/;"	s
ieee80211req_sta_req	ieee80211_ioctl.h	/^struct ieee80211req_sta_req {$/;"	s
ieee80211req_sta_stats	ieee80211_ioctl.h	/^struct ieee80211req_sta_stats {$/;"	s
ieee80211req_sta_txpow	ieee80211_ioctl.h	/^struct ieee80211req_sta_txpow {$/;"	s
ieee80211req_wpaie	ieee80211_ioctl.h	/^struct ieee80211req_wpaie {$/;"	s
ieee80211req_wscie	ieee80211_ioctl.h	/^struct ieee80211req_wscie {$/;"	s
ik_flags	ieee80211_ioctl.h	/^	u_int8_t	ik_flags;$/;"	m	struct:ieee80211req_key
ik_keydata	ieee80211_ioctl.h	/^	u_int8_t	ik_keydata[IEEE80211_KEYBUF_SIZE+IEEE80211_MICBUF_SIZE];$/;"	m	struct:ieee80211req_key
ik_keyix	ieee80211_ioctl.h	/^	u_int16_t	ik_keyix;	\/* key index *\/$/;"	m	struct:ieee80211req_key
ik_keylen	ieee80211_ioctl.h	/^	u_int8_t	ik_keylen;	\/* key length in bytes *\/$/;"	m	struct:ieee80211req_key
ik_keyrsc	ieee80211_ioctl.h	/^	u_int64_t	ik_keyrsc;	\/* key receive sequence counter *\/$/;"	m	struct:ieee80211req_key
ik_keytsc	ieee80211_ioctl.h	/^	u_int64_t	ik_keytsc;	\/* key transmit sequence counter *\/$/;"	m	struct:ieee80211req_key
ik_macaddr	ieee80211_ioctl.h	/^	u_int8_t	ik_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_key
ik_pad	ieee80211_ioctl.h	/^	u_int8_t	ik_pad;$/;"	m	struct:ieee80211req_key
ik_type	ieee80211_ioctl.h	/^	u_int8_t	ik_type;	\/* key\/cipher type *\/$/;"	m	struct:ieee80211req_key
im_macaddr	ieee80211_ioctl.h	/^	u_int8_t	im_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_mlme
im_op	ieee80211_ioctl.h	/^	u_int8_t	im_op;		\/* operation to perform *\/$/;"	m	struct:ieee80211req_mlme
im_reason	ieee80211_ioctl.h	/^	u_int16_t	im_reason;	\/* 802.11 reason code *\/$/;"	m	struct:ieee80211req_mlme
im_ssid	ieee80211_ioctl.h	/^	u_int8_t	im_ssid[IEEE80211_NWID_LEN];$/;"	m	struct:ieee80211req_mlme
im_ssid_len	ieee80211_ioctl.h	/^	u_int8_t	im_ssid_len;	\/* length of optional ssid *\/$/;"	m	struct:ieee80211req_mlme
ims_rx_badkeyid	ieee80211_defines.h	/^    u_int64_t   ims_rx_badkeyid;    \/* rx w\/ incorrect keyid *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_ccmpformat	ieee80211_defines.h	/^    u_int64_t   ims_rx_ccmpformat;  \/* rx format bad (CCMP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_ccmpmic	ieee80211_defines.h	/^    u_int64_t   ims_rx_ccmpmic;     \/* rx MIC check failed (CCMP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_ccmpreplay	ieee80211_defines.h	/^    u_int64_t   ims_rx_ccmpreplay;  \/* rx seq# violation (CCMP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_countermeasure	ieee80211_defines.h	/^    u_int64_t   ims_rx_countermeasure; \/* rx TKIP countermeasure activation count *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_decryptcrc	ieee80211_defines.h	/^    u_int64_t   ims_rx_decryptcrc;  \/* rx decrypt failed on crc *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_decryptok	ieee80211_defines.h	/^    u_int64_t   ims_rx_decryptok;   \/* rx decrypt okay *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_discard	ieee80211_defines.h	/^    u_int64_t   ims_rx_discard;     \/* rx dropped by NIC *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_packets	ieee80211_defines.h	/^    u_int64_t   ims_rx_packets; \/* frames successfully received *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_tkipformat	ieee80211_defines.h	/^    u_int64_t   ims_rx_tkipformat;  \/* rx format bad (TKIP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_tkipicv	ieee80211_defines.h	/^    u_int64_t   ims_rx_tkipicv;     \/* rx ICV check failed (TKIP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_tkipmic	ieee80211_defines.h	/^    u_int64_t   ims_rx_tkipmic;     \/* rx MIC check failed (TKIP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_tkipreplay	ieee80211_defines.h	/^    u_int64_t   ims_rx_tkipreplay;  \/* rx seq# violation (TKIP) *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_unencrypted	ieee80211_defines.h	/^    u_int64_t   ims_rx_unencrypted; \/* rx w\/o wep and privacy on *\/$/;"	m	struct:ieee80211_mac_stats
ims_rx_wepfail	ieee80211_defines.h	/^    u_int64_t   ims_rx_wepfail;     \/* rx wep processing failed *\/$/;"	m	struct:ieee80211_mac_stats
ims_tx_discard	ieee80211_defines.h	/^    u_int64_t   ims_tx_discard;     \/* tx dropped by NIC *\/$/;"	m	struct:ieee80211_mac_stats
ims_tx_packets	ieee80211_defines.h	/^    u_int64_t   ims_tx_packets; \/* frames successfully transmitted *\/$/;"	m	struct:ieee80211_mac_stats
in_progress	ieee80211_defines.h	/^    int                    in_progress : 1,        \/* if the scan is in progress *\/$/;"	m	struct:_ieee80211_scan_info
inactivity_interval	ieee80211_defines.h	/^    u_int32_t   inactivity_interval;$/;"	m	struct:_ieee80211_tspec_info
info	ieee80211_ioctl.h	/^	struct ieee80211req_sta_info info[1];	\/* variable length *\/$/;"	m	struct:ieee80211req_sta_req	typeref:struct:ieee80211req_sta_req::ieee80211req_sta_info
init_driver	wireless.c	/^int init_driver ( )$/;"	f
int16	typedefs.h	/^typedef signed short	int16;$/;"	t
int32	typedefs.h	/^typedef signed int	int32;$/;"	t
int64	typedefs.h	/^typedef signed __int64	int64;$/;"	t
int64	typedefs.h	/^typedef signed long long int64;$/;"	t
int8	typedefs.h	/^typedef signed char	int8;$/;"	t
interval	802.11.h	/^	uint8 interval;$/;"	m	struct:__anon9
ips_rx_crcerr	ieee80211_defines.h	/^    u_int64_t   ips_rx_crcerr;       \/* rx failed 'cuz of bad CRC *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_decrypterr	ieee80211_defines.h	/^    u_int64_t   ips_rx_decrypterr;   \/* rx decryption error *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_dup	ieee80211_defines.h	/^    u_int64_t   ips_rx_dup;          \/* duplicated fragments *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_fifoerr	ieee80211_defines.h	/^    u_int64_t   ips_rx_fifoerr;      \/* rx failed 'cuz of FIFO overrun *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_fragments	ieee80211_defines.h	/^    u_int64_t   ips_rx_fragments;    \/* fragments successfully received *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_mdup	ieee80211_defines.h	/^    u_int64_t   ips_rx_mdup;         \/* multiple duplicated fragments *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_multicast	ieee80211_defines.h	/^    u_int64_t   ips_rx_multicast;    \/* multicast\/broadcast frames successfully received *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_packets	ieee80211_defines.h	/^    u_int64_t   ips_rx_packets;      \/* frames successfully received *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_promiscuous	ieee80211_defines.h	/^    u_int64_t   ips_rx_promiscuous;  \/* frames that are received only because promiscuous filter is on *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_promiscuous_fragments	ieee80211_defines.h	/^    u_int64_t   ips_rx_promiscuous_fragments; \/* fragments that are received only because promiscuous filter is on *\/$/;"	m	struct:ieee80211_phy_stats
ips_rx_timeout	ieee80211_defines.h	/^    u_int64_t   ips_rx_timeout;      \/* frmaes that expired the dot11MaxReceiveLifetime *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_fragments	ieee80211_defines.h	/^    u_int64_t   ips_tx_fragments;    \/* fragments successfully transmitted *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_longretry	ieee80211_defines.h	/^    u_int64_t   ips_tx_longretry;    \/* tx on-chip retries (long). DataFailCnt *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_multicast	ieee80211_defines.h	/^    u_int64_t   ips_tx_multicast;    \/* multicast\/broadcast frames successfully transmitted *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_multiretries	ieee80211_defines.h	/^    u_int64_t   ips_tx_multiretries; \/* frames transmitted after more than one retry. *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_packets	ieee80211_defines.h	/^    u_int64_t   ips_tx_packets;      \/* frames successfully transmitted *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_retries	ieee80211_defines.h	/^    u_int64_t   ips_tx_retries;      \/* frames transmitted after retries. NB: not number of retries *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_rts	ieee80211_defines.h	/^    u_int64_t   ips_tx_rts;          \/* RTS success count *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_shortretry	ieee80211_defines.h	/^    u_int64_t   ips_tx_shortretry;   \/* tx on-chip retries (short). RTSFailCnt *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_timeout	ieee80211_defines.h	/^    u_int64_t   ips_tx_timeout;      \/* frames that expire the dot11MaxTransmitMSDULifetime *\/$/;"	m	struct:ieee80211_phy_stats
ips_tx_xretries	ieee80211_defines.h	/^    u_int64_t   ips_tx_xretries;     \/* frames that are xretried. NB: not number of retries *\/$/;"	m	struct:ieee80211_phy_stats
is_crypto_attachfail	ieee80211_defines.h	/^    u_int32_t   is_crypto_attachfail;      \/* cipher attach failed *\/$/;"	m	struct:ieee80211_stats
is_crypto_badcipher	ieee80211_defines.h	/^    u_int32_t   is_crypto_badcipher;       \/* unknown cipher *\/$/;"	m	struct:ieee80211_stats
is_crypto_ccmp	ieee80211_defines.h	/^    u_int32_t   is_crypto_ccmp;            \/* ccmp crypto done in s\/w *\/$/;"	m	struct:ieee80211_stats
is_crypto_delkey	ieee80211_defines.h	/^    u_int32_t   is_crypto_delkey;          \/* driver key delete failed *\/$/;"	m	struct:ieee80211_stats
is_crypto_enmicfail	ieee80211_defines.h	/^    u_int32_t   is_crypto_enmicfail;       \/* en-MIC failed *\/$/;"	m	struct:ieee80211_stats
is_crypto_keyfail	ieee80211_defines.h	/^    u_int32_t   is_crypto_keyfail;         \/* driver key alloc failed *\/$/;"	m	struct:ieee80211_stats
is_crypto_nocipher	ieee80211_defines.h	/^    u_int32_t   is_crypto_nocipher;        \/* cipher not available *\/$/;"	m	struct:ieee80211_stats
is_crypto_nomem	ieee80211_defines.h	/^    u_int32_t   is_crypto_nomem;           \/* no memory for crypto ctx *\/$/;"	m	struct:ieee80211_stats
is_crypto_setkey_cipher	ieee80211_defines.h	/^    u_int32_t   is_crypto_setkey_cipher;   \/* cipher rejected key *\/$/;"	m	struct:ieee80211_stats
is_crypto_setkey_nokey	ieee80211_defines.h	/^    u_int32_t   is_crypto_setkey_nokey;    \/* no key index for setkey *\/$/;"	m	struct:ieee80211_stats
is_crypto_swfallback	ieee80211_defines.h	/^    u_int32_t   is_crypto_swfallback;      \/* cipher fallback to s\/w *\/$/;"	m	struct:ieee80211_stats
is_crypto_tkip	ieee80211_defines.h	/^    u_int32_t   is_crypto_tkip;            \/* tkip crypto done in s\/w *\/$/;"	m	struct:ieee80211_stats
is_crypto_tkipcm	ieee80211_defines.h	/^    u_int32_t   is_crypto_tkipcm;          \/* tkip counter measures *\/$/;"	m	struct:ieee80211_stats
is_crypto_tkipdemic	ieee80211_defines.h	/^    u_int32_t   is_crypto_tkipdemic;       \/* tkip de-MIC done in s\/w *\/$/;"	m	struct:ieee80211_stats
is_crypto_tkipenmic	ieee80211_defines.h	/^    u_int32_t   is_crypto_tkipenmic;       \/* tkip en-MIC done in s\/w *\/$/;"	m	struct:ieee80211_stats
is_crypto_wep	ieee80211_defines.h	/^    u_int32_t   is_crypto_wep;             \/* wep crypto done in s\/w *\/$/;"	m	struct:ieee80211_stats
is_ibss_capmismatch	ieee80211_defines.h	/^    u_int32_t   is_ibss_capmismatch;       \/* merge failed-cap mismatch *\/$/;"	m	struct:ieee80211_stats
is_ibss_norate	ieee80211_defines.h	/^    u_int32_t   is_ibss_norate;            \/* merge failed-rate mismatch *\/$/;"	m	struct:ieee80211_stats
is_node_timeout	ieee80211_defines.h	/^    u_int32_t   is_node_timeout;           \/* nodes timed out inactivity *\/$/;"	m	struct:ieee80211_stats
is_ps_badaid	ieee80211_defines.h	/^    u_int32_t   is_ps_badaid;              \/* ps-poll w\/ incorrect aid *\/$/;"	m	struct:ieee80211_stats
is_ps_qempty	ieee80211_defines.h	/^    u_int32_t   is_ps_qempty;              \/* ps-poll w\/ nothing to send *\/$/;"	m	struct:ieee80211_stats
is_ps_unassoc	ieee80211_defines.h	/^    u_int32_t   is_ps_unassoc;             \/* ps-poll for unassoc. sta *\/$/;"	m	struct:ieee80211_stats
is_rx_acl	ieee80211_defines.h	/^    u_int32_t   is_rx_acl;                 \/* rx discard 'cuz acl policy *\/$/;"	m	struct:ieee80211_stats
is_rx_action	ieee80211_defines.h	/^    u_int32_t   is_rx_action;              \/* rx action mgt *\/$/;"	m	struct:ieee80211_stats
is_rx_ahdemo_mgt	ieee80211_defines.h	/^    u_int32_t   is_rx_ahdemo_mgt;          \/* rx discard ahdemo mgt frame*\/$/;"	m	struct:ieee80211_stats
is_rx_assoc_badwpaie	ieee80211_defines.h	/^    u_int32_t   is_rx_assoc_badwpaie;      \/* rx assoc w\/ bad WPA IE *\/$/;"	m	struct:ieee80211_stats
is_rx_assoc_bss	ieee80211_defines.h	/^    u_int32_t   is_rx_assoc_bss;           \/* rx assoc from wrong bssid *\/$/;"	m	struct:ieee80211_stats
is_rx_assoc_capmismatch	ieee80211_defines.h	/^    u_int32_t   is_rx_assoc_capmismatch;   \/* rx assoc w\/ cap mismatch *\/$/;"	m	struct:ieee80211_stats
is_rx_assoc_norate	ieee80211_defines.h	/^    u_int32_t   is_rx_assoc_norate;        \/* rx assoc w\/ no rate match *\/$/;"	m	struct:ieee80211_stats
is_rx_assoc_notauth	ieee80211_defines.h	/^    u_int32_t   is_rx_assoc_notauth;       \/* rx assoc w\/o auth *\/$/;"	m	struct:ieee80211_stats
is_rx_auth_countermeasures	ieee80211_defines.h	/^    u_int32_t   is_rx_auth_countermeasures;\/* rx auth discard 'cuz CM *\/$/;"	m	struct:ieee80211_stats
is_rx_auth_fail	ieee80211_defines.h	/^    u_int32_t   is_rx_auth_fail;           \/* rx sta auth failure *\/$/;"	m	struct:ieee80211_stats
is_rx_auth_unsupported	ieee80211_defines.h	/^    u_int32_t   is_rx_auth_unsupported;    \/* rx w\/ unsupported auth alg *\/$/;"	m	struct:ieee80211_stats
is_rx_bad_auth	ieee80211_defines.h	/^    u_int32_t   is_rx_bad_auth;            \/* rx bad auth request *\/$/;"	m	struct:ieee80211_stats
is_rx_badathtnl	ieee80211_defines.h	/^    u_int32_t   is_rx_badathtnl;           \/* driver key alloc failed *\/$/;"	m	struct:ieee80211_stats
is_rx_badchan	ieee80211_defines.h	/^    u_int32_t   is_rx_badchan;             \/* rx frame w\/ invalid chan *\/$/;"	m	struct:ieee80211_stats
is_rx_badcipher	ieee80211_defines.h	/^    u_int32_t   is_rx_badcipher;           \/* rx failed 'cuz key type *\/$/;"	m	struct:ieee80211_stats
is_rx_badsubtype	ieee80211_defines.h	/^    u_int32_t   is_rx_badsubtype;          \/* rx frame w\/ unknown subtype*\/$/;"	m	struct:ieee80211_stats
is_rx_badversion	ieee80211_defines.h	/^    u_int32_t   is_rx_badversion;          \/* rx frame with bad version *\/$/;"	m	struct:ieee80211_stats
is_rx_beacon	ieee80211_defines.h	/^    u_int32_t   is_rx_beacon;              \/* rx beacon frames *\/$/;"	m	struct:ieee80211_stats
is_rx_chanmismatch	ieee80211_defines.h	/^    u_int32_t   is_rx_chanmismatch;        \/* rx frame chan mismatch *\/$/;"	m	struct:ieee80211_stats
is_rx_ctl	ieee80211_defines.h	/^    u_int32_t   is_rx_ctl;                 \/* rx discard ctrl frames *\/$/;"	m	struct:ieee80211_stats
is_rx_deauth	ieee80211_defines.h	/^    u_int32_t   is_rx_deauth;              \/* rx deauthentication *\/$/;"	m	struct:ieee80211_stats
is_rx_decap	ieee80211_defines.h	/^    u_int32_t   is_rx_decap;               \/* rx decapsulation failed *\/$/;"	m	struct:ieee80211_stats
is_rx_disassoc	ieee80211_defines.h	/^    u_int32_t   is_rx_disassoc;            \/* rx disassociation *\/$/;"	m	struct:ieee80211_stats
is_rx_elem_missing	ieee80211_defines.h	/^    u_int32_t   is_rx_elem_missing;        \/* rx required element missing*\/$/;"	m	struct:ieee80211_stats
is_rx_elem_toobig	ieee80211_defines.h	/^    u_int32_t   is_rx_elem_toobig;         \/* rx element too big *\/$/;"	m	struct:ieee80211_stats
is_rx_elem_toosmall	ieee80211_defines.h	/^    u_int32_t   is_rx_elem_toosmall;       \/* rx element too small *\/$/;"	m	struct:ieee80211_stats
is_rx_elem_unknown	ieee80211_defines.h	/^    u_int32_t   is_rx_elem_unknown;        \/* rx element unknown *\/$/;"	m	struct:ieee80211_stats
is_rx_ffcnt	ieee80211_defines.h	/^    u_int32_t   is_rx_ffcnt;               \/* rx fast frames *\/$/;"	m	struct:ieee80211_stats
is_rx_mcastecho	ieee80211_defines.h	/^    u_int32_t   is_rx_mcastecho;           \/* rx discard 'cuz mcast echo *\/$/;"	m	struct:ieee80211_stats
is_rx_mgtdiscard	ieee80211_defines.h	/^    u_int32_t   is_rx_mgtdiscard;          \/* rx discard mgt frames *\/$/;"	m	struct:ieee80211_stats
is_rx_nobuf	ieee80211_defines.h	/^    u_int32_t   is_rx_nobuf;               \/* rx failed for lack of buf *\/$/;"	m	struct:ieee80211_stats
is_rx_nocipherctx	ieee80211_defines.h	/^    u_int32_t   is_rx_nocipherctx;         \/* rx failed 'cuz key !setup *\/$/;"	m	struct:ieee80211_stats
is_rx_nodealloc	ieee80211_defines.h	/^    u_int32_t   is_rx_nodealloc;           \/* rx frame dropped *\/$/;"	m	struct:ieee80211_stats
is_rx_noprivacy	ieee80211_defines.h	/^    u_int32_t   is_rx_noprivacy;           \/* rx w\/ wep but privacy off *\/$/;"	m	struct:ieee80211_stats
is_rx_notassoc	ieee80211_defines.h	/^    u_int32_t   is_rx_notassoc;            \/* rx discard 'cuz sta !assoc *\/$/;"	m	struct:ieee80211_stats
is_rx_nowds	ieee80211_defines.h	/^    u_int32_t   is_rx_nowds;               \/* 4-addr packets received with no wds enabled *\/$/;"	m	struct:ieee80211_stats
is_rx_rstoobig	ieee80211_defines.h	/^    u_int32_t   is_rx_rstoobig;            \/* rx rate set truncated *\/$/;"	m	struct:ieee80211_stats
is_rx_ssidmismatch	ieee80211_defines.h	/^    u_int32_t   is_rx_ssidmismatch;        \/* rx frame ssid mismatch  *\/$/;"	m	struct:ieee80211_stats
is_rx_tooshort	ieee80211_defines.h	/^    u_int32_t   is_rx_tooshort;            \/* rx frame too short *\/$/;"	m	struct:ieee80211_stats
is_rx_unauth	ieee80211_defines.h	/^    u_int32_t   is_rx_unauth;              \/* rx on unauthorized port *\/$/;"	m	struct:ieee80211_stats
is_rx_wrongbss	ieee80211_defines.h	/^    u_int32_t   is_rx_wrongbss;            \/* rx from wrong bssid *\/$/;"	m	struct:ieee80211_stats
is_rx_wrongdir	ieee80211_defines.h	/^    u_int32_t   is_rx_wrongdir;            \/* rx w\/ wrong direction *\/$/;"	m	struct:ieee80211_stats
is_scan_active	ieee80211_defines.h	/^    u_int32_t   is_scan_active;            \/* active scans started *\/$/;"	m	struct:ieee80211_stats
is_scan_passive	ieee80211_defines.h	/^    u_int32_t   is_scan_passive;           \/* passive scans started *\/$/;"	m	struct:ieee80211_stats
is_stats	ieee80211_ioctl.h	/^	struct ieee80211_nodestats is_stats;$/;"	m	struct:ieee80211req_sta_stats	typeref:struct:ieee80211req_sta_stats::ieee80211_nodestats
is_tx_badcipher	ieee80211_defines.h	/^    u_int32_t   is_tx_badcipher;           \/* tx failed 'cuz key type *\/$/;"	m	struct:ieee80211_stats
is_tx_fferrcnt	ieee80211_defines.h	/^    u_int32_t   is_tx_fferrcnt;            \/* tx fast frames sent success *\/$/;"	m	struct:ieee80211_stats
is_tx_ffokcnt	ieee80211_defines.h	/^    u_int32_t   is_tx_ffokcnt;             \/* tx fast frames sent success *\/$/;"	m	struct:ieee80211_stats
is_tx_nobuf	ieee80211_defines.h	/^    u_int32_t   is_tx_nobuf;               \/* tx failed for lack of buf *\/$/;"	m	struct:ieee80211_stats
is_tx_nodefkey	ieee80211_defines.h	/^    u_int32_t   is_tx_nodefkey;            \/* tx failed 'cuz no defkey *\/$/;"	m	struct:ieee80211_stats
is_tx_noheadroom	ieee80211_defines.h	/^    u_int32_t   is_tx_noheadroom;          \/* tx failed 'cuz no space *\/$/;"	m	struct:ieee80211_stats
is_tx_nonode	ieee80211_defines.h	/^    u_int32_t   is_tx_nonode;              \/* tx failed for no node *\/$/;"	m	struct:ieee80211_stats
is_tx_unknownmgt	ieee80211_defines.h	/^    u_int32_t   is_tx_unknownmgt;          \/* tx of unknown mgt frame *\/$/;"	m	struct:ieee80211_stats
is_u	ieee80211_ioctl.h	/^	} is_u;$/;"	m	struct:ieee80211req_sta_req	typeref:union:ieee80211req_sta_req::__anon17
is_u	ieee80211_ioctl.h	/^	} is_u;$/;"	m	struct:ieee80211req_sta_stats	typeref:union:ieee80211req_sta_stats::__anon15
isi_assoc_time	ieee80211_ioctl.h	/^        u_int32_t       isi_assoc_time;         \/* sta association time *\/$/;"	m	struct:ieee80211req_sta_info
isi_associd	ieee80211_ioctl.h	/^	u_int16_t	isi_associd;		\/* assoc response *\/$/;"	m	struct:ieee80211req_sta_info
isi_athflags	ieee80211_ioctl.h	/^	u_int8_t	isi_athflags;		\/* Atheros capabilities *\/$/;"	m	struct:ieee80211req_sta_info
isi_authmode	ieee80211_ioctl.h	/^	u_int8_t	isi_authmode;		\/* authentication algorithm *\/$/;"	m	struct:ieee80211req_sta_info
isi_capinfo	ieee80211_ioctl.h	/^	u_int16_t	isi_capinfo;		\/* capabilities *\/$/;"	m	struct:ieee80211req_sta_info
isi_cipher	ieee80211_ioctl.h	/^	u_int8_t	isi_cipher;$/;"	m	struct:ieee80211req_sta_info
isi_erp	ieee80211_ioctl.h	/^	u_int8_t	isi_erp;		\/* ERP element *\/$/;"	m	struct:ieee80211req_sta_info
isi_flags	ieee80211_ioctl.h	/^    u_int32_t   isi_flags;      \/* channel flags *\/$/;"	m	struct:ieee80211req_sta_info
isi_freq	ieee80211_ioctl.h	/^	u_int16_t	isi_freq;		\/* MHz *\/$/;"	m	struct:ieee80211req_sta_info
isi_htcap	ieee80211_ioctl.h	/^    u_int16_t   isi_htcap;      \/* HT capabilities *\/$/;"	m	struct:ieee80211req_sta_info
isi_ie_len	ieee80211_ioctl.h	/^	u_int16_t	isi_ie_len;		\/* IE length *\/$/;"	m	struct:ieee80211req_sta_info
isi_inact	ieee80211_ioctl.h	/^	u_int16_t	isi_inact;		\/* inactivity timer *\/$/;"	m	struct:ieee80211req_sta_info
isi_len	ieee80211_ioctl.h	/^	u_int16_t	isi_len;		\/* length (mult of 4) *\/$/;"	m	struct:ieee80211req_sta_info
isi_macaddr	ieee80211_ioctl.h	/^	u_int8_t	isi_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_sta_info
isi_nrates	ieee80211_ioctl.h	/^	u_int8_t	isi_nrates;$/;"	m	struct:ieee80211req_sta_info
isi_opmode	ieee80211_ioctl.h	/^	u_int8_t	isi_opmode;		\/* sta operating mode *\/$/;"	m	struct:ieee80211req_sta_info
isi_rates	ieee80211_ioctl.h	/^	u_int8_t	isi_rates[IEEE80211_RATE_MAXSIZE];$/;"	m	struct:ieee80211req_sta_info
isi_rssi	ieee80211_ioctl.h	/^	int8_t	    	isi_rssi;$/;"	m	struct:ieee80211req_sta_info
isi_rxseqs	ieee80211_ioctl.h	/^	u_int16_t	isi_rxseqs[17];		\/* seq previous for qos frames*\/$/;"	m	struct:ieee80211req_sta_info
isi_state	ieee80211_ioctl.h	/^	u_int16_t	isi_state;		\/* state flags *\/$/;"	m	struct:ieee80211req_sta_info
isi_txpower	ieee80211_ioctl.h	/^	u_int16_t	isi_txpower;		\/* current tx power *\/$/;"	m	struct:ieee80211req_sta_info
isi_txrate	ieee80211_ioctl.h	/^	u_int8_t	isi_txrate;		\/* index to isi_rates[] *\/$/;"	m	struct:ieee80211req_sta_info
isi_txratekbps	ieee80211_ioctl.h	/^    u_int32_t   isi_txratekbps; \/* rate in Kbps, for 11n *\/$/;"	m	struct:ieee80211req_sta_info
isi_txseqs	ieee80211_ioctl.h	/^	u_int16_t	isi_txseqs[17];		\/* seq to be transmitted *\/$/;"	m	struct:ieee80211req_sta_info
isi_uapsd	ieee80211_ioctl.h	/^	u_int8_t	isi_uapsd;		\/* UAPSD queues *\/$/;"	m	struct:ieee80211req_sta_info
isi_vlan	ieee80211_ioctl.h	/^	u_int16_t	isi_vlan;		\/* vlan tag *\/$/;"	m	struct:ieee80211req_sta_info
isr_bssid	ieee80211_ioctl.h	/^	u_int8_t	isr_bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_scan_result
isr_capinfo	ieee80211_ioctl.h	/^	u_int16_t	isr_capinfo;		\/* capabilities *\/$/;"	m	struct:ieee80211req_scan_result
isr_erp	ieee80211_ioctl.h	/^	u_int8_t	isr_erp;		\/* ERP element *\/$/;"	m	struct:ieee80211req_scan_result
isr_flags	ieee80211_ioctl.h	/^	u_int32_t	isr_flags;		\/* channel flags *\/$/;"	m	struct:ieee80211req_scan_result
isr_flags	ieee80211_ioctl.h	/^	u_int32_t   isr_flags;      \/* channel flags *\/$/;"	m	struct:ieee80211req_scan_result
isr_freq	ieee80211_ioctl.h	/^	u_int16_t	isr_freq;		\/* MHz *\/$/;"	m	struct:ieee80211req_scan_result
isr_ie_len	ieee80211_ioctl.h	/^	u_int8_t	isr_ie_len;		\/* IE length *\/$/;"	m	struct:ieee80211req_scan_result
isr_intval	ieee80211_ioctl.h	/^	u_int8_t	isr_intval;		\/* beacon interval *\/$/;"	m	struct:ieee80211req_scan_result
isr_len	ieee80211_ioctl.h	/^	u_int16_t	isr_len;		\/* length (mult of 4) *\/$/;"	m	struct:ieee80211req_scan_result
isr_noise	ieee80211_ioctl.h	/^	u_int8_t	isr_noise;$/;"	m	struct:ieee80211req_scan_result
isr_nrates	ieee80211_ioctl.h	/^	u_int8_t	isr_nrates;$/;"	m	struct:ieee80211req_scan_result
isr_pad	ieee80211_ioctl.h	/^	u_int8_t	isr_pad[5];$/;"	m	struct:ieee80211req_scan_result
isr_rates	ieee80211_ioctl.h	/^	u_int8_t	isr_rates[IEEE80211_RATE_MAXSIZE];$/;"	m	struct:ieee80211req_scan_result
isr_rssi	ieee80211_ioctl.h	/^	u_int8_t	isr_rssi;$/;"	m	struct:ieee80211req_scan_result
isr_ssid_len	ieee80211_ioctl.h	/^	u_int8_t	isr_ssid_len;		\/* SSID length *\/$/;"	m	struct:ieee80211req_scan_result
it_macaddr	ieee80211_ioctl.h	/^	u_int8_t	it_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_sta_txpow
it_txpow	ieee80211_ioctl.h	/^	u_int8_t	it_txpow;$/;"	m	struct:ieee80211req_sta_txpow
iwpriv80211	wireless.c	/^iwpriv80211(int op, void *data, int len)$/;"	f	file:
key_used	ieee80211_defines.h	/^    u_int8_t                key_used;       \/*index for WAPI rekey labeling*\/$/;"	m	struct:_ieee80211_keyval
keydata	ieee80211_defines.h	/^    u_int8_t                *keydata;$/;"	m	struct:_ieee80211_keyval
keydir	ieee80211_defines.h	/^    ieee80211_key_direction keydir;$/;"	m	struct:_ieee80211_keyval
keylen	ieee80211_defines.h	/^    u_int16_t               keylen;         \/* length of the key data fields *\/$/;"	m	struct:_ieee80211_keyval
keyrsc	ieee80211_defines.h	/^    u_int64_t               keyrsc;$/;"	m	struct:_ieee80211_keyval
keytsc	ieee80211_defines.h	/^    u_int64_t               keytsc;$/;"	m	struct:_ieee80211_keyval
keytype	ieee80211_defines.h	/^    ieee80211_cipher_type   keytype;$/;"	m	struct:_ieee80211_keyval
kick_station	wireless.c	/^int kick_station (char *ifname, unsigned char *mac)$/;"	f
lastrate	ieee80211_defines.h	/^    u_int32_t              lastrate; \/* last packet rate in kbps *\/$/;"	m	struct:_ieee80211_rate_info
lastseen	radius.h	/^	time_t lastseen;$/;"	m	struct:sta
len	802.11.h	/^	uchar	len;   $/;"	m	struct:brcm_ie
len	802.11.h	/^	uint8 len;$/;"	m	struct:__anon1
len	802.11.h	/^	uint8 len;$/;"	m	struct:__anon3
len	802.11.h	/^	uint8 len;$/;"	m	struct:__anon4
len	802.11.h	/^	uint8 len;$/;"	m	struct:__anon5
len	802.11.h	/^	uint8 len;$/;"	m	struct:__anon9
len	802.11.h	/^	uint8 len;$/;"	m	struct:dot11_channel_switch
len	802.11.h	/^	uint8 len;$/;"	m	struct:dot11_meas_rep
len	802.11.h	/^	uint8 len;$/;"	m	struct:dot11_quiet
len	ieee80211_defines.h	/^    int         len;$/;"	m	struct:_ieee80211_ssid
listen	802.11.h	/^	uint16			listen;		\/* listen interval *\/$/;"	m	struct:dot11_assoc_req
mac	ieee80211_ioctl.h	/^    u_int8_t mac[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_wlanconfig_nawds
mac	radius.h	/^	unsigned char mac[6];$/;"	m	struct:sta
macaddr	ieee80211_defines.h	/^    u_int8_t                *macaddr;       \/* mac address of length IEEE80211_ADDR_LEN . all bytes are 0xff for multicast key *\/$/;"	m	struct:_ieee80211_keyval
macaddr	ieee80211_defines.h	/^    u_int8_t                macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:_ieee80211_reset_request
macaddr	ieee80211_ioctl.h	/^		u_int8_t	macaddr[IEEE80211_ADDR_LEN];$/;"	m	union:ieee80211req_sta_req::__anon17
macaddr	ieee80211_ioctl.h	/^		u_int8_t	macaddr[IEEE80211_ADDR_LEN];$/;"	m	union:ieee80211req_sta_stats::__anon15
macfmt	wrt-radauth.c	/^short macfmt;$/;"	v
maclist	wrt-radauth.c	/^struct maclist {$/;"	s	file:
main	radius-client.c	/^int main(int argc, char** argv)$/;"	f
main	wrt-radauth.c	/^int main(int argc, char** argv)$/;"	f
map	802.11.h	/^			uint8 map;$/;"	m	struct:dot11_meas_rep::__anon6::__anon7
map	802.11.h	/^	chan_map_tuple_t map[1];$/;"	m	struct:__anon9
map	802.11.h	/^	uint8 map;$/;"	m	struct:__anon8
map	802.11.h	/^	uint8 map;$/;"	m	struct:dot11_meas_rep_basic
margin	802.11.h	/^	uint8 margin;$/;"	m	struct:__anon3
max	802.11.h	/^	uint8 max;$/;"	m	struct:__anon2
max_burst_size	ieee80211_defines.h	/^    u_int32_t   max_burst_size;$/;"	m	struct:_ieee80211_tspec_info
max_dwell_time_active	ieee80211_defines.h	/^    int                                 max_dwell_time_active;  \/* max time in msec on active channels (if no response) *\/$/;"	m	struct:_ieee80211_scan_params
max_dwell_time_active	ieee80211_defines.h	/^    int                    max_dwell_time_active;  \/* max time in msec on active channel (if no response) *\/$/;"	m	struct:_ieee80211_scan_info
max_dwell_time_passive	ieee80211_defines.h	/^    int                                 max_dwell_time_passive; \/* max time in msec on passive channels (if no response) *\/$/;"	m	struct:_ieee80211_scan_params
max_dwell_time_passive	ieee80211_defines.h	/^    int                    max_dwell_time_passive; \/* max time in msec on passive channel*\/$/;"	m	struct:_ieee80211_scan_info
max_msdu_size	ieee80211_defines.h	/^    u_int16_t   max_msdu_size;$/;"	m	struct:_ieee80211_tspec_info
max_offchan_retries	ieee80211_defines.h	/^    int                                 max_offchan_retries;    \/* maximum number of times to retry off-channel switch *\/$/;"	m	struct:_ieee80211_scan_params
max_rest_time	ieee80211_defines.h	/^    int                                 max_rest_time;          \/* max time in msec on the BSS channel, only valid for BG scan *\/$/;"	m	struct:_ieee80211_scan_params
max_rest_time	ieee80211_defines.h	/^    int                    max_rest_time;          \/* max time in msec on the BSS channel, only valid for BG scan *\/$/;"	m	struct:_ieee80211_scan_info
max_scan_time	ieee80211_defines.h	/^    int                                 max_scan_time;          \/* maximum time in msec allowed for scan  *\/$/;"	m	struct:_ieee80211_scan_params
max_srv_interval	ieee80211_defines.h	/^    u_int32_t   max_srv_interval;$/;"	m	struct:_ieee80211_tspec_info
mcs	ieee80211_defines.h	/^    u_int8_t               mcs;      \/* mcs index . is valid if rate type is MCS20 or MCS40 *\/$/;"	m	struct:_ieee80211_rate_info
md5_INCLUDED	md5.h	51;"	d
md5_append	md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_byte_t	md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_calc	radius.c	/^void md5_calc(unsigned char *output, unsigned  char  *input, unsigned int inlen)$/;"	f
md5_finish	md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_init	md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_process	md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	md5.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
mean_data_rate	ieee80211_defines.h	/^    u_int32_t   mean_data_rate;$/;"	m	struct:_ieee80211_tspec_info
mfp	ieee80211_defines.h	/^                            mfp:1;          \/* management frame protection *\/$/;"	m	struct:_ieee80211_keyval
mic_count_in_60s	ieee80211_defines.h	/^    u_int16_t   mic_count_in_60s;$/;"	m	struct:tkip_countermeasure
min	802.11.h	/^	uint8 min;$/;"	m	struct:__anon2
min_beacon_count	ieee80211_defines.h	/^    int                                 min_beacon_count;       \/* number of home AP beacons to receive before leaving the home channel *\/$/;"	m	struct:_ieee80211_scan_params
min_beacon_count	ieee80211_defines.h	/^    int                    min_beacon_count;       \/* number of home AP beacons to receive before leaving the home channel *\/$/;"	m	struct:_ieee80211_scan_info
min_data_rate	ieee80211_defines.h	/^    u_int32_t   min_data_rate;$/;"	m	struct:_ieee80211_tspec_info
min_dwell_time_active	ieee80211_defines.h	/^    int                                 min_dwell_time_active;  \/* min time in msec on active channels *\/$/;"	m	struct:_ieee80211_scan_params
min_dwell_time_active	ieee80211_defines.h	/^    int                    min_dwell_time_active;  \/* min time in msec on active channels *\/$/;"	m	struct:_ieee80211_scan_info
min_dwell_time_passive	ieee80211_defines.h	/^    int                                 min_dwell_time_passive; \/* min time in msec on passive channels *\/$/;"	m	struct:_ieee80211_scan_params
min_dwell_time_passive	ieee80211_defines.h	/^    int                    min_dwell_time_passive; \/* min time in msec on passive channels *\/$/;"	m	struct:_ieee80211_scan_info
min_phy_rate	ieee80211_defines.h	/^    u_int32_t   min_phy_rate;$/;"	m	struct:_ieee80211_tspec_info
min_rest_time	ieee80211_defines.h	/^    int                                 min_rest_time;          \/* min time in msec on the BSS channel, only valid for BG scan *\/$/;"	m	struct:_ieee80211_scan_params
min_rest_time	ieee80211_defines.h	/^    int                    min_rest_time;          \/* min time in msec on the BSS channel, only valid for BG scan *\/$/;"	m	struct:_ieee80211_scan_info
min_srv_interval	ieee80211_defines.h	/^    u_int32_t   min_srv_interval;$/;"	m	struct:_ieee80211_tspec_info
mlme_assoc_complete	ieee80211_defines.h	/^    void (*mlme_assoc_complete)(os_handle_t, IEEE80211_STATUS, u_int16_t aid, wbuf_t wbuf);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_assoc_indication	ieee80211_defines.h	/^    void (*mlme_assoc_indication)(os_handle_t, u_int8_t *macaddr, u_int16_t result, wbuf_t wbuf, wbuf_t resp_wbuf);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_assoc_req	ieee80211_defines.h	/^    void (*mlme_assoc_req)(os_handle_t, wbuf_t wbuf);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_auth_complete	ieee80211_defines.h	/^    void (*mlme_auth_complete)(os_handle_t, IEEE80211_STATUS);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_auth_indication	ieee80211_defines.h	/^    void (*mlme_auth_indication)(os_handle_t, u_int8_t *macaddr, u_int16_t result);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_deauth_complete	ieee80211_defines.h	/^    void (*mlme_deauth_complete)(os_handle_t, IEEE80211_STATUS);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_deauth_indication	ieee80211_defines.h	/^    void (*mlme_deauth_indication)(os_handle_t, u_int8_t *macaddr, u_int16_t reason_code);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_disassoc_complete	ieee80211_defines.h	/^    void (*mlme_disassoc_complete)(os_handle_t, u_int8_t *, u_int16_t, IEEE80211_STATUS);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_disassoc_indication	ieee80211_defines.h	/^    void (*mlme_disassoc_indication)(os_handle_t, u_int8_t *macaddr, u_int16_t reason_code);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_ibss_merge_completion_indication	ieee80211_defines.h	/^    void (*mlme_ibss_merge_completion_indication)(os_handle_t, u_int8_t *bssid);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_ibss_merge_start_indication	ieee80211_defines.h	/^    void (*mlme_ibss_merge_start_indication)(os_handle_t, u_int8_t *bssid);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_join_complete_adhoc	ieee80211_defines.h	/^    void (*mlme_join_complete_adhoc)(os_handle_t, IEEE80211_STATUS);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_join_complete_infra	ieee80211_defines.h	/^    void (*mlme_join_complete_infra)(os_handle_t, IEEE80211_STATUS);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_reassoc_complete	ieee80211_defines.h	/^    void (*mlme_reassoc_complete)(os_handle_t, IEEE80211_STATUS, u_int16_t aid, wbuf_t wbuf);$/;"	m	struct:_wlan_mlme_event_handler_table
mlme_reassoc_indication	ieee80211_defines.h	/^    void (*mlme_reassoc_indication)(os_handle_t, u_int8_t *macaddr, u_int16_t result, wbuf_t wbuf, wbuf_t resp_wbuf);$/;"	m	struct:_wlan_mlme_event_handler_table
mode	802.11.h	/^	uint8 mode;$/;"	m	struct:__anon5
mode	802.11.h	/^	uint8 mode;$/;"	m	struct:dot11_channel_switch
mode	802.11.h	/^	uint8 mode;$/;"	m	struct:dot11_meas_rep
mode	_ieee80211.h	/^    enum ieee80211_fixed_rate_mode  mode;$/;"	m	struct:ieee80211_fixed_rate	typeref:enum:ieee80211_fixed_rate::ieee80211_fixed_rate_mode
mode	ieee80211_ioctl.h	/^    u_int8_t mode;$/;"	m	struct:ieee80211_wlanconfig_nawds
multiple_ports_active	ieee80211_defines.h	/^    bool                                multiple_ports_active;  \/* driver has multiple ports active in the home channel *\/$/;"	m	struct:_ieee80211_scan_params
nawds	ieee80211_ioctl.h	/^        struct ieee80211_wlanconfig_nawds nawds;$/;"	m	union:ieee80211_wlanconfig::__anon25	typeref:struct:ieee80211_wlanconfig::__anon25::ieee80211_wlanconfig_nawds
next	radius.h	/^	struct sta *next; \/* Pointer to next STA in linked list *\/$/;"	m	struct:sta	typeref:struct:sta::sta
no_flush	ieee80211_defines.h	/^                            no_flush:1;$/;"	m	struct:_ieee80211_reset_request
norminal_msdu_size	ieee80211_defines.h	/^    u_int16_t   norminal_msdu_size;$/;"	m	struct:_ieee80211_tspec_info
ns_ps_discard	ieee80211_defines.h	/^    u_int32_t    ns_ps_discard;          \/* ps discard 'cuz of age *\/$/;"	m	struct:ieee80211_nodestats
ns_psq_drops	ieee80211_defines.h	/^    u_int32_t    ns_psq_drops;           \/* power save queue drops *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_action	ieee80211_defines.h	/^    u_int32_t    ns_rx_action;           \/* rx action *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_beacons	ieee80211_defines.h	/^    u_int64_t    ns_rx_beacons;          \/* rx beacon frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_bytes	ieee80211_defines.h	/^    u_int64_t    ns_rx_bytes;            \/* rx data count (bytes) *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_ctrl	ieee80211_defines.h	/^    u_int32_t    ns_rx_ctrl;             \/* rx control frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_data	ieee80211_defines.h	/^    u_int32_t    ns_rx_data;             \/* rx data frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_deauth	ieee80211_defines.h	/^    u_int32_t    ns_rx_deauth;           \/* rx deauthentication *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_decap	ieee80211_defines.h	/^    u_int32_t    ns_rx_decap;            \/* rx decapsulation failed *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_decryptcrc	ieee80211_defines.h	/^    u_int32_t    ns_rx_decryptcrc;       \/* rx decrypt failed on crc *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_defrag	ieee80211_defines.h	/^    u_int32_t    ns_rx_defrag;           \/* rx defragmentation failed *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_demicfail	ieee80211_defines.h	/^    u_int32_t    ns_rx_demicfail;        \/* rx demic failed *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_disassoc	ieee80211_defines.h	/^    u_int32_t    ns_rx_disassoc;         \/* rx disassociation *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_dup	ieee80211_defines.h	/^    u_int32_t    ns_rx_dup;              \/* rx discard 'cuz dup *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_mcast	ieee80211_defines.h	/^    u_int32_t    ns_rx_mcast;            \/* rx multi\/broadcast frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_mgmt	ieee80211_defines.h	/^    u_int32_t    ns_rx_mgmt;             \/* rx management frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_noprivacy	ieee80211_defines.h	/^    u_int32_t    ns_rx_noprivacy;        \/* rx w\/ wep but privacy off *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_proberesp	ieee80211_defines.h	/^    u_int32_t    ns_rx_proberesp;        \/* rx probe response frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_ucast	ieee80211_defines.h	/^    u_int32_t    ns_rx_ucast;            \/* rx unicast frames *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_unauth	ieee80211_defines.h	/^    u_int32_t    ns_rx_unauth;           \/* rx on unauthorized port *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_unencrypted	ieee80211_defines.h	/^    u_int32_t    ns_rx_unencrypted;      \/* rx unecrypted w\/ privacy *\/$/;"	m	struct:ieee80211_nodestats
ns_rx_wepfail	ieee80211_defines.h	/^    u_int32_t    ns_rx_wepfail;          \/* rx wep processing failed *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_assoc	ieee80211_defines.h	/^    u_int32_t    ns_tx_assoc;            \/* [re]associations *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_assoc_fail	ieee80211_defines.h	/^    u_int32_t    ns_tx_assoc_fail;       \/* [re]association failures *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_auth	ieee80211_defines.h	/^    u_int32_t    ns_tx_auth;             \/* [re]authentications *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_auth_fail	ieee80211_defines.h	/^    u_int32_t    ns_tx_auth_fail;        \/* [re]authentication failures*\/$/;"	m	struct:ieee80211_nodestats
ns_tx_bytes	ieee80211_defines.h	/^    u_int64_t    ns_tx_bytes;            \/* tx data count (bytes) *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_data	ieee80211_defines.h	/^    u_int32_t    ns_tx_data;             \/* tx data frames *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_deauth	ieee80211_defines.h	/^    u_int32_t    ns_tx_deauth;           \/* deauthentications *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_deauth_code	ieee80211_defines.h	/^    u_int32_t    ns_tx_deauth_code;      \/* last deauth reason *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_disassoc	ieee80211_defines.h	/^    u_int32_t    ns_tx_disassoc;         \/* disassociations *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_disassoc_code	ieee80211_defines.h	/^    u_int32_t    ns_tx_disassoc_code;    \/* last disassociation reason *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_dropblock	ieee80211_defines.h	/^	u_int32_t	ns_tx_dropblock;	\/* tx discard 'cuz headline block *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_eosplost	ieee80211_defines.h	/^    u_int32_t    ns_tx_eosplost;         \/* uapsd EOSP retried out *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_mcast	ieee80211_defines.h	/^    u_int32_t    ns_tx_mcast;            \/* tx multi\/broadcast frames *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_mgmt	ieee80211_defines.h	/^    u_int32_t    ns_tx_mgmt;             \/* tx management frames *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_novlantag	ieee80211_defines.h	/^    u_int32_t    ns_tx_novlantag;        \/* tx discard 'cuz no tag *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_probereq	ieee80211_defines.h	/^    u_int32_t    ns_tx_probereq;         \/* tx probe request frames *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_uapsd	ieee80211_defines.h	/^    u_int32_t    ns_tx_uapsd;            \/* tx on uapsd queue *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_ucast	ieee80211_defines.h	/^    u_int32_t    ns_tx_ucast;            \/* tx unicast frames *\/$/;"	m	struct:ieee80211_nodestats
ns_tx_vlanmismatch	ieee80211_defines.h	/^    u_int32_t    ns_tx_vlanmismatch;     \/* tx discard 'cuz bad tag *\/$/;"	m	struct:ieee80211_nodestats
ns_uapsd_active	ieee80211_defines.h	/^    u_int32_t    ns_uapsd_active;         \/* uapsd duplicate triggers *\/$/;"	m	struct:ieee80211_nodestats
ns_uapsd_duptriggers	ieee80211_defines.h	/^    u_int32_t    ns_uapsd_duptriggers;    \/* uapsd duplicate triggers *\/$/;"	m	struct:ieee80211_nodestats
ns_uapsd_ignoretriggers	ieee80211_defines.h	/^    u_int32_t    ns_uapsd_ignoretriggers; \/* uapsd duplicate triggers *\/$/;"	m	struct:ieee80211_nodestats
ns_uapsd_triggerenabled	ieee80211_defines.h	/^    u_int32_t    ns_uapsd_triggerenabled; \/* uapsd duplicate triggers *\/$/;"	m	struct:ieee80211_nodestats
ns_uapsd_triggers	ieee80211_defines.h	/^    u_int32_t    ns_uapsd_triggers;      \/* uapsd triggers *\/$/;"	m	struct:ieee80211_nodestats
num	ieee80211_ioctl.h	/^    u_int8_t num;$/;"	m	struct:ieee80211_wlanconfig_nawds
num_bssid	ieee80211_defines.h	/^    int                                 num_bssid;              \/* number of desired bssids *\/$/;"	m	struct:_ieee80211_scan_params
num_channels	802.11.h	/^	uint8 num_channels;$/;"	m	struct:__anon4
num_channels	ieee80211_defines.h	/^    int                                 num_channels;           \/* number of channels to scan *\/$/;"	m	struct:_ieee80211_scan_params
num_ssid	ieee80211_defines.h	/^    int                                 num_ssid;               \/* number of desired ssids *\/$/;"	m	struct:_ieee80211_scan_params
octet	ethernet.h	/^	uint8 octet[ETHER_ADDR_LEN];$/;"	m	struct:ether_addr
offchan_retry_delay	ieee80211_defines.h	/^    int                                 offchan_retry_delay;    \/* delay in msec before retrying off-channel switch *\/$/;"	m	struct:_ieee80211_scan_params
offset	802.11.h	/^	uint16 offset;	\/* TU's offset from TBTT in Count field *\/$/;"	m	struct:dot11_quiet
os_handle_t	ieee80211_defines.h	/^typedef void *os_handle_t; $/;"	t
os_if_t	ieee80211_defines.h	/^typedef struct _os_if_t *os_if_t; $/;"	t	typeref:struct:_os_if_t
oui	802.11.h	/^	uchar 	oui[3];$/;"	m	struct:brcm_ie
oui	802.11.h	/^	uint8	oui[DOT11_OUI_LEN];		\/* RFC1042: 0x00 0x00 0x00$/;"	m	struct:dot11_llc_snap_header
override	ieee80211_ioctl.h	/^    u_int8_t override;$/;"	m	struct:ieee80211_wlanconfig_nawds
packet_type	ieee80211_defines.h	/^    ieee80211_privacy_filter_packet_type    packet_type;$/;"	m	struct:_ieee80211_privacy_excemption_filter
pad	ieee80211_ioctl.h	/^		u_int64_t	pad;$/;"	m	union:ieee80211req_sta_req::__anon17
pad	ieee80211_ioctl.h	/^		u_int64_t	pad;$/;"	m	union:ieee80211req_sta_stats::__anon15
pad1	_ieee80211.h	/^    u_int8_t                pad1;$/;"	m	struct:ieee80211_roam
pad2	_ieee80211.h	/^    u_int8_t                pad2;$/;"	m	struct:ieee80211_roam
peak_data_rate	ieee80211_defines.h	/^    u_int32_t   peak_data_rate;$/;"	m	struct:_ieee80211_tspec_info
period	802.11.h	/^	uint8 period;	\/* Beacon intervals between periodic quiet periods ? *\/$/;"	m	struct:dot11_quiet
persistent	ieee80211_defines.h	/^    u_int                   persistent:1,   \/* persistent key *\/$/;"	m	struct:_ieee80211_keyval
phy_mode	ieee80211_defines.h	/^    enum ieee80211_phymode  phy_mode;$/;"	m	struct:_ieee80211_reset_request	typeref:enum:_ieee80211_reset_request::ieee80211_phymode
pmkid	ieee80211_defines.h	/^    u_int8_t    pmkid[IEEE80211_PMKID_LEN];$/;"	m	struct:_ieee80211_pmkid_entry
port	wrt-radauth.c	/^short port = 1812;$/;"	v
power	802.11.h	/^	uint8 power;$/;"	m	struct:__anon1
probe_delay	ieee80211_defines.h	/^    int                                 probe_delay;            \/* delay in msec before sending probe request *\/$/;"	m	struct:_ieee80211_scan_params
psb	ieee80211_defines.h	/^    u_int8_t    psb;$/;"	m	struct:_ieee80211_tspec_info
r_retries	wrt-radauth.c	/^short r_retries = 8;$/;"	v
r_timeout	wrt-radauth.c	/^short r_timeout = 1;$/;"	v
ra	802.11.h	/^	struct ether_addr	ra;		\/* receiver address *\/$/;"	m	struct:dot11_ack_frame	typeref:struct:dot11_ack_frame::ether_addr
ra	802.11.h	/^	struct ether_addr	ra;		\/* receiver address *\/$/;"	m	struct:dot11_cf_end_frame	typeref:struct:dot11_cf_end_frame::ether_addr
ra	802.11.h	/^	struct ether_addr	ra;		\/* receiver address *\/$/;"	m	struct:dot11_cts_frame	typeref:struct:dot11_cts_frame::ether_addr
ra	802.11.h	/^	struct ether_addr	ra;		\/* receiver address *\/$/;"	m	struct:dot11_rts_frame	typeref:struct:dot11_rts_frame::ether_addr
radius	radius.c	/^int radius(char *host, short port, char *user, char *password, char *radsecret, short timeout)$/;"	f
radius_send_req	radius.c	/^int radius_send_req(char *host, short port, char *user, char *password, char *radsecret, struct sta *station)$/;"	f
rate	ieee80211_defines.h	/^    u_int32_t              rate;     \/* average rate in kbps *\/$/;"	m	struct:_ieee80211_rate_info
rate11a	_ieee80211.h	/^    u_int8_t                rate11a;        \/* rate thresh for 11a bss *\/$/;"	m	struct:ieee80211_roam
rate11b	_ieee80211.h	/^    u_int8_t                rate11b;        \/* for 11g sta in 11b bss *\/$/;"	m	struct:ieee80211_roam
rate11bOnly	_ieee80211.h	/^    u_int8_t                rate11bOnly;    \/* for 11b sta *\/$/;"	m	struct:ieee80211_roam
reason	ieee80211_defines.h	/^    ieee80211_scan_completion_reason    reason;$/;"	m	struct:_ieee80211_scan_event
remove_station_acl	wireless.c	/^int remove_station_acl (char *ifname, unsigned char *mac)$/;"	f
rep	802.11.h	/^	} PACKED rep;$/;"	m	struct:dot11_meas_rep	typeref:union:dot11_meas_rep::__anon6
repeat_probe_time	ieee80211_defines.h	/^    int                                 repeat_probe_time;      \/* time before sending second probe request *\/$/;"	m	struct:_ieee80211_scan_params
repeat_probe_time	ieee80211_defines.h	/^    int                    repeat_probe_time;      \/* time before sending second probe request *\/$/;"	m	struct:_ieee80211_scan_info
req_id	ieee80211_defines.h	/^    u_int16_t                           req_id; \/* Request ID passed to the scan_start function *\/$/;"	m	struct:_ieee80211_scan_event
req_id	ieee80211_defines.h	/^    u_int16_t              req_id;                 \/* originator ID passed to the scan_start function *\/$/;"	m	struct:_ieee80211_scan_info
reset_hw	ieee80211_defines.h	/^    u_int                   reset_hw:1,         \/* reset the actual H\/W *\/$/;"	m	struct:_ieee80211_reset_request
reset_mac	ieee80211_defines.h	/^                            reset_mac:1,        \/* reset MAC *\/$/;"	m	struct:_ieee80211_reset_request
reset_phy	ieee80211_defines.h	/^                            reset_phy:1,        \/* reset PHY *\/$/;"	m	struct:_ieee80211_reset_request
resolve_host	radius.c	/^int resolve_host(char* name)$/;"	f
retries	_ieee80211.h	/^    u_int32_t                       retries;$/;"	m	struct:ieee80211_fixed_rate
rs_abs_rssi	ieee80211_defines.h	/^    int         rs_abs_rssi;   \/* absolute RSSI *\/$/;"	m	struct:ieee80211_rx_status
rs_datarate	ieee80211_defines.h	/^    int         rs_datarate;   \/* data rate received *\/$/;"	m	struct:ieee80211_rx_status
rs_flags	ieee80211_defines.h	/^    int         rs_flags;$/;"	m	struct:ieee80211_rx_status
rs_freq	ieee80211_defines.h	/^    int         rs_freq;$/;"	m	struct:ieee80211_rx_status
rs_nrates	_ieee80211.h	/^    u_int8_t                rs_nrates;$/;"	m	struct:ieee80211_rateset
rs_phymode	ieee80211_defines.h	/^    enum ieee80211_phymode rs_phymode;$/;"	m	struct:ieee80211_rx_status	typeref:enum:ieee80211_rx_status::ieee80211_phymode
rs_rates	_ieee80211.h	/^    u_int8_t                rs_rates[IEEE80211_RATE_MAXSIZE];$/;"	m	struct:ieee80211_rateset
rs_rssi	ieee80211_defines.h	/^    int         rs_rssi;       \/* RSSI (noise floor ajusted) *\/$/;"	m	struct:ieee80211_rx_status
rs_tstamp	ieee80211_defines.h	/^    } rs_tstamp;$/;"	m	struct:ieee80211_rx_status	typeref:union:ieee80211_rx_status::__anon10
rsn_ie	ieee80211_ioctl.h	/^	u_int8_t    rsn_ie[IEEE80211_MAX_OPT_IE];$/;"	m	struct:ieee80211req_wpaie
rssi11a	_ieee80211.h	/^    int8_t                  rssi11a;        \/* rssi thresh for 11a bss *\/$/;"	m	struct:ieee80211_roam
rssi11b	_ieee80211.h	/^    int8_t                  rssi11b;        \/* for 11g sta in 11b bss *\/$/;"	m	struct:ieee80211_roam
rssi11bOnly	_ieee80211.h	/^    int8_t                  rssi11bOnly;    \/* for 11b sta *\/$/;"	m	struct:ieee80211_roam
rssi_ctrl	ieee80211_defines.h	/^    int8_t    rssi_ctrl[MAX_CHAINS];$/;"	m	struct:_wlan_rssi_info
rssi_ext	ieee80211_defines.h	/^    int8_t    rssi_ext[MAX_CHAINS];$/;"	m	struct:_wlan_rssi_info
rxcrc	802.11.h	/^	uint32		rxcrc;		\/* dot11FCSErrorCount *\/$/;"	m	struct:d11cnt
rxdup	802.11.h	/^	uint32		rxdup;		\/* dot11FrameduplicateCount *\/$/;"	m	struct:d11cnt
rxfrag	802.11.h	/^	uint32		rxfrag;		\/* dot11ReceivedFragmentCount *\/$/;"	m	struct:d11cnt
rxmic_offset	ieee80211_defines.h	/^    u_int16_t               rxmic_offset;   \/* TKIP\/SMS4 only: offset to rx mic key *\/$/;"	m	struct:_ieee80211_keyval
rxmulti	802.11.h	/^	uint32		rxmulti;	\/* dot11MulticastReceivedFrameCount *\/$/;"	m	struct:d11cnt
rxundec	802.11.h	/^	uint32		rxundec;	\/* dot11WEPUndecryptableCount *\/$/;"	m	struct:d11cnt
sa	802.11.h	/^	struct ether_addr	sa;		\/* transmitter address *\/$/;"	m	struct:dot11_management_header	typeref:struct:dot11_management_header::ether_addr
scan_entry	ieee80211_defines.h	/^    wlan_scan_entry_t                   scan_entry;$/;"	m	struct:_ieee80211_scan_event
scan_start_time	ieee80211_defines.h	/^    systime_t              scan_start_time;        \/* system time when last scani started *\/ $/;"	m	struct:_ieee80211_scan_info
secret	wrt-radauth.c	/^char *server_p,*server_s, *secret;$/;"	v
seq	802.11.h	/^	uint16			seq;		\/* sequence control *\/$/;"	m	struct:dot11_auth
seq	802.11.h	/^	uint16			seq;		\/* sequence control *\/$/;"	m	struct:dot11_header
seq	802.11.h	/^	uint16			seq;		\/* sequence control *\/$/;"	m	struct:dot11_management_header
series	_ieee80211.h	/^    u_int32_t                       series;$/;"	m	struct:ieee80211_fixed_rate
server_p	wrt-radauth.c	/^char *server_p,*server_s, *secret;$/;"	v
server_s	wrt-radauth.c	/^char *server_p,*server_s, *secret;$/;"	v
set_default_mib	ieee80211_defines.h	/^                            set_default_mib:1,  \/* set default MIB variables *\/$/;"	m	struct:_ieee80211_reset_request
set_sta_authorized	wireless.c	/^void set_sta_authorized (unsigned char *addr, unsigned char authorized)$/;"	f
srv_start_time	ieee80211_defines.h	/^    u_int32_t   srv_start_time;$/;"	m	struct:_ieee80211_tspec_info
ssap	802.11.h	/^	uint8	ssap;				\/* always 0xAA *\/$/;"	m	struct:dot11_llc_snap_header
ssid	ieee80211_defines.h	/^    u_int8_t    ssid[IEEE80211_NWID_LEN];$/;"	m	struct:_ieee80211_ssid
ssid_list	ieee80211_defines.h	/^    ieee80211_ssid                      ssid_list[IEEE80211_SCAN_PARAMS_MAX_SSID];$/;"	m	struct:_ieee80211_scan_params
sta	radius.h	/^struct  sta {$/;"	s
start_time	802.11.h	/^			uint8 start_time[8];$/;"	m	struct:dot11_meas_rep::__anon6::__anon7
start_time	802.11.h	/^	uint8 start_time[8];$/;"	m	struct:__anon5
start_time	802.11.h	/^	uint8 start_time[8];$/;"	m	struct:dot11_meas_rep_basic
status	802.11.h	/^	uint16			status;		\/* status code *\/$/;"	m	struct:dot11_assoc_resp
status	802.11.h	/^	uint16			status;		\/* status code *\/$/;"	m	struct:dot11_auth
status	ieee80211_defines.h	/^    u_int16_t              status;$/;"	m	struct:ieee80211_addba_delba_request
status	ieee80211_ioctl.h	/^    IEEE80211_WLANCONFIG_STATUS status;     \/* status code *\/$/;"	m	struct:ieee80211_wlanconfig
surplus_bw	ieee80211_defines.h	/^    u_int16_t   surplus_bw;$/;"	m	struct:_ieee80211_tspec_info
suspension_interval	ieee80211_defines.h	/^    u_int32_t   suspension_interval;$/;"	m	struct:_ieee80211_tspec_info
ta	802.11.h	/^	struct ether_addr	ta;		\/* transmitter address *\/$/;"	m	struct:dot11_ps_poll_frame	typeref:struct:dot11_ps_poll_frame::ether_addr
ta	802.11.h	/^	struct ether_addr	ta;		\/* transmitter address *\/$/;"	m	struct:dot11_rts_frame	typeref:struct:dot11_rts_frame::ether_addr
tid	ieee80211_defines.h	/^    u_int8_t               tid;$/;"	m	struct:ieee80211_addba_delba_request
timestamp	802.11.h	/^	uint32			timestamp[2];$/;"	m	struct:dot11_bcn_prb
timestamp	ieee80211_defines.h	/^    u_int32_t   timestamp;$/;"	m	struct:tkip_countermeasure
tkip_countermeasure	ieee80211_defines.h	/^struct tkip_countermeasure {$/;"	s
token	802.11.h	/^	uint8	token;$/;"	m	struct:dot11_action_measure
token	802.11.h	/^	uint8 token;$/;"	m	struct:__anon5
token	802.11.h	/^	uint8 token;$/;"	m	struct:dot11_meas_rep
traffic_type	ieee80211_defines.h	/^    u_int8_t    traffic_type;$/;"	m	struct:_ieee80211_tspec_info
ts_flags	ieee80211_defines.h	/^    int         ts_flags;$/;"	m	struct:ieee80211_tx_status
ts_retries	ieee80211_defines.h	/^    int         ts_retries;     \/* number of retries to successfully transmit this frame *\/$/;"	m	struct:ieee80211_tx_status
tsf	ieee80211_defines.h	/^        u_int64_t           tsf;$/;"	m	union:ieee80211_rx_status::__anon10
tx_pwr	802.11.h	/^	uint8 tx_pwr;$/;"	m	struct:__anon3
txfail	802.11.h	/^	uint32		txfail;		\/* dot11FailedCount *\/$/;"	m	struct:d11cnt
txfrag	802.11.h	/^	uint32		txfrag;		\/* dot11TransmittedFragmentCount *\/$/;"	m	struct:d11cnt
txfrmsnt	802.11.h	/^	uint32		txfrmsnt;	\/* dot11TransmittedFrameCount *\/$/;"	m	struct:d11cnt
txmic_offset	ieee80211_defines.h	/^    u_int16_t               txmic_offset;   \/* TKIP\/SMS4 only: offset to tx mic key *\/$/;"	m	struct:_ieee80211_keyval
txmulti	802.11.h	/^	uint32		txmulti;	\/* dot11MulticastTransmittedFrameCount *\/$/;"	m	struct:d11cnt
txnoack	802.11.h	/^	uint32		txnoack;	\/* dot11ACKFailureCount *\/$/;"	m	struct:d11cnt
txnocts	802.11.h	/^	uint32		txnocts;	\/* dot11RTSFailureCount *\/$/;"	m	struct:d11cnt
txretrie	802.11.h	/^	uint32		txretrie;	\/* dot11MultipleRetryCount *\/$/;"	m	struct:d11cnt
txretry	802.11.h	/^	uint32		txretry;	\/* dot11RetryCount *\/$/;"	m	struct:d11cnt
txrts	802.11.h	/^	uint32		txrts;		\/* dot11RTSSuccessCount *\/$/;"	m	struct:d11cnt
type	802.11.h	/^	uint16	type;				\/* ethertype *\/$/;"	m	struct:dot11_llc_snap_header
type	802.11.h	/^	uint8 type;$/;"	m	struct:__anon5
type	802.11.h	/^	uint8 type;$/;"	m	struct:dot11_meas_rep
type	ieee80211_defines.h	/^    ieee80211_rate_type    type;$/;"	m	struct:_ieee80211_rate_info
type	ieee80211_defines.h	/^    ieee80211_reset_type    type;$/;"	m	struct:_ieee80211_reset_request
type	ieee80211_defines.h	/^    ieee80211_scan_event_type           type;$/;"	m	struct:_ieee80211_scan_event
type	ieee80211_defines.h	/^    ieee80211_scan_type                 type;$/;"	m	struct:_ieee80211_scan_params
type	ieee80211_defines.h	/^    ieee80211_scan_type    type;$/;"	m	struct:_ieee80211_scan_info
uchar	typedefs.h	/^typedef unsigned char uchar;$/;"	t
uint	typedefs.h	/^typedef unsigned int	uint;$/;"	t
uint16	typedefs.h	/^typedef unsigned short	uint16;$/;"	t
uint32	typedefs.h	/^typedef unsigned int	uint32;$/;"	t
uint64	typedefs.h	/^typedef unsigned __int64 uint64;$/;"	t
uint64	typedefs.h	/^typedef unsigned long long       uint64;$/;"	t
uint64	typedefs.h	/^typedef unsigned long long uint64;$/;"	t
uint8	typedefs.h	/^typedef unsigned char	uint8;$/;"	t
ulong	typedefs.h	/^typedef unsigned long	ulong;$/;"	t
ushort	typedefs.h	/^typedef unsigned short	ushort;$/;"	t
valid_mask	ieee80211_defines.h	/^    u_int8_t    valid_mask;   \/* bitmap of valid elements in rssi_ctrl\/ext array *\/$/;"	m	struct:_wlan_rssi_info
ver	802.11.h	/^	uchar	ver;$/;"	m	struct:brcm_ie
wlan_beacon_miss_indication	ieee80211_defines.h	/^    void (*wlan_beacon_miss_indication)(os_handle_t);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_chan_t	ieee80211_defines.h	/^typedef struct ieee80211_channel *wlan_chan_t;$/;"	t	typeref:struct:ieee80211_channel
wlan_channel_change	ieee80211_defines.h	/^    void (*wlan_channel_change) (os_handle_t, wlan_chan_t chan);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_country_changed	ieee80211_defines.h	/^    void (*wlan_country_changed) (os_handle_t, char *country);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_dev_event_handler_table	ieee80211_defines.h	/^} wlan_dev_event_handler_table;$/;"	t	typeref:struct:_wlan_dev_event_handler_table
wlan_dev_spectral_indicate	ieee80211_defines.h	/^    void (*wlan_dev_spectral_indicate)(void*, void*, u_int32_t);$/;"	m	struct:_wlan_dev_event_handler_table
wlan_dev_t	ieee80211_defines.h	/^typedef struct ieee80211com *wlan_dev_t; $/;"	t	typeref:struct:ieee80211com
wlan_dev_vap_event	ieee80211_defines.h	/^    void (*wlan_dev_vap_event) (void *event_arg, wlan_dev_t, os_if_t, ieee80211_dev_vap_event);  \/* callback to receive vap events*\/$/;"	m	struct:_wlan_dev_event_handler_table
wlan_dev_xmit_queue	ieee80211_defines.h	/^    int  (*wlan_dev_xmit_queue) (os_if_t osif, wbuf_t wbuf);                \/* queue packet to the device for transmit *\/$/;"	m	struct:_wlan_event_handler_table
wlan_device_error_indication	ieee80211_defines.h	/^    void (*wlan_device_error_indication)(os_handle_t);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_event_handler_table	ieee80211_defines.h	/^} wlan_event_handler_table;$/;"	t	typeref:struct:_wlan_event_handler_table
wlan_if_t	ieee80211_defines.h	/^typedef struct ieee80211vap *wlan_if_t; $/;"	t	typeref:struct:ieee80211vap
wlan_linkspeed	ieee80211_defines.h	/^    void (*wlan_linkspeed)(os_handle_t, u_int32_t rxlinkspeed, u_int32_t txlinkspeed);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_michael_failure_indication	ieee80211_defines.h	/^    void (*wlan_michael_failure_indication)(os_handle_t, const u_int8_t *frm, u_int keyix);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_misc_event_handler_table	ieee80211_defines.h	/^} wlan_misc_event_handler_table;$/;"	t	typeref:struct:_wlan_misc_event_handler_table
wlan_mlme_event_handler_table	ieee80211_defines.h	/^} wlan_mlme_event_handler_table;$/;"	t	typeref:struct:_wlan_mlme_event_handler_table
wlan_node_t	ieee80211_defines.h	/^typedef struct ieee80211_node *wlan_node_t;$/;"	t	typeref:struct:ieee80211_node
wlan_radar_detected	ieee80211_defines.h	/^    void (*wlan_radar_detected) (os_if_t, u_int32_t csa_delay);$/;"	m	struct:_wlan_mlme_event_handler_table
wlan_receive	ieee80211_defines.h	/^    void (*wlan_receive) (os_if_t osif, wbuf_t wbuf,$/;"	m	struct:_wlan_event_handler_table
wlan_receive_filter_80211	ieee80211_defines.h	/^    int  (*wlan_receive_filter_80211) (os_if_t osif, wbuf_t wbuf,$/;"	m	struct:_wlan_event_handler_table
wlan_receive_monitor_80211	ieee80211_defines.h	/^    void (*wlan_receive_monitor_80211) (os_if_t osif, wbuf_t wbuf,$/;"	m	struct:_wlan_event_handler_table
wlan_replay_failure_indication	ieee80211_defines.h	/^    void (*wlan_replay_failure_indication)(os_handle_t, const u_int8_t *frm, u_int keyix);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_rssi_info	ieee80211_defines.h	/^} wlan_rssi_info;$/;"	t	typeref:struct:_wlan_rssi_info
wlan_rssi_type	ieee80211_defines.h	/^} wlan_rssi_type;$/;"	t	typeref:enum:_wlan_rssi_type
wlan_scan_entry_t	ieee80211_defines.h	/^typedef struct ieee80211_scan_entry *wlan_scan_entry_t;$/;"	t	typeref:struct:ieee80211_scan_entry
wlan_sta_clonemac_indication	ieee80211_defines.h	/^    void (*wlan_sta_clonemac_indication)(os_handle_t);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_sta_scan_entry_update	ieee80211_defines.h	/^    void (*wlan_sta_scan_entry_update)(os_handle_t, wlan_scan_entry_t scan_entry);$/;"	m	struct:_wlan_misc_event_handler_table
wlan_vap_xmit_queue	ieee80211_defines.h	/^    void (*wlan_vap_xmit_queue) (os_if_t osif, wbuf_t wbuf);                \/* queue packet to the interface for transmit *\/$/;"	m	struct:_wlan_event_handler_table
wlan_wme_param	ieee80211_defines.h	/^} wlan_wme_param;$/;"	t	typeref:enum:_wlan_wme_param
wlan_xmit_update_status	ieee80211_defines.h	/^    void (*wlan_xmit_update_status)(os_if_t osif, wbuf_t wbuf,$/;"	m	struct:_wlan_event_handler_table
wpa_ie	ieee80211_ioctl.h	/^	u_int8_t	wpa_ie[IEEE80211_MAX_OPT_IE];$/;"	m	struct:ieee80211req_wpaie
wpa_macaddr	ieee80211_ioctl.h	/^	u_int8_t	wpa_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_wpaie
wps_ie	ieee80211_ioctl.h	/^	u_int8_t    wps_ie[IEEE80211_MAX_OPT_IE];$/;"	m	struct:ieee80211req_wpaie
wsc_ie	ieee80211_ioctl.h	/^	u_int8_t	wsc_ie[IEEE80211_MAX_WSC_IE];$/;"	m	struct:ieee80211req_wscie
wsc_macaddr	ieee80211_ioctl.h	/^	u_int8_t	wsc_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_wscie
