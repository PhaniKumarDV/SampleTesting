Index: hostapd-2016-10-02/hostapd/config_file.c
===================================================================
--- hostapd-2016-10-02.orig/hostapd/config_file.c	2017-04-24 13:13:05.558342757 +0530
+++ hostapd-2016-10-02/hostapd/config_file.c	2017-04-24 13:13:05.554342802 +0530
@@ -2863,6 +2863,10 @@
 		}
 #endif /* CONFIG_IEEE80211W */
 #ifdef CONFIG_IEEE80211N
+	} else if (os_strcmp(buf, "noscan") == 0) {
+		conf->noscan = atoi(pos);
+	} else if (os_strcmp(buf, "ht_coex") == 0) {
+		conf->no_ht_coex = !atoi(pos);
 	} else if (os_strcmp(buf, "ieee80211n") == 0) {
 		conf->ieee80211n = atoi(pos);
 	} else if (os_strcmp(buf, "ht_capab") == 0) {
Index: hostapd-2016-10-02/src/ap/ap_config.h
===================================================================
--- hostapd-2016-10-02.orig/src/ap/ap_config.h	2017-04-24 13:13:05.558342757 +0530
+++ hostapd-2016-10-02/src/ap/ap_config.h	2017-04-24 13:13:05.554342802 +0530
@@ -664,6 +664,8 @@
 
 	int ht_op_mode_fixed;
 	u16 ht_capab;
+	int noscan;
+	int no_ht_coex;
 	int ieee80211n;
 	int secondary_channel;
 	int no_pri_sec_switch;
Index: hostapd-2016-10-02/src/ap/hw_features.c
===================================================================
--- hostapd-2016-10-02.orig/src/ap/hw_features.c	2017-04-24 13:13:05.558342757 +0530
+++ hostapd-2016-10-02/src/ap/hw_features.c	2017-04-24 13:14:31.641706421 +0530
@@ -474,7 +474,7 @@
 	int ret;
 
 	/* Check that HT40 is used and PRI / SEC switch is allowed */
-	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch)
+	if (!iface->conf->secondary_channel || iface->conf->no_pri_sec_switch || iface->conf->noscan)
 		return 0;
 
 	hostapd_set_state(iface, HAPD_IFACE_HT_SCAN);
Index: hostapd-2016-10-02/src/ap/ieee802_11_ht.c
===================================================================
--- hostapd-2016-10-02.orig/src/ap/ieee802_11_ht.c	2017-04-24 13:13:05.558342757 +0530
+++ hostapd-2016-10-02/src/ap/ieee802_11_ht.c	2017-04-24 13:13:05.558342757 +0530
@@ -244,6 +244,9 @@
 	if (!(iface->conf->ht_capab & HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET))
 		return;
 
+	if (iface->conf->noscan || iface->conf->no_ht_coex)
+		return;
+
 	if (len < IEEE80211_HDRLEN + 2 + sizeof(*bc_ie))
 		return;
 
@@ -368,6 +371,9 @@
 	if (iface->current_mode->mode != HOSTAPD_MODE_IEEE80211G)
 		return;
 
+	if (iface->conf->noscan || iface->conf->no_ht_coex)
+		return;
+
 	wpa_printf(MSG_INFO, "HT: Forty MHz Intolerant is set by STA " MACSTR
 		   " in Association Request", MAC2STR(sta->addr));
 
