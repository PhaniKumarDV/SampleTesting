Index: hostapd-2016-10-02/hostapd/main.c
===================================================================
--- hostapd-2016-10-02.orig/hostapd/main.c	2017-04-24 13:35:45.396275524 +0530
+++ hostapd-2016-10-02/hostapd/main.c	2017-04-24 13:47:51.226859396 +0530
@@ -15,6 +15,7 @@
 #include "utils/common.h"
 #include "utils/eloop.h"
 #include "utils/uuid.h"
+#include "utils/build_features.h"
 #include "crypto/random.h"
 #include "crypto/tls.h"
 #include "common/version.h"
@@ -664,7 +665,7 @@
 	wpa_supplicant_event = hostapd_wpa_event;
 
 	for (;;) {
-		c = getopt(argc, argv, "b:Bde:f:hi:KP:STtu:vg:G:");
+		c = getopt(argc, argv, "b:Bde:f:hi:KP:STtu:g:G:v::");
 		if (c < 0)
 			break;
 		switch (c) {
@@ -701,6 +702,8 @@
 			break;
 #endif /* CONFIG_DEBUG_LINUX_TRACING */
 		case 'v':
+			if (optarg)
+				exit(!has_feature(optarg));
 			show_version();
 			exit(1);
 			break;
Index: hostapd-2016-10-02/src/utils/build_features.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ hostapd-2016-10-02/src/utils/build_features.h	2017-04-24 13:35:45.392275555 +0530
@@ -0,0 +1,17 @@
+#ifndef BUILD_FEATURES_H
+#define BUILD_FEATURES_H
+
+static inline int has_feature(const char *feat)
+{
+#ifdef IEEE8021X_EAPOL
+	if (!strcmp(feat, "eap"))
+		return 1;
+#endif
+#ifdef IEEE80211N
+	if (!strcmp(feat, "11n"))
+		return 1;
+#endif
+	return 0;
+}
+
+#endif /* BUILD_FEATURES_H */
Index: hostapd-2016-10-02/wpa_supplicant/main.c
===================================================================
--- hostapd-2016-10-02.orig/wpa_supplicant/main.c	2017-04-24 13:35:45.396275524 +0530
+++ hostapd-2016-10-02/wpa_supplicant/main.c	2017-04-24 13:35:45.396275524 +0530
@@ -12,6 +12,7 @@
 #endif /* __linux__ */
 
 #include "common.h"
+#include "build_features.h"
 #include "fst/fst.h"
 #include "wpa_supplicant_i.h"
 #include "driver_i.h"
@@ -305,8 +306,12 @@
 			break;
 #endif /* CONFIG_DBUS */
 		case 'v':
-			printf("%s\n", wpa_supplicant_version);
-			exitcode = 0;
+			if (optarg) {
+				exitcode = !has_feature(optarg);
+			} else {
+				printf("%s\n", wpa_supplicant_version);
+				exitcode = 0;
+			}
 			goto out;
 		case 'W':
 			params.wait_for_monitor++;
